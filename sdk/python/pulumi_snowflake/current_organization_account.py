# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CurrentOrganizationAccountArgs', 'CurrentOrganizationAccount']

@pulumi.input_type
class CurrentOrganizationAccountArgs:
    def __init__(__self__, *,
                 abort_detached_query: Optional[pulumi.Input[_builtins.bool]] = None,
                 active_python_profiler: Optional[pulumi.Input[_builtins.str]] = None,
                 allow_client_mfa_caching: Optional[pulumi.Input[_builtins.bool]] = None,
                 allow_id_token: Optional[pulumi.Input[_builtins.bool]] = None,
                 autocommit: Optional[pulumi.Input[_builtins.bool]] = None,
                 base_location_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog_sync: Optional[pulumi.Input[_builtins.str]] = None,
                 client_enable_log_info_statement_parameters: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_encryption_key_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_memory_limit: Optional[pulumi.Input[_builtins.int]] = None,
                 client_metadata_request_use_connection_ctx: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_metadata_use_session_database: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_prefetch_threads: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_chunk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_column_case_insensitive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive_heartbeat_frequency: Optional[pulumi.Input[_builtins.int]] = None,
                 client_timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 comment: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_enabled_cross_region: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_models_allowlist: Optional[pulumi.Input[_builtins.str]] = None,
                 csv_timestamp_format: Optional[pulumi.Input[_builtins.str]] = None,
                 data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 date_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 date_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 default_ddl_collation: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_cpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_gpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_null_ordering: Optional[pulumi.Input[_builtins.str]] = None,
                 default_streamlit_notebook_warehouse: Optional[pulumi.Input[_builtins.str]] = None,
                 disable_ui_download_button: Optional[pulumi.Input[_builtins.bool]] = None,
                 disable_user_privilege_grants: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_automatic_sensitive_data_classification_log: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_egress_cost_optimizer: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_identifier_first_login: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_internal_stages_privatelink: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_image_repository: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unhandled_exceptions_reporting: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unload_physical_type_optimization: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_query_syntax_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_secure_object_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enforce_network_rules_for_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_merge: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_update: Optional[pulumi.Input[_builtins.bool]] = None,
                 event_table: Optional[pulumi.Input[_builtins.str]] = None,
                 external_oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 external_volume: Optional[pulumi.Input[_builtins.str]] = None,
                 geography_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 geometry_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 hybrid_table_lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 initial_replication_size_limit_in_tb: Optional[pulumi.Input[_builtins.str]] = None,
                 jdbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_treat_timestamp_ntz_as_utc: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_use_session_timezone: Optional[pulumi.Input[_builtins.bool]] = None,
                 js_treat_integer_as_bigint: Optional[pulumi.Input[_builtins.bool]] = None,
                 json_indent: Optional[pulumi.Input[_builtins.int]] = None,
                 listing_auto_fulfillment_replication_refresh_schedule: Optional[pulumi.Input[_builtins.str]] = None,
                 lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 log_level: Optional[pulumi.Input[_builtins.str]] = None,
                 max_concurrency_level: Optional[pulumi.Input[_builtins.int]] = None,
                 max_data_extension_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 metric_level: Optional[pulumi.Input[_builtins.str]] = None,
                 min_data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 multi_statement_count: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 noorder_sequence_as_default: Optional[pulumi.Input[_builtins.bool]] = None,
                 oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 odbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 password_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 periodic_data_rekeying: Optional[pulumi.Input[_builtins.bool]] = None,
                 pipe_execution_paused: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_inline_url: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 python_profiler_modules: Optional[pulumi.Input[_builtins.str]] = None,
                 python_profiler_target_stage: Optional[pulumi.Input[_builtins.str]] = None,
                 query_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 quoted_identifiers_ignore_case: Optional[pulumi.Input[_builtins.bool]] = None,
                 replace_invalid_characters: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_creation: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_operation: Optional[pulumi.Input[_builtins.bool]] = None,
                 resource_monitor: Optional[pulumi.Input[_builtins.str]] = None,
                 rows_per_resultset: Optional[pulumi.Input[_builtins.int]] = None,
                 s3_stage_vpce_dns_name: Optional[pulumi.Input[_builtins.str]] = None,
                 saml_identity_provider: Optional[pulumi.Input[_builtins.str]] = None,
                 search_path: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_max_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_min_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 session_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 simulated_data_sharing_consumer: Optional[pulumi.Input[_builtins.str]] = None,
                 sso_login_page: Optional[pulumi.Input[_builtins.bool]] = None,
                 statement_queued_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 statement_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 storage_serialization_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 strict_json_output: Optional[pulumi.Input[_builtins.bool]] = None,
                 suspend_task_after_num_failures: Optional[pulumi.Input[_builtins.int]] = None,
                 task_auto_retry_attempts: Optional[pulumi.Input[_builtins.int]] = None,
                 time_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 time_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_day_is_always24h: Optional[pulumi.Input[_builtins.bool]] = None,
                 timestamp_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ltz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ntz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_tz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timezone: Optional[pulumi.Input[_builtins.str]] = None,
                 trace_level: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_abort_on_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 transaction_default_isolation_level: Optional[pulumi.Input[_builtins.str]] = None,
                 two_digit_century_start: Optional[pulumi.Input[_builtins.int]] = None,
                 unsupported_ddl_action: Optional[pulumi.Input[_builtins.str]] = None,
                 use_cached_result: Optional[pulumi.Input[_builtins.bool]] = None,
                 user_task_managed_initial_warehouse_size: Optional[pulumi.Input[_builtins.str]] = None,
                 user_task_minimum_trigger_interval_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 user_task_timeout_ms: Optional[pulumi.Input[_builtins.int]] = None,
                 week_of_year_policy: Optional[pulumi.Input[_builtins.int]] = None,
                 week_start: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a CurrentOrganizationAccount resource.
        :param pulumi.Input[_builtins.bool] abort_detached_query: Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        :param pulumi.Input[_builtins.str] active_python_profiler: Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        :param pulumi.Input[_builtins.bool] allow_client_mfa_caching: Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        :param pulumi.Input[_builtins.bool] allow_id_token: Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        :param pulumi.Input[_builtins.bool] autocommit: Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        :param pulumi.Input[_builtins.str] base_location_prefix: Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        :param pulumi.Input[_builtins.str] binary_input_format: The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        :param pulumi.Input[_builtins.str] binary_output_format: The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        :param pulumi.Input[_builtins.str] catalog: Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        :param pulumi.Input[_builtins.str] catalog_sync: Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        :param pulumi.Input[_builtins.bool] client_enable_log_info_statement_parameters: Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        :param pulumi.Input[_builtins.int] client_encryption_key_size: Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        :param pulumi.Input[_builtins.int] client_memory_limit: Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        :param pulumi.Input[_builtins.bool] client_metadata_request_use_connection_ctx: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        :param pulumi.Input[_builtins.bool] client_metadata_use_session_database: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        :param pulumi.Input[_builtins.int] client_prefetch_threads: Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        :param pulumi.Input[_builtins.int] client_result_chunk_size: Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        :param pulumi.Input[_builtins.bool] client_result_column_case_insensitive: Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        :param pulumi.Input[_builtins.bool] client_session_keep_alive: Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        :param pulumi.Input[_builtins.int] client_session_keep_alive_heartbeat_frequency: Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        :param pulumi.Input[_builtins.str] client_timestamp_type_mapping: Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] comment: Specifies a comment for the organization account.
        :param pulumi.Input[_builtins.str] cortex_enabled_cross_region: Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        :param pulumi.Input[_builtins.str] cortex_models_allowlist: Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        :param pulumi.Input[_builtins.str] csv_timestamp_format: Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        :param pulumi.Input[_builtins.int] data_retention_time_in_days: Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        :param pulumi.Input[_builtins.str] date_input_format: Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        :param pulumi.Input[_builtins.str] date_output_format: Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        :param pulumi.Input[_builtins.str] default_ddl_collation: Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_cpu: Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_gpu: Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        :param pulumi.Input[_builtins.str] default_null_ordering: Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        :param pulumi.Input[_builtins.str] default_streamlit_notebook_warehouse: Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        :param pulumi.Input[_builtins.bool] disable_ui_download_button: Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        :param pulumi.Input[_builtins.bool] disable_user_privilege_grants: Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        :param pulumi.Input[_builtins.bool] enable_automatic_sensitive_data_classification_log: Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        :param pulumi.Input[_builtins.bool] enable_egress_cost_optimizer: Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        :param pulumi.Input[_builtins.bool] enable_identifier_first_login: Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        :param pulumi.Input[_builtins.bool] enable_internal_stages_privatelink: Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_image_repository: Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        :param pulumi.Input[_builtins.bool] enable_unhandled_exceptions_reporting: Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        :param pulumi.Input[_builtins.bool] enable_unload_physical_type_optimization: Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        :param pulumi.Input[_builtins.bool] enable_unredacted_query_syntax_error: Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        :param pulumi.Input[_builtins.bool] enable_unredacted_secure_object_error: Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        :param pulumi.Input[_builtins.bool] enforce_network_rules_for_internal_stages: Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_merge: Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_update: Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        :param pulumi.Input[_builtins.str] event_table: Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        :param pulumi.Input[_builtins.bool] external_oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.str] external_volume: Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        :param pulumi.Input[_builtins.str] geography_output_format: Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        :param pulumi.Input[_builtins.str] geometry_output_format: Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        :param pulumi.Input[_builtins.int] hybrid_table_lock_timeout: Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        :param pulumi.Input[_builtins.str] initial_replication_size_limit_in_tb: Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        :param pulumi.Input[_builtins.bool] jdbc_treat_decimal_as_int: Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.bool] jdbc_treat_timestamp_ntz_as_utc: Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        :param pulumi.Input[_builtins.bool] jdbc_use_session_timezone: Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        :param pulumi.Input[_builtins.bool] js_treat_integer_as_bigint: Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        :param pulumi.Input[_builtins.int] json_indent: Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        :param pulumi.Input[_builtins.str] listing_auto_fulfillment_replication_refresh_schedule: Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        :param pulumi.Input[_builtins.int] lock_timeout: Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        :param pulumi.Input[_builtins.str] log_level: Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        :param pulumi.Input[_builtins.int] max_concurrency_level: Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        :param pulumi.Input[_builtins.int] max_data_extension_time_in_days: Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        :param pulumi.Input[_builtins.str] metric_level: Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        :param pulumi.Input[_builtins.int] min_data_retention_time_in_days: Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        :param pulumi.Input[_builtins.int] multi_statement_count: Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        :param pulumi.Input[_builtins.str] name: The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        :param pulumi.Input[_builtins.str] network_policy: Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        :param pulumi.Input[_builtins.bool] noorder_sequence_as_default: Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        :param pulumi.Input[_builtins.bool] oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.bool] odbc_treat_decimal_as_int: Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.str] password_policy: Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        :param pulumi.Input[_builtins.bool] periodic_data_rekeying: It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        :param pulumi.Input[_builtins.bool] pipe_execution_paused: Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_inline_url: Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_internal_stages: Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        :param pulumi.Input[_builtins.str] python_profiler_modules: Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        :param pulumi.Input[_builtins.str] python_profiler_target_stage: Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        :param pulumi.Input[_builtins.str] query_tag: Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        :param pulumi.Input[_builtins.bool] quoted_identifiers_ignore_case: Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        :param pulumi.Input[_builtins.bool] replace_invalid_characters: Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_creation: Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_operation: Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        :param pulumi.Input[_builtins.int] rows_per_resultset: Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        :param pulumi.Input[_builtins.str] s3_stage_vpce_dns_name: Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        :param pulumi.Input[_builtins.str] saml_identity_provider: Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        :param pulumi.Input[_builtins.str] search_path: Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        :param pulumi.Input[_builtins.str] serverless_task_max_statement_size: Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        :param pulumi.Input[_builtins.str] serverless_task_min_statement_size: Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        :param pulumi.Input[_builtins.str] session_policy: Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        :param pulumi.Input[_builtins.str] simulated_data_sharing_consumer: Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        :param pulumi.Input[_builtins.bool] sso_login_page: This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        :param pulumi.Input[_builtins.int] statement_queued_timeout_in_seconds: Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        :param pulumi.Input[_builtins.int] statement_timeout_in_seconds: Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        :param pulumi.Input[_builtins.str] storage_serialization_policy: Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        :param pulumi.Input[_builtins.bool] strict_json_output: This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        :param pulumi.Input[_builtins.int] suspend_task_after_num_failures: Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        :param pulumi.Input[_builtins.int] task_auto_retry_attempts: Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        :param pulumi.Input[_builtins.str] time_input_format: Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        :param pulumi.Input[_builtins.str] time_output_format: Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        :param pulumi.Input[_builtins.bool] timestamp_day_is_always24h: Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        :param pulumi.Input[_builtins.str] timestamp_input_format: Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        :param pulumi.Input[_builtins.str] timestamp_ltz_output_format: Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_ntz_output_format: Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_output_format: Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        :param pulumi.Input[_builtins.str] timestamp_type_mapping: Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] timestamp_tz_output_format: Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        :param pulumi.Input[_builtins.str] timezone: Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        :param pulumi.Input[_builtins.str] trace_level: Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        :param pulumi.Input[_builtins.bool] transaction_abort_on_error: Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        :param pulumi.Input[_builtins.str] transaction_default_isolation_level: Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        :param pulumi.Input[_builtins.int] two_digit_century_start: Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        :param pulumi.Input[_builtins.str] unsupported_ddl_action: Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        :param pulumi.Input[_builtins.bool] use_cached_result: Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        :param pulumi.Input[_builtins.str] user_task_managed_initial_warehouse_size: Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        :param pulumi.Input[_builtins.int] user_task_minimum_trigger_interval_in_seconds: Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        :param pulumi.Input[_builtins.int] user_task_timeout_ms: Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        :param pulumi.Input[_builtins.int] week_of_year_policy: Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        :param pulumi.Input[_builtins.int] week_start: Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        if abort_detached_query is not None:
            pulumi.set(__self__, "abort_detached_query", abort_detached_query)
        if active_python_profiler is not None:
            pulumi.set(__self__, "active_python_profiler", active_python_profiler)
        if allow_client_mfa_caching is not None:
            pulumi.set(__self__, "allow_client_mfa_caching", allow_client_mfa_caching)
        if allow_id_token is not None:
            pulumi.set(__self__, "allow_id_token", allow_id_token)
        if autocommit is not None:
            pulumi.set(__self__, "autocommit", autocommit)
        if base_location_prefix is not None:
            pulumi.set(__self__, "base_location_prefix", base_location_prefix)
        if binary_input_format is not None:
            pulumi.set(__self__, "binary_input_format", binary_input_format)
        if binary_output_format is not None:
            pulumi.set(__self__, "binary_output_format", binary_output_format)
        if catalog is not None:
            pulumi.set(__self__, "catalog", catalog)
        if catalog_sync is not None:
            pulumi.set(__self__, "catalog_sync", catalog_sync)
        if client_enable_log_info_statement_parameters is not None:
            pulumi.set(__self__, "client_enable_log_info_statement_parameters", client_enable_log_info_statement_parameters)
        if client_encryption_key_size is not None:
            pulumi.set(__self__, "client_encryption_key_size", client_encryption_key_size)
        if client_memory_limit is not None:
            pulumi.set(__self__, "client_memory_limit", client_memory_limit)
        if client_metadata_request_use_connection_ctx is not None:
            pulumi.set(__self__, "client_metadata_request_use_connection_ctx", client_metadata_request_use_connection_ctx)
        if client_metadata_use_session_database is not None:
            pulumi.set(__self__, "client_metadata_use_session_database", client_metadata_use_session_database)
        if client_prefetch_threads is not None:
            pulumi.set(__self__, "client_prefetch_threads", client_prefetch_threads)
        if client_result_chunk_size is not None:
            pulumi.set(__self__, "client_result_chunk_size", client_result_chunk_size)
        if client_result_column_case_insensitive is not None:
            pulumi.set(__self__, "client_result_column_case_insensitive", client_result_column_case_insensitive)
        if client_session_keep_alive is not None:
            pulumi.set(__self__, "client_session_keep_alive", client_session_keep_alive)
        if client_session_keep_alive_heartbeat_frequency is not None:
            pulumi.set(__self__, "client_session_keep_alive_heartbeat_frequency", client_session_keep_alive_heartbeat_frequency)
        if client_timestamp_type_mapping is not None:
            pulumi.set(__self__, "client_timestamp_type_mapping", client_timestamp_type_mapping)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if cortex_enabled_cross_region is not None:
            pulumi.set(__self__, "cortex_enabled_cross_region", cortex_enabled_cross_region)
        if cortex_models_allowlist is not None:
            pulumi.set(__self__, "cortex_models_allowlist", cortex_models_allowlist)
        if csv_timestamp_format is not None:
            pulumi.set(__self__, "csv_timestamp_format", csv_timestamp_format)
        if data_retention_time_in_days is not None:
            pulumi.set(__self__, "data_retention_time_in_days", data_retention_time_in_days)
        if date_input_format is not None:
            pulumi.set(__self__, "date_input_format", date_input_format)
        if date_output_format is not None:
            pulumi.set(__self__, "date_output_format", date_output_format)
        if default_ddl_collation is not None:
            pulumi.set(__self__, "default_ddl_collation", default_ddl_collation)
        if default_notebook_compute_pool_cpu is not None:
            pulumi.set(__self__, "default_notebook_compute_pool_cpu", default_notebook_compute_pool_cpu)
        if default_notebook_compute_pool_gpu is not None:
            pulumi.set(__self__, "default_notebook_compute_pool_gpu", default_notebook_compute_pool_gpu)
        if default_null_ordering is not None:
            pulumi.set(__self__, "default_null_ordering", default_null_ordering)
        if default_streamlit_notebook_warehouse is not None:
            pulumi.set(__self__, "default_streamlit_notebook_warehouse", default_streamlit_notebook_warehouse)
        if disable_ui_download_button is not None:
            pulumi.set(__self__, "disable_ui_download_button", disable_ui_download_button)
        if disable_user_privilege_grants is not None:
            pulumi.set(__self__, "disable_user_privilege_grants", disable_user_privilege_grants)
        if enable_automatic_sensitive_data_classification_log is not None:
            pulumi.set(__self__, "enable_automatic_sensitive_data_classification_log", enable_automatic_sensitive_data_classification_log)
        if enable_egress_cost_optimizer is not None:
            pulumi.set(__self__, "enable_egress_cost_optimizer", enable_egress_cost_optimizer)
        if enable_identifier_first_login is not None:
            pulumi.set(__self__, "enable_identifier_first_login", enable_identifier_first_login)
        if enable_internal_stages_privatelink is not None:
            pulumi.set(__self__, "enable_internal_stages_privatelink", enable_internal_stages_privatelink)
        if enable_tri_secret_and_rekey_opt_out_for_image_repository is not None:
            pulumi.set(__self__, "enable_tri_secret_and_rekey_opt_out_for_image_repository", enable_tri_secret_and_rekey_opt_out_for_image_repository)
        if enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage is not None:
            pulumi.set(__self__, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage)
        if enable_unhandled_exceptions_reporting is not None:
            pulumi.set(__self__, "enable_unhandled_exceptions_reporting", enable_unhandled_exceptions_reporting)
        if enable_unload_physical_type_optimization is not None:
            pulumi.set(__self__, "enable_unload_physical_type_optimization", enable_unload_physical_type_optimization)
        if enable_unredacted_query_syntax_error is not None:
            pulumi.set(__self__, "enable_unredacted_query_syntax_error", enable_unredacted_query_syntax_error)
        if enable_unredacted_secure_object_error is not None:
            pulumi.set(__self__, "enable_unredacted_secure_object_error", enable_unredacted_secure_object_error)
        if enforce_network_rules_for_internal_stages is not None:
            pulumi.set(__self__, "enforce_network_rules_for_internal_stages", enforce_network_rules_for_internal_stages)
        if error_on_nondeterministic_merge is not None:
            pulumi.set(__self__, "error_on_nondeterministic_merge", error_on_nondeterministic_merge)
        if error_on_nondeterministic_update is not None:
            pulumi.set(__self__, "error_on_nondeterministic_update", error_on_nondeterministic_update)
        if event_table is not None:
            pulumi.set(__self__, "event_table", event_table)
        if external_oauth_add_privileged_roles_to_blocked_list is not None:
            pulumi.set(__self__, "external_oauth_add_privileged_roles_to_blocked_list", external_oauth_add_privileged_roles_to_blocked_list)
        if external_volume is not None:
            pulumi.set(__self__, "external_volume", external_volume)
        if geography_output_format is not None:
            pulumi.set(__self__, "geography_output_format", geography_output_format)
        if geometry_output_format is not None:
            pulumi.set(__self__, "geometry_output_format", geometry_output_format)
        if hybrid_table_lock_timeout is not None:
            pulumi.set(__self__, "hybrid_table_lock_timeout", hybrid_table_lock_timeout)
        if initial_replication_size_limit_in_tb is not None:
            pulumi.set(__self__, "initial_replication_size_limit_in_tb", initial_replication_size_limit_in_tb)
        if jdbc_treat_decimal_as_int is not None:
            pulumi.set(__self__, "jdbc_treat_decimal_as_int", jdbc_treat_decimal_as_int)
        if jdbc_treat_timestamp_ntz_as_utc is not None:
            pulumi.set(__self__, "jdbc_treat_timestamp_ntz_as_utc", jdbc_treat_timestamp_ntz_as_utc)
        if jdbc_use_session_timezone is not None:
            pulumi.set(__self__, "jdbc_use_session_timezone", jdbc_use_session_timezone)
        if js_treat_integer_as_bigint is not None:
            pulumi.set(__self__, "js_treat_integer_as_bigint", js_treat_integer_as_bigint)
        if json_indent is not None:
            pulumi.set(__self__, "json_indent", json_indent)
        if listing_auto_fulfillment_replication_refresh_schedule is not None:
            pulumi.set(__self__, "listing_auto_fulfillment_replication_refresh_schedule", listing_auto_fulfillment_replication_refresh_schedule)
        if lock_timeout is not None:
            pulumi.set(__self__, "lock_timeout", lock_timeout)
        if log_level is not None:
            pulumi.set(__self__, "log_level", log_level)
        if max_concurrency_level is not None:
            pulumi.set(__self__, "max_concurrency_level", max_concurrency_level)
        if max_data_extension_time_in_days is not None:
            pulumi.set(__self__, "max_data_extension_time_in_days", max_data_extension_time_in_days)
        if metric_level is not None:
            pulumi.set(__self__, "metric_level", metric_level)
        if min_data_retention_time_in_days is not None:
            pulumi.set(__self__, "min_data_retention_time_in_days", min_data_retention_time_in_days)
        if multi_statement_count is not None:
            pulumi.set(__self__, "multi_statement_count", multi_statement_count)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_policy is not None:
            pulumi.set(__self__, "network_policy", network_policy)
        if noorder_sequence_as_default is not None:
            pulumi.set(__self__, "noorder_sequence_as_default", noorder_sequence_as_default)
        if oauth_add_privileged_roles_to_blocked_list is not None:
            pulumi.set(__self__, "oauth_add_privileged_roles_to_blocked_list", oauth_add_privileged_roles_to_blocked_list)
        if odbc_treat_decimal_as_int is not None:
            pulumi.set(__self__, "odbc_treat_decimal_as_int", odbc_treat_decimal_as_int)
        if password_policy is not None:
            pulumi.set(__self__, "password_policy", password_policy)
        if periodic_data_rekeying is not None:
            pulumi.set(__self__, "periodic_data_rekeying", periodic_data_rekeying)
        if pipe_execution_paused is not None:
            pulumi.set(__self__, "pipe_execution_paused", pipe_execution_paused)
        if prevent_unload_to_inline_url is not None:
            pulumi.set(__self__, "prevent_unload_to_inline_url", prevent_unload_to_inline_url)
        if prevent_unload_to_internal_stages is not None:
            pulumi.set(__self__, "prevent_unload_to_internal_stages", prevent_unload_to_internal_stages)
        if python_profiler_modules is not None:
            pulumi.set(__self__, "python_profiler_modules", python_profiler_modules)
        if python_profiler_target_stage is not None:
            pulumi.set(__self__, "python_profiler_target_stage", python_profiler_target_stage)
        if query_tag is not None:
            pulumi.set(__self__, "query_tag", query_tag)
        if quoted_identifiers_ignore_case is not None:
            pulumi.set(__self__, "quoted_identifiers_ignore_case", quoted_identifiers_ignore_case)
        if replace_invalid_characters is not None:
            pulumi.set(__self__, "replace_invalid_characters", replace_invalid_characters)
        if require_storage_integration_for_stage_creation is not None:
            pulumi.set(__self__, "require_storage_integration_for_stage_creation", require_storage_integration_for_stage_creation)
        if require_storage_integration_for_stage_operation is not None:
            pulumi.set(__self__, "require_storage_integration_for_stage_operation", require_storage_integration_for_stage_operation)
        if resource_monitor is not None:
            pulumi.set(__self__, "resource_monitor", resource_monitor)
        if rows_per_resultset is not None:
            pulumi.set(__self__, "rows_per_resultset", rows_per_resultset)
        if s3_stage_vpce_dns_name is not None:
            pulumi.set(__self__, "s3_stage_vpce_dns_name", s3_stage_vpce_dns_name)
        if saml_identity_provider is not None:
            pulumi.set(__self__, "saml_identity_provider", saml_identity_provider)
        if search_path is not None:
            pulumi.set(__self__, "search_path", search_path)
        if serverless_task_max_statement_size is not None:
            pulumi.set(__self__, "serverless_task_max_statement_size", serverless_task_max_statement_size)
        if serverless_task_min_statement_size is not None:
            pulumi.set(__self__, "serverless_task_min_statement_size", serverless_task_min_statement_size)
        if session_policy is not None:
            pulumi.set(__self__, "session_policy", session_policy)
        if simulated_data_sharing_consumer is not None:
            pulumi.set(__self__, "simulated_data_sharing_consumer", simulated_data_sharing_consumer)
        if sso_login_page is not None:
            pulumi.set(__self__, "sso_login_page", sso_login_page)
        if statement_queued_timeout_in_seconds is not None:
            pulumi.set(__self__, "statement_queued_timeout_in_seconds", statement_queued_timeout_in_seconds)
        if statement_timeout_in_seconds is not None:
            pulumi.set(__self__, "statement_timeout_in_seconds", statement_timeout_in_seconds)
        if storage_serialization_policy is not None:
            pulumi.set(__self__, "storage_serialization_policy", storage_serialization_policy)
        if strict_json_output is not None:
            pulumi.set(__self__, "strict_json_output", strict_json_output)
        if suspend_task_after_num_failures is not None:
            pulumi.set(__self__, "suspend_task_after_num_failures", suspend_task_after_num_failures)
        if task_auto_retry_attempts is not None:
            pulumi.set(__self__, "task_auto_retry_attempts", task_auto_retry_attempts)
        if time_input_format is not None:
            pulumi.set(__self__, "time_input_format", time_input_format)
        if time_output_format is not None:
            pulumi.set(__self__, "time_output_format", time_output_format)
        if timestamp_day_is_always24h is not None:
            pulumi.set(__self__, "timestamp_day_is_always24h", timestamp_day_is_always24h)
        if timestamp_input_format is not None:
            pulumi.set(__self__, "timestamp_input_format", timestamp_input_format)
        if timestamp_ltz_output_format is not None:
            pulumi.set(__self__, "timestamp_ltz_output_format", timestamp_ltz_output_format)
        if timestamp_ntz_output_format is not None:
            pulumi.set(__self__, "timestamp_ntz_output_format", timestamp_ntz_output_format)
        if timestamp_output_format is not None:
            pulumi.set(__self__, "timestamp_output_format", timestamp_output_format)
        if timestamp_type_mapping is not None:
            pulumi.set(__self__, "timestamp_type_mapping", timestamp_type_mapping)
        if timestamp_tz_output_format is not None:
            pulumi.set(__self__, "timestamp_tz_output_format", timestamp_tz_output_format)
        if timezone is not None:
            pulumi.set(__self__, "timezone", timezone)
        if trace_level is not None:
            pulumi.set(__self__, "trace_level", trace_level)
        if transaction_abort_on_error is not None:
            pulumi.set(__self__, "transaction_abort_on_error", transaction_abort_on_error)
        if transaction_default_isolation_level is not None:
            pulumi.set(__self__, "transaction_default_isolation_level", transaction_default_isolation_level)
        if two_digit_century_start is not None:
            pulumi.set(__self__, "two_digit_century_start", two_digit_century_start)
        if unsupported_ddl_action is not None:
            pulumi.set(__self__, "unsupported_ddl_action", unsupported_ddl_action)
        if use_cached_result is not None:
            pulumi.set(__self__, "use_cached_result", use_cached_result)
        if user_task_managed_initial_warehouse_size is not None:
            pulumi.set(__self__, "user_task_managed_initial_warehouse_size", user_task_managed_initial_warehouse_size)
        if user_task_minimum_trigger_interval_in_seconds is not None:
            pulumi.set(__self__, "user_task_minimum_trigger_interval_in_seconds", user_task_minimum_trigger_interval_in_seconds)
        if user_task_timeout_ms is not None:
            pulumi.set(__self__, "user_task_timeout_ms", user_task_timeout_ms)
        if week_of_year_policy is not None:
            pulumi.set(__self__, "week_of_year_policy", week_of_year_policy)
        if week_start is not None:
            pulumi.set(__self__, "week_start", week_start)

    @_builtins.property
    @pulumi.getter(name="abortDetachedQuery")
    def abort_detached_query(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        """
        return pulumi.get(self, "abort_detached_query")

    @abort_detached_query.setter
    def abort_detached_query(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "abort_detached_query", value)

    @_builtins.property
    @pulumi.getter(name="activePythonProfiler")
    def active_python_profiler(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        """
        return pulumi.get(self, "active_python_profiler")

    @active_python_profiler.setter
    def active_python_profiler(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "active_python_profiler", value)

    @_builtins.property
    @pulumi.getter(name="allowClientMfaCaching")
    def allow_client_mfa_caching(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        """
        return pulumi.get(self, "allow_client_mfa_caching")

    @allow_client_mfa_caching.setter
    def allow_client_mfa_caching(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_client_mfa_caching", value)

    @_builtins.property
    @pulumi.getter(name="allowIdToken")
    def allow_id_token(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        """
        return pulumi.get(self, "allow_id_token")

    @allow_id_token.setter
    def allow_id_token(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_id_token", value)

    @_builtins.property
    @pulumi.getter
    def autocommit(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        """
        return pulumi.get(self, "autocommit")

    @autocommit.setter
    def autocommit(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "autocommit", value)

    @_builtins.property
    @pulumi.getter(name="baseLocationPrefix")
    def base_location_prefix(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        """
        return pulumi.get(self, "base_location_prefix")

    @base_location_prefix.setter
    def base_location_prefix(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "base_location_prefix", value)

    @_builtins.property
    @pulumi.getter(name="binaryInputFormat")
    def binary_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        """
        return pulumi.get(self, "binary_input_format")

    @binary_input_format.setter
    def binary_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binary_input_format", value)

    @_builtins.property
    @pulumi.getter(name="binaryOutputFormat")
    def binary_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        """
        return pulumi.get(self, "binary_output_format")

    @binary_output_format.setter
    def binary_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binary_output_format", value)

    @_builtins.property
    @pulumi.getter
    def catalog(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        """
        return pulumi.get(self, "catalog")

    @catalog.setter
    def catalog(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog", value)

    @_builtins.property
    @pulumi.getter(name="catalogSync")
    def catalog_sync(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        """
        return pulumi.get(self, "catalog_sync")

    @catalog_sync.setter
    def catalog_sync(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog_sync", value)

    @_builtins.property
    @pulumi.getter(name="clientEnableLogInfoStatementParameters")
    def client_enable_log_info_statement_parameters(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        """
        return pulumi.get(self, "client_enable_log_info_statement_parameters")

    @client_enable_log_info_statement_parameters.setter
    def client_enable_log_info_statement_parameters(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_enable_log_info_statement_parameters", value)

    @_builtins.property
    @pulumi.getter(name="clientEncryptionKeySize")
    def client_encryption_key_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        """
        return pulumi.get(self, "client_encryption_key_size")

    @client_encryption_key_size.setter
    def client_encryption_key_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_encryption_key_size", value)

    @_builtins.property
    @pulumi.getter(name="clientMemoryLimit")
    def client_memory_limit(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        """
        return pulumi.get(self, "client_memory_limit")

    @client_memory_limit.setter
    def client_memory_limit(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_memory_limit", value)

    @_builtins.property
    @pulumi.getter(name="clientMetadataRequestUseConnectionCtx")
    def client_metadata_request_use_connection_ctx(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        """
        return pulumi.get(self, "client_metadata_request_use_connection_ctx")

    @client_metadata_request_use_connection_ctx.setter
    def client_metadata_request_use_connection_ctx(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_metadata_request_use_connection_ctx", value)

    @_builtins.property
    @pulumi.getter(name="clientMetadataUseSessionDatabase")
    def client_metadata_use_session_database(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        """
        return pulumi.get(self, "client_metadata_use_session_database")

    @client_metadata_use_session_database.setter
    def client_metadata_use_session_database(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_metadata_use_session_database", value)

    @_builtins.property
    @pulumi.getter(name="clientPrefetchThreads")
    def client_prefetch_threads(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        """
        return pulumi.get(self, "client_prefetch_threads")

    @client_prefetch_threads.setter
    def client_prefetch_threads(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_prefetch_threads", value)

    @_builtins.property
    @pulumi.getter(name="clientResultChunkSize")
    def client_result_chunk_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        """
        return pulumi.get(self, "client_result_chunk_size")

    @client_result_chunk_size.setter
    def client_result_chunk_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_result_chunk_size", value)

    @_builtins.property
    @pulumi.getter(name="clientResultColumnCaseInsensitive")
    def client_result_column_case_insensitive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        """
        return pulumi.get(self, "client_result_column_case_insensitive")

    @client_result_column_case_insensitive.setter
    def client_result_column_case_insensitive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_result_column_case_insensitive", value)

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAlive")
    def client_session_keep_alive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        """
        return pulumi.get(self, "client_session_keep_alive")

    @client_session_keep_alive.setter
    def client_session_keep_alive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_session_keep_alive", value)

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAliveHeartbeatFrequency")
    def client_session_keep_alive_heartbeat_frequency(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        """
        return pulumi.get(self, "client_session_keep_alive_heartbeat_frequency")

    @client_session_keep_alive_heartbeat_frequency.setter
    def client_session_keep_alive_heartbeat_frequency(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_session_keep_alive_heartbeat_frequency", value)

    @_builtins.property
    @pulumi.getter(name="clientTimestampTypeMapping")
    def client_timestamp_type_mapping(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        """
        return pulumi.get(self, "client_timestamp_type_mapping")

    @client_timestamp_type_mapping.setter
    def client_timestamp_type_mapping(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "client_timestamp_type_mapping", value)

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a comment for the organization account.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "comment", value)

    @_builtins.property
    @pulumi.getter(name="cortexEnabledCrossRegion")
    def cortex_enabled_cross_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        """
        return pulumi.get(self, "cortex_enabled_cross_region")

    @cortex_enabled_cross_region.setter
    def cortex_enabled_cross_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cortex_enabled_cross_region", value)

    @_builtins.property
    @pulumi.getter(name="cortexModelsAllowlist")
    def cortex_models_allowlist(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        """
        return pulumi.get(self, "cortex_models_allowlist")

    @cortex_models_allowlist.setter
    def cortex_models_allowlist(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cortex_models_allowlist", value)

    @_builtins.property
    @pulumi.getter(name="csvTimestampFormat")
    def csv_timestamp_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        """
        return pulumi.get(self, "csv_timestamp_format")

    @csv_timestamp_format.setter
    def csv_timestamp_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "csv_timestamp_format", value)

    @_builtins.property
    @pulumi.getter(name="dataRetentionTimeInDays")
    def data_retention_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        """
        return pulumi.get(self, "data_retention_time_in_days")

    @data_retention_time_in_days.setter
    def data_retention_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "data_retention_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="dateInputFormat")
    def date_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        """
        return pulumi.get(self, "date_input_format")

    @date_input_format.setter
    def date_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "date_input_format", value)

    @_builtins.property
    @pulumi.getter(name="dateOutputFormat")
    def date_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        """
        return pulumi.get(self, "date_output_format")

    @date_output_format.setter
    def date_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "date_output_format", value)

    @_builtins.property
    @pulumi.getter(name="defaultDdlCollation")
    def default_ddl_collation(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        """
        return pulumi.get(self, "default_ddl_collation")

    @default_ddl_collation.setter
    def default_ddl_collation(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_ddl_collation", value)

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolCpu")
    def default_notebook_compute_pool_cpu(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_cpu")

    @default_notebook_compute_pool_cpu.setter
    def default_notebook_compute_pool_cpu(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_notebook_compute_pool_cpu", value)

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolGpu")
    def default_notebook_compute_pool_gpu(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_gpu")

    @default_notebook_compute_pool_gpu.setter
    def default_notebook_compute_pool_gpu(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_notebook_compute_pool_gpu", value)

    @_builtins.property
    @pulumi.getter(name="defaultNullOrdering")
    def default_null_ordering(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        """
        return pulumi.get(self, "default_null_ordering")

    @default_null_ordering.setter
    def default_null_ordering(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_null_ordering", value)

    @_builtins.property
    @pulumi.getter(name="defaultStreamlitNotebookWarehouse")
    def default_streamlit_notebook_warehouse(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        """
        return pulumi.get(self, "default_streamlit_notebook_warehouse")

    @default_streamlit_notebook_warehouse.setter
    def default_streamlit_notebook_warehouse(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_streamlit_notebook_warehouse", value)

    @_builtins.property
    @pulumi.getter(name="disableUiDownloadButton")
    def disable_ui_download_button(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        """
        return pulumi.get(self, "disable_ui_download_button")

    @disable_ui_download_button.setter
    def disable_ui_download_button(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "disable_ui_download_button", value)

    @_builtins.property
    @pulumi.getter(name="disableUserPrivilegeGrants")
    def disable_user_privilege_grants(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        """
        return pulumi.get(self, "disable_user_privilege_grants")

    @disable_user_privilege_grants.setter
    def disable_user_privilege_grants(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "disable_user_privilege_grants", value)

    @_builtins.property
    @pulumi.getter(name="enableAutomaticSensitiveDataClassificationLog")
    def enable_automatic_sensitive_data_classification_log(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        """
        return pulumi.get(self, "enable_automatic_sensitive_data_classification_log")

    @enable_automatic_sensitive_data_classification_log.setter
    def enable_automatic_sensitive_data_classification_log(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_automatic_sensitive_data_classification_log", value)

    @_builtins.property
    @pulumi.getter(name="enableEgressCostOptimizer")
    def enable_egress_cost_optimizer(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        """
        return pulumi.get(self, "enable_egress_cost_optimizer")

    @enable_egress_cost_optimizer.setter
    def enable_egress_cost_optimizer(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_egress_cost_optimizer", value)

    @_builtins.property
    @pulumi.getter(name="enableIdentifierFirstLogin")
    def enable_identifier_first_login(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        """
        return pulumi.get(self, "enable_identifier_first_login")

    @enable_identifier_first_login.setter
    def enable_identifier_first_login(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_identifier_first_login", value)

    @_builtins.property
    @pulumi.getter(name="enableInternalStagesPrivatelink")
    def enable_internal_stages_privatelink(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        """
        return pulumi.get(self, "enable_internal_stages_privatelink")

    @enable_internal_stages_privatelink.setter
    def enable_internal_stages_privatelink(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_internal_stages_privatelink", value)

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForImageRepository")
    def enable_tri_secret_and_rekey_opt_out_for_image_repository(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_image_repository")

    @enable_tri_secret_and_rekey_opt_out_for_image_repository.setter
    def enable_tri_secret_and_rekey_opt_out_for_image_repository(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_tri_secret_and_rekey_opt_out_for_image_repository", value)

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForSpcsBlockStorage")
    def enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage")

    @enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage.setter
    def enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", value)

    @_builtins.property
    @pulumi.getter(name="enableUnhandledExceptionsReporting")
    def enable_unhandled_exceptions_reporting(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        """
        return pulumi.get(self, "enable_unhandled_exceptions_reporting")

    @enable_unhandled_exceptions_reporting.setter
    def enable_unhandled_exceptions_reporting(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unhandled_exceptions_reporting", value)

    @_builtins.property
    @pulumi.getter(name="enableUnloadPhysicalTypeOptimization")
    def enable_unload_physical_type_optimization(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        """
        return pulumi.get(self, "enable_unload_physical_type_optimization")

    @enable_unload_physical_type_optimization.setter
    def enable_unload_physical_type_optimization(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unload_physical_type_optimization", value)

    @_builtins.property
    @pulumi.getter(name="enableUnredactedQuerySyntaxError")
    def enable_unredacted_query_syntax_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        """
        return pulumi.get(self, "enable_unredacted_query_syntax_error")

    @enable_unredacted_query_syntax_error.setter
    def enable_unredacted_query_syntax_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unredacted_query_syntax_error", value)

    @_builtins.property
    @pulumi.getter(name="enableUnredactedSecureObjectError")
    def enable_unredacted_secure_object_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        """
        return pulumi.get(self, "enable_unredacted_secure_object_error")

    @enable_unredacted_secure_object_error.setter
    def enable_unredacted_secure_object_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unredacted_secure_object_error", value)

    @_builtins.property
    @pulumi.getter(name="enforceNetworkRulesForInternalStages")
    def enforce_network_rules_for_internal_stages(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        """
        return pulumi.get(self, "enforce_network_rules_for_internal_stages")

    @enforce_network_rules_for_internal_stages.setter
    def enforce_network_rules_for_internal_stages(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enforce_network_rules_for_internal_stages", value)

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicMerge")
    def error_on_nondeterministic_merge(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        """
        return pulumi.get(self, "error_on_nondeterministic_merge")

    @error_on_nondeterministic_merge.setter
    def error_on_nondeterministic_merge(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "error_on_nondeterministic_merge", value)

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicUpdate")
    def error_on_nondeterministic_update(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        """
        return pulumi.get(self, "error_on_nondeterministic_update")

    @error_on_nondeterministic_update.setter
    def error_on_nondeterministic_update(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "error_on_nondeterministic_update", value)

    @_builtins.property
    @pulumi.getter(name="eventTable")
    def event_table(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        """
        return pulumi.get(self, "event_table")

    @event_table.setter
    def event_table(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "event_table", value)

    @_builtins.property
    @pulumi.getter(name="externalOauthAddPrivilegedRolesToBlockedList")
    def external_oauth_add_privileged_roles_to_blocked_list(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "external_oauth_add_privileged_roles_to_blocked_list")

    @external_oauth_add_privileged_roles_to_blocked_list.setter
    def external_oauth_add_privileged_roles_to_blocked_list(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "external_oauth_add_privileged_roles_to_blocked_list", value)

    @_builtins.property
    @pulumi.getter(name="externalVolume")
    def external_volume(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        """
        return pulumi.get(self, "external_volume")

    @external_volume.setter
    def external_volume(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "external_volume", value)

    @_builtins.property
    @pulumi.getter(name="geographyOutputFormat")
    def geography_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        """
        return pulumi.get(self, "geography_output_format")

    @geography_output_format.setter
    def geography_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "geography_output_format", value)

    @_builtins.property
    @pulumi.getter(name="geometryOutputFormat")
    def geometry_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        """
        return pulumi.get(self, "geometry_output_format")

    @geometry_output_format.setter
    def geometry_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "geometry_output_format", value)

    @_builtins.property
    @pulumi.getter(name="hybridTableLockTimeout")
    def hybrid_table_lock_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        """
        return pulumi.get(self, "hybrid_table_lock_timeout")

    @hybrid_table_lock_timeout.setter
    def hybrid_table_lock_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "hybrid_table_lock_timeout", value)

    @_builtins.property
    @pulumi.getter(name="initialReplicationSizeLimitInTb")
    def initial_replication_size_limit_in_tb(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        """
        return pulumi.get(self, "initial_replication_size_limit_in_tb")

    @initial_replication_size_limit_in_tb.setter
    def initial_replication_size_limit_in_tb(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "initial_replication_size_limit_in_tb", value)

    @_builtins.property
    @pulumi.getter(name="jdbcTreatDecimalAsInt")
    def jdbc_treat_decimal_as_int(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "jdbc_treat_decimal_as_int")

    @jdbc_treat_decimal_as_int.setter
    def jdbc_treat_decimal_as_int(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_treat_decimal_as_int", value)

    @_builtins.property
    @pulumi.getter(name="jdbcTreatTimestampNtzAsUtc")
    def jdbc_treat_timestamp_ntz_as_utc(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        """
        return pulumi.get(self, "jdbc_treat_timestamp_ntz_as_utc")

    @jdbc_treat_timestamp_ntz_as_utc.setter
    def jdbc_treat_timestamp_ntz_as_utc(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_treat_timestamp_ntz_as_utc", value)

    @_builtins.property
    @pulumi.getter(name="jdbcUseSessionTimezone")
    def jdbc_use_session_timezone(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        """
        return pulumi.get(self, "jdbc_use_session_timezone")

    @jdbc_use_session_timezone.setter
    def jdbc_use_session_timezone(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_use_session_timezone", value)

    @_builtins.property
    @pulumi.getter(name="jsTreatIntegerAsBigint")
    def js_treat_integer_as_bigint(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        """
        return pulumi.get(self, "js_treat_integer_as_bigint")

    @js_treat_integer_as_bigint.setter
    def js_treat_integer_as_bigint(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "js_treat_integer_as_bigint", value)

    @_builtins.property
    @pulumi.getter(name="jsonIndent")
    def json_indent(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        """
        return pulumi.get(self, "json_indent")

    @json_indent.setter
    def json_indent(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "json_indent", value)

    @_builtins.property
    @pulumi.getter(name="listingAutoFulfillmentReplicationRefreshSchedule")
    def listing_auto_fulfillment_replication_refresh_schedule(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        """
        return pulumi.get(self, "listing_auto_fulfillment_replication_refresh_schedule")

    @listing_auto_fulfillment_replication_refresh_schedule.setter
    def listing_auto_fulfillment_replication_refresh_schedule(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "listing_auto_fulfillment_replication_refresh_schedule", value)

    @_builtins.property
    @pulumi.getter(name="lockTimeout")
    def lock_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        """
        return pulumi.get(self, "lock_timeout")

    @lock_timeout.setter
    def lock_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "lock_timeout", value)

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        """
        return pulumi.get(self, "log_level")

    @log_level.setter
    def log_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "log_level", value)

    @_builtins.property
    @pulumi.getter(name="maxConcurrencyLevel")
    def max_concurrency_level(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        """
        return pulumi.get(self, "max_concurrency_level")

    @max_concurrency_level.setter
    def max_concurrency_level(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_concurrency_level", value)

    @_builtins.property
    @pulumi.getter(name="maxDataExtensionTimeInDays")
    def max_data_extension_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        """
        return pulumi.get(self, "max_data_extension_time_in_days")

    @max_data_extension_time_in_days.setter
    def max_data_extension_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_data_extension_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="metricLevel")
    def metric_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        """
        return pulumi.get(self, "metric_level")

    @metric_level.setter
    def metric_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "metric_level", value)

    @_builtins.property
    @pulumi.getter(name="minDataRetentionTimeInDays")
    def min_data_retention_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        """
        return pulumi.get(self, "min_data_retention_time_in_days")

    @min_data_retention_time_in_days.setter
    def min_data_retention_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "min_data_retention_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="multiStatementCount")
    def multi_statement_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        """
        return pulumi.get(self, "multi_statement_count")

    @multi_statement_count.setter
    def multi_statement_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "multi_statement_count", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkPolicy")
    def network_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        """
        return pulumi.get(self, "network_policy")

    @network_policy.setter
    def network_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_policy", value)

    @_builtins.property
    @pulumi.getter(name="noorderSequenceAsDefault")
    def noorder_sequence_as_default(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        """
        return pulumi.get(self, "noorder_sequence_as_default")

    @noorder_sequence_as_default.setter
    def noorder_sequence_as_default(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "noorder_sequence_as_default", value)

    @_builtins.property
    @pulumi.getter(name="oauthAddPrivilegedRolesToBlockedList")
    def oauth_add_privileged_roles_to_blocked_list(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "oauth_add_privileged_roles_to_blocked_list")

    @oauth_add_privileged_roles_to_blocked_list.setter
    def oauth_add_privileged_roles_to_blocked_list(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "oauth_add_privileged_roles_to_blocked_list", value)

    @_builtins.property
    @pulumi.getter(name="odbcTreatDecimalAsInt")
    def odbc_treat_decimal_as_int(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "odbc_treat_decimal_as_int")

    @odbc_treat_decimal_as_int.setter
    def odbc_treat_decimal_as_int(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "odbc_treat_decimal_as_int", value)

    @_builtins.property
    @pulumi.getter(name="passwordPolicy")
    def password_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        """
        return pulumi.get(self, "password_policy")

    @password_policy.setter
    def password_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password_policy", value)

    @_builtins.property
    @pulumi.getter(name="periodicDataRekeying")
    def periodic_data_rekeying(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        """
        return pulumi.get(self, "periodic_data_rekeying")

    @periodic_data_rekeying.setter
    def periodic_data_rekeying(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "periodic_data_rekeying", value)

    @_builtins.property
    @pulumi.getter(name="pipeExecutionPaused")
    def pipe_execution_paused(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        """
        return pulumi.get(self, "pipe_execution_paused")

    @pipe_execution_paused.setter
    def pipe_execution_paused(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "pipe_execution_paused", value)

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInlineUrl")
    def prevent_unload_to_inline_url(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        """
        return pulumi.get(self, "prevent_unload_to_inline_url")

    @prevent_unload_to_inline_url.setter
    def prevent_unload_to_inline_url(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prevent_unload_to_inline_url", value)

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInternalStages")
    def prevent_unload_to_internal_stages(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        """
        return pulumi.get(self, "prevent_unload_to_internal_stages")

    @prevent_unload_to_internal_stages.setter
    def prevent_unload_to_internal_stages(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prevent_unload_to_internal_stages", value)

    @_builtins.property
    @pulumi.getter(name="pythonProfilerModules")
    def python_profiler_modules(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        """
        return pulumi.get(self, "python_profiler_modules")

    @python_profiler_modules.setter
    def python_profiler_modules(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "python_profiler_modules", value)

    @_builtins.property
    @pulumi.getter(name="pythonProfilerTargetStage")
    def python_profiler_target_stage(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        """
        return pulumi.get(self, "python_profiler_target_stage")

    @python_profiler_target_stage.setter
    def python_profiler_target_stage(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "python_profiler_target_stage", value)

    @_builtins.property
    @pulumi.getter(name="queryTag")
    def query_tag(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        """
        return pulumi.get(self, "query_tag")

    @query_tag.setter
    def query_tag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "query_tag", value)

    @_builtins.property
    @pulumi.getter(name="quotedIdentifiersIgnoreCase")
    def quoted_identifiers_ignore_case(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        """
        return pulumi.get(self, "quoted_identifiers_ignore_case")

    @quoted_identifiers_ignore_case.setter
    def quoted_identifiers_ignore_case(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "quoted_identifiers_ignore_case", value)

    @_builtins.property
    @pulumi.getter(name="replaceInvalidCharacters")
    def replace_invalid_characters(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        """
        return pulumi.get(self, "replace_invalid_characters")

    @replace_invalid_characters.setter
    def replace_invalid_characters(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "replace_invalid_characters", value)

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageCreation")
    def require_storage_integration_for_stage_creation(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_creation")

    @require_storage_integration_for_stage_creation.setter
    def require_storage_integration_for_stage_creation(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "require_storage_integration_for_stage_creation", value)

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageOperation")
    def require_storage_integration_for_stage_operation(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_operation")

    @require_storage_integration_for_stage_operation.setter
    def require_storage_integration_for_stage_operation(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "require_storage_integration_for_stage_operation", value)

    @_builtins.property
    @pulumi.getter(name="resourceMonitor")
    def resource_monitor(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "resource_monitor")

    @resource_monitor.setter
    def resource_monitor(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_monitor", value)

    @_builtins.property
    @pulumi.getter(name="rowsPerResultset")
    def rows_per_resultset(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        """
        return pulumi.get(self, "rows_per_resultset")

    @rows_per_resultset.setter
    def rows_per_resultset(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "rows_per_resultset", value)

    @_builtins.property
    @pulumi.getter(name="s3StageVpceDnsName")
    def s3_stage_vpce_dns_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        """
        return pulumi.get(self, "s3_stage_vpce_dns_name")

    @s3_stage_vpce_dns_name.setter
    def s3_stage_vpce_dns_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "s3_stage_vpce_dns_name", value)

    @_builtins.property
    @pulumi.getter(name="samlIdentityProvider")
    def saml_identity_provider(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        """
        return pulumi.get(self, "saml_identity_provider")

    @saml_identity_provider.setter
    def saml_identity_provider(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "saml_identity_provider", value)

    @_builtins.property
    @pulumi.getter(name="searchPath")
    def search_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        """
        return pulumi.get(self, "search_path")

    @search_path.setter
    def search_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "search_path", value)

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMaxStatementSize")
    def serverless_task_max_statement_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        """
        return pulumi.get(self, "serverless_task_max_statement_size")

    @serverless_task_max_statement_size.setter
    def serverless_task_max_statement_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "serverless_task_max_statement_size", value)

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMinStatementSize")
    def serverless_task_min_statement_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        """
        return pulumi.get(self, "serverless_task_min_statement_size")

    @serverless_task_min_statement_size.setter
    def serverless_task_min_statement_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "serverless_task_min_statement_size", value)

    @_builtins.property
    @pulumi.getter(name="sessionPolicy")
    def session_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        """
        return pulumi.get(self, "session_policy")

    @session_policy.setter
    def session_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "session_policy", value)

    @_builtins.property
    @pulumi.getter(name="simulatedDataSharingConsumer")
    def simulated_data_sharing_consumer(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        """
        return pulumi.get(self, "simulated_data_sharing_consumer")

    @simulated_data_sharing_consumer.setter
    def simulated_data_sharing_consumer(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "simulated_data_sharing_consumer", value)

    @_builtins.property
    @pulumi.getter(name="ssoLoginPage")
    def sso_login_page(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        """
        return pulumi.get(self, "sso_login_page")

    @sso_login_page.setter
    def sso_login_page(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "sso_login_page", value)

    @_builtins.property
    @pulumi.getter(name="statementQueuedTimeoutInSeconds")
    def statement_queued_timeout_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_queued_timeout_in_seconds")

    @statement_queued_timeout_in_seconds.setter
    def statement_queued_timeout_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "statement_queued_timeout_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="statementTimeoutInSeconds")
    def statement_timeout_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_timeout_in_seconds")

    @statement_timeout_in_seconds.setter
    def statement_timeout_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "statement_timeout_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="storageSerializationPolicy")
    def storage_serialization_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        """
        return pulumi.get(self, "storage_serialization_policy")

    @storage_serialization_policy.setter
    def storage_serialization_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "storage_serialization_policy", value)

    @_builtins.property
    @pulumi.getter(name="strictJsonOutput")
    def strict_json_output(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        """
        return pulumi.get(self, "strict_json_output")

    @strict_json_output.setter
    def strict_json_output(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "strict_json_output", value)

    @_builtins.property
    @pulumi.getter(name="suspendTaskAfterNumFailures")
    def suspend_task_after_num_failures(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        """
        return pulumi.get(self, "suspend_task_after_num_failures")

    @suspend_task_after_num_failures.setter
    def suspend_task_after_num_failures(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "suspend_task_after_num_failures", value)

    @_builtins.property
    @pulumi.getter(name="taskAutoRetryAttempts")
    def task_auto_retry_attempts(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        """
        return pulumi.get(self, "task_auto_retry_attempts")

    @task_auto_retry_attempts.setter
    def task_auto_retry_attempts(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "task_auto_retry_attempts", value)

    @_builtins.property
    @pulumi.getter(name="timeInputFormat")
    def time_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        """
        return pulumi.get(self, "time_input_format")

    @time_input_format.setter
    def time_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_input_format", value)

    @_builtins.property
    @pulumi.getter(name="timeOutputFormat")
    def time_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        """
        return pulumi.get(self, "time_output_format")

    @time_output_format.setter
    def time_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampDayIsAlways24h")
    def timestamp_day_is_always24h(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        """
        return pulumi.get(self, "timestamp_day_is_always24h")

    @timestamp_day_is_always24h.setter
    def timestamp_day_is_always24h(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "timestamp_day_is_always24h", value)

    @_builtins.property
    @pulumi.getter(name="timestampInputFormat")
    def timestamp_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        """
        return pulumi.get(self, "timestamp_input_format")

    @timestamp_input_format.setter
    def timestamp_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_input_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampLtzOutputFormat")
    def timestamp_ltz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        """
        return pulumi.get(self, "timestamp_ltz_output_format")

    @timestamp_ltz_output_format.setter
    def timestamp_ltz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_ltz_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampNtzOutputFormat")
    def timestamp_ntz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        """
        return pulumi.get(self, "timestamp_ntz_output_format")

    @timestamp_ntz_output_format.setter
    def timestamp_ntz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_ntz_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampOutputFormat")
    def timestamp_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        """
        return pulumi.get(self, "timestamp_output_format")

    @timestamp_output_format.setter
    def timestamp_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampTypeMapping")
    def timestamp_type_mapping(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        """
        return pulumi.get(self, "timestamp_type_mapping")

    @timestamp_type_mapping.setter
    def timestamp_type_mapping(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_type_mapping", value)

    @_builtins.property
    @pulumi.getter(name="timestampTzOutputFormat")
    def timestamp_tz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        """
        return pulumi.get(self, "timestamp_tz_output_format")

    @timestamp_tz_output_format.setter
    def timestamp_tz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_tz_output_format", value)

    @_builtins.property
    @pulumi.getter
    def timezone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        """
        return pulumi.get(self, "timezone")

    @timezone.setter
    def timezone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timezone", value)

    @_builtins.property
    @pulumi.getter(name="traceLevel")
    def trace_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        """
        return pulumi.get(self, "trace_level")

    @trace_level.setter
    def trace_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "trace_level", value)

    @_builtins.property
    @pulumi.getter(name="transactionAbortOnError")
    def transaction_abort_on_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        """
        return pulumi.get(self, "transaction_abort_on_error")

    @transaction_abort_on_error.setter
    def transaction_abort_on_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "transaction_abort_on_error", value)

    @_builtins.property
    @pulumi.getter(name="transactionDefaultIsolationLevel")
    def transaction_default_isolation_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        """
        return pulumi.get(self, "transaction_default_isolation_level")

    @transaction_default_isolation_level.setter
    def transaction_default_isolation_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_default_isolation_level", value)

    @_builtins.property
    @pulumi.getter(name="twoDigitCenturyStart")
    def two_digit_century_start(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        """
        return pulumi.get(self, "two_digit_century_start")

    @two_digit_century_start.setter
    def two_digit_century_start(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "two_digit_century_start", value)

    @_builtins.property
    @pulumi.getter(name="unsupportedDdlAction")
    def unsupported_ddl_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        """
        return pulumi.get(self, "unsupported_ddl_action")

    @unsupported_ddl_action.setter
    def unsupported_ddl_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "unsupported_ddl_action", value)

    @_builtins.property
    @pulumi.getter(name="useCachedResult")
    def use_cached_result(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        """
        return pulumi.get(self, "use_cached_result")

    @use_cached_result.setter
    def use_cached_result(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "use_cached_result", value)

    @_builtins.property
    @pulumi.getter(name="userTaskManagedInitialWarehouseSize")
    def user_task_managed_initial_warehouse_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        """
        return pulumi.get(self, "user_task_managed_initial_warehouse_size")

    @user_task_managed_initial_warehouse_size.setter
    def user_task_managed_initial_warehouse_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "user_task_managed_initial_warehouse_size", value)

    @_builtins.property
    @pulumi.getter(name="userTaskMinimumTriggerIntervalInSeconds")
    def user_task_minimum_trigger_interval_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        """
        return pulumi.get(self, "user_task_minimum_trigger_interval_in_seconds")

    @user_task_minimum_trigger_interval_in_seconds.setter
    def user_task_minimum_trigger_interval_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "user_task_minimum_trigger_interval_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="userTaskTimeoutMs")
    def user_task_timeout_ms(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        """
        return pulumi.get(self, "user_task_timeout_ms")

    @user_task_timeout_ms.setter
    def user_task_timeout_ms(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "user_task_timeout_ms", value)

    @_builtins.property
    @pulumi.getter(name="weekOfYearPolicy")
    def week_of_year_policy(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        """
        return pulumi.get(self, "week_of_year_policy")

    @week_of_year_policy.setter
    def week_of_year_policy(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "week_of_year_policy", value)

    @_builtins.property
    @pulumi.getter(name="weekStart")
    def week_start(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        return pulumi.get(self, "week_start")

    @week_start.setter
    def week_start(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "week_start", value)


@pulumi.input_type
class _CurrentOrganizationAccountState:
    def __init__(__self__, *,
                 abort_detached_query: Optional[pulumi.Input[_builtins.bool]] = None,
                 active_python_profiler: Optional[pulumi.Input[_builtins.str]] = None,
                 allow_client_mfa_caching: Optional[pulumi.Input[_builtins.bool]] = None,
                 allow_id_token: Optional[pulumi.Input[_builtins.bool]] = None,
                 autocommit: Optional[pulumi.Input[_builtins.bool]] = None,
                 base_location_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog_sync: Optional[pulumi.Input[_builtins.str]] = None,
                 client_enable_log_info_statement_parameters: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_encryption_key_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_memory_limit: Optional[pulumi.Input[_builtins.int]] = None,
                 client_metadata_request_use_connection_ctx: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_metadata_use_session_database: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_prefetch_threads: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_chunk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_column_case_insensitive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive_heartbeat_frequency: Optional[pulumi.Input[_builtins.int]] = None,
                 client_timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 comment: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_enabled_cross_region: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_models_allowlist: Optional[pulumi.Input[_builtins.str]] = None,
                 csv_timestamp_format: Optional[pulumi.Input[_builtins.str]] = None,
                 data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 date_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 date_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 default_ddl_collation: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_cpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_gpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_null_ordering: Optional[pulumi.Input[_builtins.str]] = None,
                 default_streamlit_notebook_warehouse: Optional[pulumi.Input[_builtins.str]] = None,
                 disable_ui_download_button: Optional[pulumi.Input[_builtins.bool]] = None,
                 disable_user_privilege_grants: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_automatic_sensitive_data_classification_log: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_egress_cost_optimizer: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_identifier_first_login: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_internal_stages_privatelink: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_image_repository: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unhandled_exceptions_reporting: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unload_physical_type_optimization: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_query_syntax_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_secure_object_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enforce_network_rules_for_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_merge: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_update: Optional[pulumi.Input[_builtins.bool]] = None,
                 event_table: Optional[pulumi.Input[_builtins.str]] = None,
                 external_oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 external_volume: Optional[pulumi.Input[_builtins.str]] = None,
                 geography_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 geometry_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 hybrid_table_lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 initial_replication_size_limit_in_tb: Optional[pulumi.Input[_builtins.str]] = None,
                 jdbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_treat_timestamp_ntz_as_utc: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_use_session_timezone: Optional[pulumi.Input[_builtins.bool]] = None,
                 js_treat_integer_as_bigint: Optional[pulumi.Input[_builtins.bool]] = None,
                 json_indent: Optional[pulumi.Input[_builtins.int]] = None,
                 listing_auto_fulfillment_replication_refresh_schedule: Optional[pulumi.Input[_builtins.str]] = None,
                 lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 log_level: Optional[pulumi.Input[_builtins.str]] = None,
                 max_concurrency_level: Optional[pulumi.Input[_builtins.int]] = None,
                 max_data_extension_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 metric_level: Optional[pulumi.Input[_builtins.str]] = None,
                 min_data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 multi_statement_count: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 noorder_sequence_as_default: Optional[pulumi.Input[_builtins.bool]] = None,
                 oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 odbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 password_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 periodic_data_rekeying: Optional[pulumi.Input[_builtins.bool]] = None,
                 pipe_execution_paused: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_inline_url: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 python_profiler_modules: Optional[pulumi.Input[_builtins.str]] = None,
                 python_profiler_target_stage: Optional[pulumi.Input[_builtins.str]] = None,
                 query_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 quoted_identifiers_ignore_case: Optional[pulumi.Input[_builtins.bool]] = None,
                 replace_invalid_characters: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_creation: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_operation: Optional[pulumi.Input[_builtins.bool]] = None,
                 resource_monitor: Optional[pulumi.Input[_builtins.str]] = None,
                 rows_per_resultset: Optional[pulumi.Input[_builtins.int]] = None,
                 s3_stage_vpce_dns_name: Optional[pulumi.Input[_builtins.str]] = None,
                 saml_identity_provider: Optional[pulumi.Input[_builtins.str]] = None,
                 search_path: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_max_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_min_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 session_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 show_outputs: Optional[pulumi.Input[Sequence[pulumi.Input['CurrentOrganizationAccountShowOutputArgs']]]] = None,
                 simulated_data_sharing_consumer: Optional[pulumi.Input[_builtins.str]] = None,
                 sso_login_page: Optional[pulumi.Input[_builtins.bool]] = None,
                 statement_queued_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 statement_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 storage_serialization_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 strict_json_output: Optional[pulumi.Input[_builtins.bool]] = None,
                 suspend_task_after_num_failures: Optional[pulumi.Input[_builtins.int]] = None,
                 task_auto_retry_attempts: Optional[pulumi.Input[_builtins.int]] = None,
                 time_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 time_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_day_is_always24h: Optional[pulumi.Input[_builtins.bool]] = None,
                 timestamp_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ltz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ntz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_tz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timezone: Optional[pulumi.Input[_builtins.str]] = None,
                 trace_level: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_abort_on_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 transaction_default_isolation_level: Optional[pulumi.Input[_builtins.str]] = None,
                 two_digit_century_start: Optional[pulumi.Input[_builtins.int]] = None,
                 unsupported_ddl_action: Optional[pulumi.Input[_builtins.str]] = None,
                 use_cached_result: Optional[pulumi.Input[_builtins.bool]] = None,
                 user_task_managed_initial_warehouse_size: Optional[pulumi.Input[_builtins.str]] = None,
                 user_task_minimum_trigger_interval_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 user_task_timeout_ms: Optional[pulumi.Input[_builtins.int]] = None,
                 week_of_year_policy: Optional[pulumi.Input[_builtins.int]] = None,
                 week_start: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering CurrentOrganizationAccount resources.
        :param pulumi.Input[_builtins.bool] abort_detached_query: Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        :param pulumi.Input[_builtins.str] active_python_profiler: Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        :param pulumi.Input[_builtins.bool] allow_client_mfa_caching: Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        :param pulumi.Input[_builtins.bool] allow_id_token: Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        :param pulumi.Input[_builtins.bool] autocommit: Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        :param pulumi.Input[_builtins.str] base_location_prefix: Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        :param pulumi.Input[_builtins.str] binary_input_format: The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        :param pulumi.Input[_builtins.str] binary_output_format: The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        :param pulumi.Input[_builtins.str] catalog: Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        :param pulumi.Input[_builtins.str] catalog_sync: Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        :param pulumi.Input[_builtins.bool] client_enable_log_info_statement_parameters: Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        :param pulumi.Input[_builtins.int] client_encryption_key_size: Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        :param pulumi.Input[_builtins.int] client_memory_limit: Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        :param pulumi.Input[_builtins.bool] client_metadata_request_use_connection_ctx: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        :param pulumi.Input[_builtins.bool] client_metadata_use_session_database: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        :param pulumi.Input[_builtins.int] client_prefetch_threads: Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        :param pulumi.Input[_builtins.int] client_result_chunk_size: Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        :param pulumi.Input[_builtins.bool] client_result_column_case_insensitive: Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        :param pulumi.Input[_builtins.bool] client_session_keep_alive: Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        :param pulumi.Input[_builtins.int] client_session_keep_alive_heartbeat_frequency: Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        :param pulumi.Input[_builtins.str] client_timestamp_type_mapping: Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] comment: Specifies a comment for the organization account.
        :param pulumi.Input[_builtins.str] cortex_enabled_cross_region: Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        :param pulumi.Input[_builtins.str] cortex_models_allowlist: Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        :param pulumi.Input[_builtins.str] csv_timestamp_format: Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        :param pulumi.Input[_builtins.int] data_retention_time_in_days: Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        :param pulumi.Input[_builtins.str] date_input_format: Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        :param pulumi.Input[_builtins.str] date_output_format: Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        :param pulumi.Input[_builtins.str] default_ddl_collation: Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_cpu: Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_gpu: Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        :param pulumi.Input[_builtins.str] default_null_ordering: Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        :param pulumi.Input[_builtins.str] default_streamlit_notebook_warehouse: Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        :param pulumi.Input[_builtins.bool] disable_ui_download_button: Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        :param pulumi.Input[_builtins.bool] disable_user_privilege_grants: Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        :param pulumi.Input[_builtins.bool] enable_automatic_sensitive_data_classification_log: Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        :param pulumi.Input[_builtins.bool] enable_egress_cost_optimizer: Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        :param pulumi.Input[_builtins.bool] enable_identifier_first_login: Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        :param pulumi.Input[_builtins.bool] enable_internal_stages_privatelink: Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_image_repository: Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        :param pulumi.Input[_builtins.bool] enable_unhandled_exceptions_reporting: Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        :param pulumi.Input[_builtins.bool] enable_unload_physical_type_optimization: Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        :param pulumi.Input[_builtins.bool] enable_unredacted_query_syntax_error: Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        :param pulumi.Input[_builtins.bool] enable_unredacted_secure_object_error: Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        :param pulumi.Input[_builtins.bool] enforce_network_rules_for_internal_stages: Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_merge: Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_update: Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        :param pulumi.Input[_builtins.str] event_table: Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        :param pulumi.Input[_builtins.bool] external_oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.str] external_volume: Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        :param pulumi.Input[_builtins.str] geography_output_format: Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        :param pulumi.Input[_builtins.str] geometry_output_format: Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        :param pulumi.Input[_builtins.int] hybrid_table_lock_timeout: Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        :param pulumi.Input[_builtins.str] initial_replication_size_limit_in_tb: Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        :param pulumi.Input[_builtins.bool] jdbc_treat_decimal_as_int: Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.bool] jdbc_treat_timestamp_ntz_as_utc: Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        :param pulumi.Input[_builtins.bool] jdbc_use_session_timezone: Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        :param pulumi.Input[_builtins.bool] js_treat_integer_as_bigint: Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        :param pulumi.Input[_builtins.int] json_indent: Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        :param pulumi.Input[_builtins.str] listing_auto_fulfillment_replication_refresh_schedule: Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        :param pulumi.Input[_builtins.int] lock_timeout: Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        :param pulumi.Input[_builtins.str] log_level: Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        :param pulumi.Input[_builtins.int] max_concurrency_level: Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        :param pulumi.Input[_builtins.int] max_data_extension_time_in_days: Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        :param pulumi.Input[_builtins.str] metric_level: Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        :param pulumi.Input[_builtins.int] min_data_retention_time_in_days: Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        :param pulumi.Input[_builtins.int] multi_statement_count: Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        :param pulumi.Input[_builtins.str] name: The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        :param pulumi.Input[_builtins.str] network_policy: Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        :param pulumi.Input[_builtins.bool] noorder_sequence_as_default: Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        :param pulumi.Input[_builtins.bool] oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.bool] odbc_treat_decimal_as_int: Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.str] password_policy: Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        :param pulumi.Input[_builtins.bool] periodic_data_rekeying: It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        :param pulumi.Input[_builtins.bool] pipe_execution_paused: Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_inline_url: Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_internal_stages: Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        :param pulumi.Input[_builtins.str] python_profiler_modules: Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        :param pulumi.Input[_builtins.str] python_profiler_target_stage: Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        :param pulumi.Input[_builtins.str] query_tag: Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        :param pulumi.Input[_builtins.bool] quoted_identifiers_ignore_case: Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        :param pulumi.Input[_builtins.bool] replace_invalid_characters: Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_creation: Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_operation: Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        :param pulumi.Input[_builtins.int] rows_per_resultset: Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        :param pulumi.Input[_builtins.str] s3_stage_vpce_dns_name: Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        :param pulumi.Input[_builtins.str] saml_identity_provider: Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        :param pulumi.Input[_builtins.str] search_path: Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        :param pulumi.Input[_builtins.str] serverless_task_max_statement_size: Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        :param pulumi.Input[_builtins.str] serverless_task_min_statement_size: Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        :param pulumi.Input[_builtins.str] session_policy: Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        :param pulumi.Input[Sequence[pulumi.Input['CurrentOrganizationAccountShowOutputArgs']]] show_outputs: Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
        :param pulumi.Input[_builtins.str] simulated_data_sharing_consumer: Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        :param pulumi.Input[_builtins.bool] sso_login_page: This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        :param pulumi.Input[_builtins.int] statement_queued_timeout_in_seconds: Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        :param pulumi.Input[_builtins.int] statement_timeout_in_seconds: Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        :param pulumi.Input[_builtins.str] storage_serialization_policy: Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        :param pulumi.Input[_builtins.bool] strict_json_output: This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        :param pulumi.Input[_builtins.int] suspend_task_after_num_failures: Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        :param pulumi.Input[_builtins.int] task_auto_retry_attempts: Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        :param pulumi.Input[_builtins.str] time_input_format: Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        :param pulumi.Input[_builtins.str] time_output_format: Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        :param pulumi.Input[_builtins.bool] timestamp_day_is_always24h: Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        :param pulumi.Input[_builtins.str] timestamp_input_format: Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        :param pulumi.Input[_builtins.str] timestamp_ltz_output_format: Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_ntz_output_format: Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_output_format: Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        :param pulumi.Input[_builtins.str] timestamp_type_mapping: Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] timestamp_tz_output_format: Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        :param pulumi.Input[_builtins.str] timezone: Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        :param pulumi.Input[_builtins.str] trace_level: Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        :param pulumi.Input[_builtins.bool] transaction_abort_on_error: Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        :param pulumi.Input[_builtins.str] transaction_default_isolation_level: Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        :param pulumi.Input[_builtins.int] two_digit_century_start: Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        :param pulumi.Input[_builtins.str] unsupported_ddl_action: Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        :param pulumi.Input[_builtins.bool] use_cached_result: Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        :param pulumi.Input[_builtins.str] user_task_managed_initial_warehouse_size: Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        :param pulumi.Input[_builtins.int] user_task_minimum_trigger_interval_in_seconds: Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        :param pulumi.Input[_builtins.int] user_task_timeout_ms: Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        :param pulumi.Input[_builtins.int] week_of_year_policy: Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        :param pulumi.Input[_builtins.int] week_start: Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        if abort_detached_query is not None:
            pulumi.set(__self__, "abort_detached_query", abort_detached_query)
        if active_python_profiler is not None:
            pulumi.set(__self__, "active_python_profiler", active_python_profiler)
        if allow_client_mfa_caching is not None:
            pulumi.set(__self__, "allow_client_mfa_caching", allow_client_mfa_caching)
        if allow_id_token is not None:
            pulumi.set(__self__, "allow_id_token", allow_id_token)
        if autocommit is not None:
            pulumi.set(__self__, "autocommit", autocommit)
        if base_location_prefix is not None:
            pulumi.set(__self__, "base_location_prefix", base_location_prefix)
        if binary_input_format is not None:
            pulumi.set(__self__, "binary_input_format", binary_input_format)
        if binary_output_format is not None:
            pulumi.set(__self__, "binary_output_format", binary_output_format)
        if catalog is not None:
            pulumi.set(__self__, "catalog", catalog)
        if catalog_sync is not None:
            pulumi.set(__self__, "catalog_sync", catalog_sync)
        if client_enable_log_info_statement_parameters is not None:
            pulumi.set(__self__, "client_enable_log_info_statement_parameters", client_enable_log_info_statement_parameters)
        if client_encryption_key_size is not None:
            pulumi.set(__self__, "client_encryption_key_size", client_encryption_key_size)
        if client_memory_limit is not None:
            pulumi.set(__self__, "client_memory_limit", client_memory_limit)
        if client_metadata_request_use_connection_ctx is not None:
            pulumi.set(__self__, "client_metadata_request_use_connection_ctx", client_metadata_request_use_connection_ctx)
        if client_metadata_use_session_database is not None:
            pulumi.set(__self__, "client_metadata_use_session_database", client_metadata_use_session_database)
        if client_prefetch_threads is not None:
            pulumi.set(__self__, "client_prefetch_threads", client_prefetch_threads)
        if client_result_chunk_size is not None:
            pulumi.set(__self__, "client_result_chunk_size", client_result_chunk_size)
        if client_result_column_case_insensitive is not None:
            pulumi.set(__self__, "client_result_column_case_insensitive", client_result_column_case_insensitive)
        if client_session_keep_alive is not None:
            pulumi.set(__self__, "client_session_keep_alive", client_session_keep_alive)
        if client_session_keep_alive_heartbeat_frequency is not None:
            pulumi.set(__self__, "client_session_keep_alive_heartbeat_frequency", client_session_keep_alive_heartbeat_frequency)
        if client_timestamp_type_mapping is not None:
            pulumi.set(__self__, "client_timestamp_type_mapping", client_timestamp_type_mapping)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if cortex_enabled_cross_region is not None:
            pulumi.set(__self__, "cortex_enabled_cross_region", cortex_enabled_cross_region)
        if cortex_models_allowlist is not None:
            pulumi.set(__self__, "cortex_models_allowlist", cortex_models_allowlist)
        if csv_timestamp_format is not None:
            pulumi.set(__self__, "csv_timestamp_format", csv_timestamp_format)
        if data_retention_time_in_days is not None:
            pulumi.set(__self__, "data_retention_time_in_days", data_retention_time_in_days)
        if date_input_format is not None:
            pulumi.set(__self__, "date_input_format", date_input_format)
        if date_output_format is not None:
            pulumi.set(__self__, "date_output_format", date_output_format)
        if default_ddl_collation is not None:
            pulumi.set(__self__, "default_ddl_collation", default_ddl_collation)
        if default_notebook_compute_pool_cpu is not None:
            pulumi.set(__self__, "default_notebook_compute_pool_cpu", default_notebook_compute_pool_cpu)
        if default_notebook_compute_pool_gpu is not None:
            pulumi.set(__self__, "default_notebook_compute_pool_gpu", default_notebook_compute_pool_gpu)
        if default_null_ordering is not None:
            pulumi.set(__self__, "default_null_ordering", default_null_ordering)
        if default_streamlit_notebook_warehouse is not None:
            pulumi.set(__self__, "default_streamlit_notebook_warehouse", default_streamlit_notebook_warehouse)
        if disable_ui_download_button is not None:
            pulumi.set(__self__, "disable_ui_download_button", disable_ui_download_button)
        if disable_user_privilege_grants is not None:
            pulumi.set(__self__, "disable_user_privilege_grants", disable_user_privilege_grants)
        if enable_automatic_sensitive_data_classification_log is not None:
            pulumi.set(__self__, "enable_automatic_sensitive_data_classification_log", enable_automatic_sensitive_data_classification_log)
        if enable_egress_cost_optimizer is not None:
            pulumi.set(__self__, "enable_egress_cost_optimizer", enable_egress_cost_optimizer)
        if enable_identifier_first_login is not None:
            pulumi.set(__self__, "enable_identifier_first_login", enable_identifier_first_login)
        if enable_internal_stages_privatelink is not None:
            pulumi.set(__self__, "enable_internal_stages_privatelink", enable_internal_stages_privatelink)
        if enable_tri_secret_and_rekey_opt_out_for_image_repository is not None:
            pulumi.set(__self__, "enable_tri_secret_and_rekey_opt_out_for_image_repository", enable_tri_secret_and_rekey_opt_out_for_image_repository)
        if enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage is not None:
            pulumi.set(__self__, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage)
        if enable_unhandled_exceptions_reporting is not None:
            pulumi.set(__self__, "enable_unhandled_exceptions_reporting", enable_unhandled_exceptions_reporting)
        if enable_unload_physical_type_optimization is not None:
            pulumi.set(__self__, "enable_unload_physical_type_optimization", enable_unload_physical_type_optimization)
        if enable_unredacted_query_syntax_error is not None:
            pulumi.set(__self__, "enable_unredacted_query_syntax_error", enable_unredacted_query_syntax_error)
        if enable_unredacted_secure_object_error is not None:
            pulumi.set(__self__, "enable_unredacted_secure_object_error", enable_unredacted_secure_object_error)
        if enforce_network_rules_for_internal_stages is not None:
            pulumi.set(__self__, "enforce_network_rules_for_internal_stages", enforce_network_rules_for_internal_stages)
        if error_on_nondeterministic_merge is not None:
            pulumi.set(__self__, "error_on_nondeterministic_merge", error_on_nondeterministic_merge)
        if error_on_nondeterministic_update is not None:
            pulumi.set(__self__, "error_on_nondeterministic_update", error_on_nondeterministic_update)
        if event_table is not None:
            pulumi.set(__self__, "event_table", event_table)
        if external_oauth_add_privileged_roles_to_blocked_list is not None:
            pulumi.set(__self__, "external_oauth_add_privileged_roles_to_blocked_list", external_oauth_add_privileged_roles_to_blocked_list)
        if external_volume is not None:
            pulumi.set(__self__, "external_volume", external_volume)
        if geography_output_format is not None:
            pulumi.set(__self__, "geography_output_format", geography_output_format)
        if geometry_output_format is not None:
            pulumi.set(__self__, "geometry_output_format", geometry_output_format)
        if hybrid_table_lock_timeout is not None:
            pulumi.set(__self__, "hybrid_table_lock_timeout", hybrid_table_lock_timeout)
        if initial_replication_size_limit_in_tb is not None:
            pulumi.set(__self__, "initial_replication_size_limit_in_tb", initial_replication_size_limit_in_tb)
        if jdbc_treat_decimal_as_int is not None:
            pulumi.set(__self__, "jdbc_treat_decimal_as_int", jdbc_treat_decimal_as_int)
        if jdbc_treat_timestamp_ntz_as_utc is not None:
            pulumi.set(__self__, "jdbc_treat_timestamp_ntz_as_utc", jdbc_treat_timestamp_ntz_as_utc)
        if jdbc_use_session_timezone is not None:
            pulumi.set(__self__, "jdbc_use_session_timezone", jdbc_use_session_timezone)
        if js_treat_integer_as_bigint is not None:
            pulumi.set(__self__, "js_treat_integer_as_bigint", js_treat_integer_as_bigint)
        if json_indent is not None:
            pulumi.set(__self__, "json_indent", json_indent)
        if listing_auto_fulfillment_replication_refresh_schedule is not None:
            pulumi.set(__self__, "listing_auto_fulfillment_replication_refresh_schedule", listing_auto_fulfillment_replication_refresh_schedule)
        if lock_timeout is not None:
            pulumi.set(__self__, "lock_timeout", lock_timeout)
        if log_level is not None:
            pulumi.set(__self__, "log_level", log_level)
        if max_concurrency_level is not None:
            pulumi.set(__self__, "max_concurrency_level", max_concurrency_level)
        if max_data_extension_time_in_days is not None:
            pulumi.set(__self__, "max_data_extension_time_in_days", max_data_extension_time_in_days)
        if metric_level is not None:
            pulumi.set(__self__, "metric_level", metric_level)
        if min_data_retention_time_in_days is not None:
            pulumi.set(__self__, "min_data_retention_time_in_days", min_data_retention_time_in_days)
        if multi_statement_count is not None:
            pulumi.set(__self__, "multi_statement_count", multi_statement_count)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_policy is not None:
            pulumi.set(__self__, "network_policy", network_policy)
        if noorder_sequence_as_default is not None:
            pulumi.set(__self__, "noorder_sequence_as_default", noorder_sequence_as_default)
        if oauth_add_privileged_roles_to_blocked_list is not None:
            pulumi.set(__self__, "oauth_add_privileged_roles_to_blocked_list", oauth_add_privileged_roles_to_blocked_list)
        if odbc_treat_decimal_as_int is not None:
            pulumi.set(__self__, "odbc_treat_decimal_as_int", odbc_treat_decimal_as_int)
        if password_policy is not None:
            pulumi.set(__self__, "password_policy", password_policy)
        if periodic_data_rekeying is not None:
            pulumi.set(__self__, "periodic_data_rekeying", periodic_data_rekeying)
        if pipe_execution_paused is not None:
            pulumi.set(__self__, "pipe_execution_paused", pipe_execution_paused)
        if prevent_unload_to_inline_url is not None:
            pulumi.set(__self__, "prevent_unload_to_inline_url", prevent_unload_to_inline_url)
        if prevent_unload_to_internal_stages is not None:
            pulumi.set(__self__, "prevent_unload_to_internal_stages", prevent_unload_to_internal_stages)
        if python_profiler_modules is not None:
            pulumi.set(__self__, "python_profiler_modules", python_profiler_modules)
        if python_profiler_target_stage is not None:
            pulumi.set(__self__, "python_profiler_target_stage", python_profiler_target_stage)
        if query_tag is not None:
            pulumi.set(__self__, "query_tag", query_tag)
        if quoted_identifiers_ignore_case is not None:
            pulumi.set(__self__, "quoted_identifiers_ignore_case", quoted_identifiers_ignore_case)
        if replace_invalid_characters is not None:
            pulumi.set(__self__, "replace_invalid_characters", replace_invalid_characters)
        if require_storage_integration_for_stage_creation is not None:
            pulumi.set(__self__, "require_storage_integration_for_stage_creation", require_storage_integration_for_stage_creation)
        if require_storage_integration_for_stage_operation is not None:
            pulumi.set(__self__, "require_storage_integration_for_stage_operation", require_storage_integration_for_stage_operation)
        if resource_monitor is not None:
            pulumi.set(__self__, "resource_monitor", resource_monitor)
        if rows_per_resultset is not None:
            pulumi.set(__self__, "rows_per_resultset", rows_per_resultset)
        if s3_stage_vpce_dns_name is not None:
            pulumi.set(__self__, "s3_stage_vpce_dns_name", s3_stage_vpce_dns_name)
        if saml_identity_provider is not None:
            pulumi.set(__self__, "saml_identity_provider", saml_identity_provider)
        if search_path is not None:
            pulumi.set(__self__, "search_path", search_path)
        if serverless_task_max_statement_size is not None:
            pulumi.set(__self__, "serverless_task_max_statement_size", serverless_task_max_statement_size)
        if serverless_task_min_statement_size is not None:
            pulumi.set(__self__, "serverless_task_min_statement_size", serverless_task_min_statement_size)
        if session_policy is not None:
            pulumi.set(__self__, "session_policy", session_policy)
        if show_outputs is not None:
            pulumi.set(__self__, "show_outputs", show_outputs)
        if simulated_data_sharing_consumer is not None:
            pulumi.set(__self__, "simulated_data_sharing_consumer", simulated_data_sharing_consumer)
        if sso_login_page is not None:
            pulumi.set(__self__, "sso_login_page", sso_login_page)
        if statement_queued_timeout_in_seconds is not None:
            pulumi.set(__self__, "statement_queued_timeout_in_seconds", statement_queued_timeout_in_seconds)
        if statement_timeout_in_seconds is not None:
            pulumi.set(__self__, "statement_timeout_in_seconds", statement_timeout_in_seconds)
        if storage_serialization_policy is not None:
            pulumi.set(__self__, "storage_serialization_policy", storage_serialization_policy)
        if strict_json_output is not None:
            pulumi.set(__self__, "strict_json_output", strict_json_output)
        if suspend_task_after_num_failures is not None:
            pulumi.set(__self__, "suspend_task_after_num_failures", suspend_task_after_num_failures)
        if task_auto_retry_attempts is not None:
            pulumi.set(__self__, "task_auto_retry_attempts", task_auto_retry_attempts)
        if time_input_format is not None:
            pulumi.set(__self__, "time_input_format", time_input_format)
        if time_output_format is not None:
            pulumi.set(__self__, "time_output_format", time_output_format)
        if timestamp_day_is_always24h is not None:
            pulumi.set(__self__, "timestamp_day_is_always24h", timestamp_day_is_always24h)
        if timestamp_input_format is not None:
            pulumi.set(__self__, "timestamp_input_format", timestamp_input_format)
        if timestamp_ltz_output_format is not None:
            pulumi.set(__self__, "timestamp_ltz_output_format", timestamp_ltz_output_format)
        if timestamp_ntz_output_format is not None:
            pulumi.set(__self__, "timestamp_ntz_output_format", timestamp_ntz_output_format)
        if timestamp_output_format is not None:
            pulumi.set(__self__, "timestamp_output_format", timestamp_output_format)
        if timestamp_type_mapping is not None:
            pulumi.set(__self__, "timestamp_type_mapping", timestamp_type_mapping)
        if timestamp_tz_output_format is not None:
            pulumi.set(__self__, "timestamp_tz_output_format", timestamp_tz_output_format)
        if timezone is not None:
            pulumi.set(__self__, "timezone", timezone)
        if trace_level is not None:
            pulumi.set(__self__, "trace_level", trace_level)
        if transaction_abort_on_error is not None:
            pulumi.set(__self__, "transaction_abort_on_error", transaction_abort_on_error)
        if transaction_default_isolation_level is not None:
            pulumi.set(__self__, "transaction_default_isolation_level", transaction_default_isolation_level)
        if two_digit_century_start is not None:
            pulumi.set(__self__, "two_digit_century_start", two_digit_century_start)
        if unsupported_ddl_action is not None:
            pulumi.set(__self__, "unsupported_ddl_action", unsupported_ddl_action)
        if use_cached_result is not None:
            pulumi.set(__self__, "use_cached_result", use_cached_result)
        if user_task_managed_initial_warehouse_size is not None:
            pulumi.set(__self__, "user_task_managed_initial_warehouse_size", user_task_managed_initial_warehouse_size)
        if user_task_minimum_trigger_interval_in_seconds is not None:
            pulumi.set(__self__, "user_task_minimum_trigger_interval_in_seconds", user_task_minimum_trigger_interval_in_seconds)
        if user_task_timeout_ms is not None:
            pulumi.set(__self__, "user_task_timeout_ms", user_task_timeout_ms)
        if week_of_year_policy is not None:
            pulumi.set(__self__, "week_of_year_policy", week_of_year_policy)
        if week_start is not None:
            pulumi.set(__self__, "week_start", week_start)

    @_builtins.property
    @pulumi.getter(name="abortDetachedQuery")
    def abort_detached_query(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        """
        return pulumi.get(self, "abort_detached_query")

    @abort_detached_query.setter
    def abort_detached_query(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "abort_detached_query", value)

    @_builtins.property
    @pulumi.getter(name="activePythonProfiler")
    def active_python_profiler(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        """
        return pulumi.get(self, "active_python_profiler")

    @active_python_profiler.setter
    def active_python_profiler(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "active_python_profiler", value)

    @_builtins.property
    @pulumi.getter(name="allowClientMfaCaching")
    def allow_client_mfa_caching(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        """
        return pulumi.get(self, "allow_client_mfa_caching")

    @allow_client_mfa_caching.setter
    def allow_client_mfa_caching(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_client_mfa_caching", value)

    @_builtins.property
    @pulumi.getter(name="allowIdToken")
    def allow_id_token(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        """
        return pulumi.get(self, "allow_id_token")

    @allow_id_token.setter
    def allow_id_token(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "allow_id_token", value)

    @_builtins.property
    @pulumi.getter
    def autocommit(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        """
        return pulumi.get(self, "autocommit")

    @autocommit.setter
    def autocommit(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "autocommit", value)

    @_builtins.property
    @pulumi.getter(name="baseLocationPrefix")
    def base_location_prefix(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        """
        return pulumi.get(self, "base_location_prefix")

    @base_location_prefix.setter
    def base_location_prefix(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "base_location_prefix", value)

    @_builtins.property
    @pulumi.getter(name="binaryInputFormat")
    def binary_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        """
        return pulumi.get(self, "binary_input_format")

    @binary_input_format.setter
    def binary_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binary_input_format", value)

    @_builtins.property
    @pulumi.getter(name="binaryOutputFormat")
    def binary_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        """
        return pulumi.get(self, "binary_output_format")

    @binary_output_format.setter
    def binary_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "binary_output_format", value)

    @_builtins.property
    @pulumi.getter
    def catalog(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        """
        return pulumi.get(self, "catalog")

    @catalog.setter
    def catalog(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog", value)

    @_builtins.property
    @pulumi.getter(name="catalogSync")
    def catalog_sync(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        """
        return pulumi.get(self, "catalog_sync")

    @catalog_sync.setter
    def catalog_sync(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "catalog_sync", value)

    @_builtins.property
    @pulumi.getter(name="clientEnableLogInfoStatementParameters")
    def client_enable_log_info_statement_parameters(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        """
        return pulumi.get(self, "client_enable_log_info_statement_parameters")

    @client_enable_log_info_statement_parameters.setter
    def client_enable_log_info_statement_parameters(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_enable_log_info_statement_parameters", value)

    @_builtins.property
    @pulumi.getter(name="clientEncryptionKeySize")
    def client_encryption_key_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        """
        return pulumi.get(self, "client_encryption_key_size")

    @client_encryption_key_size.setter
    def client_encryption_key_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_encryption_key_size", value)

    @_builtins.property
    @pulumi.getter(name="clientMemoryLimit")
    def client_memory_limit(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        """
        return pulumi.get(self, "client_memory_limit")

    @client_memory_limit.setter
    def client_memory_limit(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_memory_limit", value)

    @_builtins.property
    @pulumi.getter(name="clientMetadataRequestUseConnectionCtx")
    def client_metadata_request_use_connection_ctx(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        """
        return pulumi.get(self, "client_metadata_request_use_connection_ctx")

    @client_metadata_request_use_connection_ctx.setter
    def client_metadata_request_use_connection_ctx(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_metadata_request_use_connection_ctx", value)

    @_builtins.property
    @pulumi.getter(name="clientMetadataUseSessionDatabase")
    def client_metadata_use_session_database(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        """
        return pulumi.get(self, "client_metadata_use_session_database")

    @client_metadata_use_session_database.setter
    def client_metadata_use_session_database(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_metadata_use_session_database", value)

    @_builtins.property
    @pulumi.getter(name="clientPrefetchThreads")
    def client_prefetch_threads(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        """
        return pulumi.get(self, "client_prefetch_threads")

    @client_prefetch_threads.setter
    def client_prefetch_threads(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_prefetch_threads", value)

    @_builtins.property
    @pulumi.getter(name="clientResultChunkSize")
    def client_result_chunk_size(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        """
        return pulumi.get(self, "client_result_chunk_size")

    @client_result_chunk_size.setter
    def client_result_chunk_size(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_result_chunk_size", value)

    @_builtins.property
    @pulumi.getter(name="clientResultColumnCaseInsensitive")
    def client_result_column_case_insensitive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        """
        return pulumi.get(self, "client_result_column_case_insensitive")

    @client_result_column_case_insensitive.setter
    def client_result_column_case_insensitive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_result_column_case_insensitive", value)

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAlive")
    def client_session_keep_alive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        """
        return pulumi.get(self, "client_session_keep_alive")

    @client_session_keep_alive.setter
    def client_session_keep_alive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "client_session_keep_alive", value)

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAliveHeartbeatFrequency")
    def client_session_keep_alive_heartbeat_frequency(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        """
        return pulumi.get(self, "client_session_keep_alive_heartbeat_frequency")

    @client_session_keep_alive_heartbeat_frequency.setter
    def client_session_keep_alive_heartbeat_frequency(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "client_session_keep_alive_heartbeat_frequency", value)

    @_builtins.property
    @pulumi.getter(name="clientTimestampTypeMapping")
    def client_timestamp_type_mapping(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        """
        return pulumi.get(self, "client_timestamp_type_mapping")

    @client_timestamp_type_mapping.setter
    def client_timestamp_type_mapping(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "client_timestamp_type_mapping", value)

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies a comment for the organization account.
        """
        return pulumi.get(self, "comment")

    @comment.setter
    def comment(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "comment", value)

    @_builtins.property
    @pulumi.getter(name="cortexEnabledCrossRegion")
    def cortex_enabled_cross_region(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        """
        return pulumi.get(self, "cortex_enabled_cross_region")

    @cortex_enabled_cross_region.setter
    def cortex_enabled_cross_region(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cortex_enabled_cross_region", value)

    @_builtins.property
    @pulumi.getter(name="cortexModelsAllowlist")
    def cortex_models_allowlist(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        """
        return pulumi.get(self, "cortex_models_allowlist")

    @cortex_models_allowlist.setter
    def cortex_models_allowlist(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cortex_models_allowlist", value)

    @_builtins.property
    @pulumi.getter(name="csvTimestampFormat")
    def csv_timestamp_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        """
        return pulumi.get(self, "csv_timestamp_format")

    @csv_timestamp_format.setter
    def csv_timestamp_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "csv_timestamp_format", value)

    @_builtins.property
    @pulumi.getter(name="dataRetentionTimeInDays")
    def data_retention_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        """
        return pulumi.get(self, "data_retention_time_in_days")

    @data_retention_time_in_days.setter
    def data_retention_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "data_retention_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="dateInputFormat")
    def date_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        """
        return pulumi.get(self, "date_input_format")

    @date_input_format.setter
    def date_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "date_input_format", value)

    @_builtins.property
    @pulumi.getter(name="dateOutputFormat")
    def date_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        """
        return pulumi.get(self, "date_output_format")

    @date_output_format.setter
    def date_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "date_output_format", value)

    @_builtins.property
    @pulumi.getter(name="defaultDdlCollation")
    def default_ddl_collation(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        """
        return pulumi.get(self, "default_ddl_collation")

    @default_ddl_collation.setter
    def default_ddl_collation(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_ddl_collation", value)

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolCpu")
    def default_notebook_compute_pool_cpu(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_cpu")

    @default_notebook_compute_pool_cpu.setter
    def default_notebook_compute_pool_cpu(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_notebook_compute_pool_cpu", value)

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolGpu")
    def default_notebook_compute_pool_gpu(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_gpu")

    @default_notebook_compute_pool_gpu.setter
    def default_notebook_compute_pool_gpu(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_notebook_compute_pool_gpu", value)

    @_builtins.property
    @pulumi.getter(name="defaultNullOrdering")
    def default_null_ordering(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        """
        return pulumi.get(self, "default_null_ordering")

    @default_null_ordering.setter
    def default_null_ordering(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_null_ordering", value)

    @_builtins.property
    @pulumi.getter(name="defaultStreamlitNotebookWarehouse")
    def default_streamlit_notebook_warehouse(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        """
        return pulumi.get(self, "default_streamlit_notebook_warehouse")

    @default_streamlit_notebook_warehouse.setter
    def default_streamlit_notebook_warehouse(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "default_streamlit_notebook_warehouse", value)

    @_builtins.property
    @pulumi.getter(name="disableUiDownloadButton")
    def disable_ui_download_button(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        """
        return pulumi.get(self, "disable_ui_download_button")

    @disable_ui_download_button.setter
    def disable_ui_download_button(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "disable_ui_download_button", value)

    @_builtins.property
    @pulumi.getter(name="disableUserPrivilegeGrants")
    def disable_user_privilege_grants(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        """
        return pulumi.get(self, "disable_user_privilege_grants")

    @disable_user_privilege_grants.setter
    def disable_user_privilege_grants(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "disable_user_privilege_grants", value)

    @_builtins.property
    @pulumi.getter(name="enableAutomaticSensitiveDataClassificationLog")
    def enable_automatic_sensitive_data_classification_log(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        """
        return pulumi.get(self, "enable_automatic_sensitive_data_classification_log")

    @enable_automatic_sensitive_data_classification_log.setter
    def enable_automatic_sensitive_data_classification_log(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_automatic_sensitive_data_classification_log", value)

    @_builtins.property
    @pulumi.getter(name="enableEgressCostOptimizer")
    def enable_egress_cost_optimizer(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        """
        return pulumi.get(self, "enable_egress_cost_optimizer")

    @enable_egress_cost_optimizer.setter
    def enable_egress_cost_optimizer(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_egress_cost_optimizer", value)

    @_builtins.property
    @pulumi.getter(name="enableIdentifierFirstLogin")
    def enable_identifier_first_login(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        """
        return pulumi.get(self, "enable_identifier_first_login")

    @enable_identifier_first_login.setter
    def enable_identifier_first_login(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_identifier_first_login", value)

    @_builtins.property
    @pulumi.getter(name="enableInternalStagesPrivatelink")
    def enable_internal_stages_privatelink(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        """
        return pulumi.get(self, "enable_internal_stages_privatelink")

    @enable_internal_stages_privatelink.setter
    def enable_internal_stages_privatelink(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_internal_stages_privatelink", value)

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForImageRepository")
    def enable_tri_secret_and_rekey_opt_out_for_image_repository(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_image_repository")

    @enable_tri_secret_and_rekey_opt_out_for_image_repository.setter
    def enable_tri_secret_and_rekey_opt_out_for_image_repository(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_tri_secret_and_rekey_opt_out_for_image_repository", value)

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForSpcsBlockStorage")
    def enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage")

    @enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage.setter
    def enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage", value)

    @_builtins.property
    @pulumi.getter(name="enableUnhandledExceptionsReporting")
    def enable_unhandled_exceptions_reporting(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        """
        return pulumi.get(self, "enable_unhandled_exceptions_reporting")

    @enable_unhandled_exceptions_reporting.setter
    def enable_unhandled_exceptions_reporting(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unhandled_exceptions_reporting", value)

    @_builtins.property
    @pulumi.getter(name="enableUnloadPhysicalTypeOptimization")
    def enable_unload_physical_type_optimization(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        """
        return pulumi.get(self, "enable_unload_physical_type_optimization")

    @enable_unload_physical_type_optimization.setter
    def enable_unload_physical_type_optimization(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unload_physical_type_optimization", value)

    @_builtins.property
    @pulumi.getter(name="enableUnredactedQuerySyntaxError")
    def enable_unredacted_query_syntax_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        """
        return pulumi.get(self, "enable_unredacted_query_syntax_error")

    @enable_unredacted_query_syntax_error.setter
    def enable_unredacted_query_syntax_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unredacted_query_syntax_error", value)

    @_builtins.property
    @pulumi.getter(name="enableUnredactedSecureObjectError")
    def enable_unredacted_secure_object_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        """
        return pulumi.get(self, "enable_unredacted_secure_object_error")

    @enable_unredacted_secure_object_error.setter
    def enable_unredacted_secure_object_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enable_unredacted_secure_object_error", value)

    @_builtins.property
    @pulumi.getter(name="enforceNetworkRulesForInternalStages")
    def enforce_network_rules_for_internal_stages(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        """
        return pulumi.get(self, "enforce_network_rules_for_internal_stages")

    @enforce_network_rules_for_internal_stages.setter
    def enforce_network_rules_for_internal_stages(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "enforce_network_rules_for_internal_stages", value)

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicMerge")
    def error_on_nondeterministic_merge(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        """
        return pulumi.get(self, "error_on_nondeterministic_merge")

    @error_on_nondeterministic_merge.setter
    def error_on_nondeterministic_merge(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "error_on_nondeterministic_merge", value)

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicUpdate")
    def error_on_nondeterministic_update(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        """
        return pulumi.get(self, "error_on_nondeterministic_update")

    @error_on_nondeterministic_update.setter
    def error_on_nondeterministic_update(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "error_on_nondeterministic_update", value)

    @_builtins.property
    @pulumi.getter(name="eventTable")
    def event_table(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        """
        return pulumi.get(self, "event_table")

    @event_table.setter
    def event_table(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "event_table", value)

    @_builtins.property
    @pulumi.getter(name="externalOauthAddPrivilegedRolesToBlockedList")
    def external_oauth_add_privileged_roles_to_blocked_list(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "external_oauth_add_privileged_roles_to_blocked_list")

    @external_oauth_add_privileged_roles_to_blocked_list.setter
    def external_oauth_add_privileged_roles_to_blocked_list(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "external_oauth_add_privileged_roles_to_blocked_list", value)

    @_builtins.property
    @pulumi.getter(name="externalVolume")
    def external_volume(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        """
        return pulumi.get(self, "external_volume")

    @external_volume.setter
    def external_volume(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "external_volume", value)

    @_builtins.property
    @pulumi.getter(name="geographyOutputFormat")
    def geography_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        """
        return pulumi.get(self, "geography_output_format")

    @geography_output_format.setter
    def geography_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "geography_output_format", value)

    @_builtins.property
    @pulumi.getter(name="geometryOutputFormat")
    def geometry_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        """
        return pulumi.get(self, "geometry_output_format")

    @geometry_output_format.setter
    def geometry_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "geometry_output_format", value)

    @_builtins.property
    @pulumi.getter(name="hybridTableLockTimeout")
    def hybrid_table_lock_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        """
        return pulumi.get(self, "hybrid_table_lock_timeout")

    @hybrid_table_lock_timeout.setter
    def hybrid_table_lock_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "hybrid_table_lock_timeout", value)

    @_builtins.property
    @pulumi.getter(name="initialReplicationSizeLimitInTb")
    def initial_replication_size_limit_in_tb(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        """
        return pulumi.get(self, "initial_replication_size_limit_in_tb")

    @initial_replication_size_limit_in_tb.setter
    def initial_replication_size_limit_in_tb(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "initial_replication_size_limit_in_tb", value)

    @_builtins.property
    @pulumi.getter(name="jdbcTreatDecimalAsInt")
    def jdbc_treat_decimal_as_int(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "jdbc_treat_decimal_as_int")

    @jdbc_treat_decimal_as_int.setter
    def jdbc_treat_decimal_as_int(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_treat_decimal_as_int", value)

    @_builtins.property
    @pulumi.getter(name="jdbcTreatTimestampNtzAsUtc")
    def jdbc_treat_timestamp_ntz_as_utc(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        """
        return pulumi.get(self, "jdbc_treat_timestamp_ntz_as_utc")

    @jdbc_treat_timestamp_ntz_as_utc.setter
    def jdbc_treat_timestamp_ntz_as_utc(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_treat_timestamp_ntz_as_utc", value)

    @_builtins.property
    @pulumi.getter(name="jdbcUseSessionTimezone")
    def jdbc_use_session_timezone(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        """
        return pulumi.get(self, "jdbc_use_session_timezone")

    @jdbc_use_session_timezone.setter
    def jdbc_use_session_timezone(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "jdbc_use_session_timezone", value)

    @_builtins.property
    @pulumi.getter(name="jsTreatIntegerAsBigint")
    def js_treat_integer_as_bigint(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        """
        return pulumi.get(self, "js_treat_integer_as_bigint")

    @js_treat_integer_as_bigint.setter
    def js_treat_integer_as_bigint(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "js_treat_integer_as_bigint", value)

    @_builtins.property
    @pulumi.getter(name="jsonIndent")
    def json_indent(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        """
        return pulumi.get(self, "json_indent")

    @json_indent.setter
    def json_indent(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "json_indent", value)

    @_builtins.property
    @pulumi.getter(name="listingAutoFulfillmentReplicationRefreshSchedule")
    def listing_auto_fulfillment_replication_refresh_schedule(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        """
        return pulumi.get(self, "listing_auto_fulfillment_replication_refresh_schedule")

    @listing_auto_fulfillment_replication_refresh_schedule.setter
    def listing_auto_fulfillment_replication_refresh_schedule(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "listing_auto_fulfillment_replication_refresh_schedule", value)

    @_builtins.property
    @pulumi.getter(name="lockTimeout")
    def lock_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        """
        return pulumi.get(self, "lock_timeout")

    @lock_timeout.setter
    def lock_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "lock_timeout", value)

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        """
        return pulumi.get(self, "log_level")

    @log_level.setter
    def log_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "log_level", value)

    @_builtins.property
    @pulumi.getter(name="maxConcurrencyLevel")
    def max_concurrency_level(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        """
        return pulumi.get(self, "max_concurrency_level")

    @max_concurrency_level.setter
    def max_concurrency_level(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_concurrency_level", value)

    @_builtins.property
    @pulumi.getter(name="maxDataExtensionTimeInDays")
    def max_data_extension_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        """
        return pulumi.get(self, "max_data_extension_time_in_days")

    @max_data_extension_time_in_days.setter
    def max_data_extension_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "max_data_extension_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="metricLevel")
    def metric_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        """
        return pulumi.get(self, "metric_level")

    @metric_level.setter
    def metric_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "metric_level", value)

    @_builtins.property
    @pulumi.getter(name="minDataRetentionTimeInDays")
    def min_data_retention_time_in_days(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        """
        return pulumi.get(self, "min_data_retention_time_in_days")

    @min_data_retention_time_in_days.setter
    def min_data_retention_time_in_days(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "min_data_retention_time_in_days", value)

    @_builtins.property
    @pulumi.getter(name="multiStatementCount")
    def multi_statement_count(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        """
        return pulumi.get(self, "multi_statement_count")

    @multi_statement_count.setter
    def multi_statement_count(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "multi_statement_count", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="networkPolicy")
    def network_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        """
        return pulumi.get(self, "network_policy")

    @network_policy.setter
    def network_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "network_policy", value)

    @_builtins.property
    @pulumi.getter(name="noorderSequenceAsDefault")
    def noorder_sequence_as_default(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        """
        return pulumi.get(self, "noorder_sequence_as_default")

    @noorder_sequence_as_default.setter
    def noorder_sequence_as_default(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "noorder_sequence_as_default", value)

    @_builtins.property
    @pulumi.getter(name="oauthAddPrivilegedRolesToBlockedList")
    def oauth_add_privileged_roles_to_blocked_list(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "oauth_add_privileged_roles_to_blocked_list")

    @oauth_add_privileged_roles_to_blocked_list.setter
    def oauth_add_privileged_roles_to_blocked_list(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "oauth_add_privileged_roles_to_blocked_list", value)

    @_builtins.property
    @pulumi.getter(name="odbcTreatDecimalAsInt")
    def odbc_treat_decimal_as_int(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "odbc_treat_decimal_as_int")

    @odbc_treat_decimal_as_int.setter
    def odbc_treat_decimal_as_int(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "odbc_treat_decimal_as_int", value)

    @_builtins.property
    @pulumi.getter(name="passwordPolicy")
    def password_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        """
        return pulumi.get(self, "password_policy")

    @password_policy.setter
    def password_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "password_policy", value)

    @_builtins.property
    @pulumi.getter(name="periodicDataRekeying")
    def periodic_data_rekeying(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        """
        return pulumi.get(self, "periodic_data_rekeying")

    @periodic_data_rekeying.setter
    def periodic_data_rekeying(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "periodic_data_rekeying", value)

    @_builtins.property
    @pulumi.getter(name="pipeExecutionPaused")
    def pipe_execution_paused(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        """
        return pulumi.get(self, "pipe_execution_paused")

    @pipe_execution_paused.setter
    def pipe_execution_paused(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "pipe_execution_paused", value)

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInlineUrl")
    def prevent_unload_to_inline_url(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        """
        return pulumi.get(self, "prevent_unload_to_inline_url")

    @prevent_unload_to_inline_url.setter
    def prevent_unload_to_inline_url(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prevent_unload_to_inline_url", value)

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInternalStages")
    def prevent_unload_to_internal_stages(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        """
        return pulumi.get(self, "prevent_unload_to_internal_stages")

    @prevent_unload_to_internal_stages.setter
    def prevent_unload_to_internal_stages(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "prevent_unload_to_internal_stages", value)

    @_builtins.property
    @pulumi.getter(name="pythonProfilerModules")
    def python_profiler_modules(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        """
        return pulumi.get(self, "python_profiler_modules")

    @python_profiler_modules.setter
    def python_profiler_modules(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "python_profiler_modules", value)

    @_builtins.property
    @pulumi.getter(name="pythonProfilerTargetStage")
    def python_profiler_target_stage(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        """
        return pulumi.get(self, "python_profiler_target_stage")

    @python_profiler_target_stage.setter
    def python_profiler_target_stage(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "python_profiler_target_stage", value)

    @_builtins.property
    @pulumi.getter(name="queryTag")
    def query_tag(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        """
        return pulumi.get(self, "query_tag")

    @query_tag.setter
    def query_tag(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "query_tag", value)

    @_builtins.property
    @pulumi.getter(name="quotedIdentifiersIgnoreCase")
    def quoted_identifiers_ignore_case(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        """
        return pulumi.get(self, "quoted_identifiers_ignore_case")

    @quoted_identifiers_ignore_case.setter
    def quoted_identifiers_ignore_case(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "quoted_identifiers_ignore_case", value)

    @_builtins.property
    @pulumi.getter(name="replaceInvalidCharacters")
    def replace_invalid_characters(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        """
        return pulumi.get(self, "replace_invalid_characters")

    @replace_invalid_characters.setter
    def replace_invalid_characters(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "replace_invalid_characters", value)

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageCreation")
    def require_storage_integration_for_stage_creation(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_creation")

    @require_storage_integration_for_stage_creation.setter
    def require_storage_integration_for_stage_creation(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "require_storage_integration_for_stage_creation", value)

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageOperation")
    def require_storage_integration_for_stage_operation(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_operation")

    @require_storage_integration_for_stage_operation.setter
    def require_storage_integration_for_stage_operation(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "require_storage_integration_for_stage_operation", value)

    @_builtins.property
    @pulumi.getter(name="resourceMonitor")
    def resource_monitor(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "resource_monitor")

    @resource_monitor.setter
    def resource_monitor(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "resource_monitor", value)

    @_builtins.property
    @pulumi.getter(name="rowsPerResultset")
    def rows_per_resultset(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        """
        return pulumi.get(self, "rows_per_resultset")

    @rows_per_resultset.setter
    def rows_per_resultset(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "rows_per_resultset", value)

    @_builtins.property
    @pulumi.getter(name="s3StageVpceDnsName")
    def s3_stage_vpce_dns_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        """
        return pulumi.get(self, "s3_stage_vpce_dns_name")

    @s3_stage_vpce_dns_name.setter
    def s3_stage_vpce_dns_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "s3_stage_vpce_dns_name", value)

    @_builtins.property
    @pulumi.getter(name="samlIdentityProvider")
    def saml_identity_provider(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        """
        return pulumi.get(self, "saml_identity_provider")

    @saml_identity_provider.setter
    def saml_identity_provider(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "saml_identity_provider", value)

    @_builtins.property
    @pulumi.getter(name="searchPath")
    def search_path(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        """
        return pulumi.get(self, "search_path")

    @search_path.setter
    def search_path(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "search_path", value)

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMaxStatementSize")
    def serverless_task_max_statement_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        """
        return pulumi.get(self, "serverless_task_max_statement_size")

    @serverless_task_max_statement_size.setter
    def serverless_task_max_statement_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "serverless_task_max_statement_size", value)

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMinStatementSize")
    def serverless_task_min_statement_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        """
        return pulumi.get(self, "serverless_task_min_statement_size")

    @serverless_task_min_statement_size.setter
    def serverless_task_min_statement_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "serverless_task_min_statement_size", value)

    @_builtins.property
    @pulumi.getter(name="sessionPolicy")
    def session_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        """
        return pulumi.get(self, "session_policy")

    @session_policy.setter
    def session_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "session_policy", value)

    @_builtins.property
    @pulumi.getter(name="showOutputs")
    def show_outputs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['CurrentOrganizationAccountShowOutputArgs']]]]:
        """
        Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
        """
        return pulumi.get(self, "show_outputs")

    @show_outputs.setter
    def show_outputs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['CurrentOrganizationAccountShowOutputArgs']]]]):
        pulumi.set(self, "show_outputs", value)

    @_builtins.property
    @pulumi.getter(name="simulatedDataSharingConsumer")
    def simulated_data_sharing_consumer(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        """
        return pulumi.get(self, "simulated_data_sharing_consumer")

    @simulated_data_sharing_consumer.setter
    def simulated_data_sharing_consumer(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "simulated_data_sharing_consumer", value)

    @_builtins.property
    @pulumi.getter(name="ssoLoginPage")
    def sso_login_page(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        """
        return pulumi.get(self, "sso_login_page")

    @sso_login_page.setter
    def sso_login_page(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "sso_login_page", value)

    @_builtins.property
    @pulumi.getter(name="statementQueuedTimeoutInSeconds")
    def statement_queued_timeout_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_queued_timeout_in_seconds")

    @statement_queued_timeout_in_seconds.setter
    def statement_queued_timeout_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "statement_queued_timeout_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="statementTimeoutInSeconds")
    def statement_timeout_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_timeout_in_seconds")

    @statement_timeout_in_seconds.setter
    def statement_timeout_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "statement_timeout_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="storageSerializationPolicy")
    def storage_serialization_policy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        """
        return pulumi.get(self, "storage_serialization_policy")

    @storage_serialization_policy.setter
    def storage_serialization_policy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "storage_serialization_policy", value)

    @_builtins.property
    @pulumi.getter(name="strictJsonOutput")
    def strict_json_output(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        """
        return pulumi.get(self, "strict_json_output")

    @strict_json_output.setter
    def strict_json_output(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "strict_json_output", value)

    @_builtins.property
    @pulumi.getter(name="suspendTaskAfterNumFailures")
    def suspend_task_after_num_failures(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        """
        return pulumi.get(self, "suspend_task_after_num_failures")

    @suspend_task_after_num_failures.setter
    def suspend_task_after_num_failures(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "suspend_task_after_num_failures", value)

    @_builtins.property
    @pulumi.getter(name="taskAutoRetryAttempts")
    def task_auto_retry_attempts(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        """
        return pulumi.get(self, "task_auto_retry_attempts")

    @task_auto_retry_attempts.setter
    def task_auto_retry_attempts(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "task_auto_retry_attempts", value)

    @_builtins.property
    @pulumi.getter(name="timeInputFormat")
    def time_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        """
        return pulumi.get(self, "time_input_format")

    @time_input_format.setter
    def time_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_input_format", value)

    @_builtins.property
    @pulumi.getter(name="timeOutputFormat")
    def time_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        """
        return pulumi.get(self, "time_output_format")

    @time_output_format.setter
    def time_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "time_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampDayIsAlways24h")
    def timestamp_day_is_always24h(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        """
        return pulumi.get(self, "timestamp_day_is_always24h")

    @timestamp_day_is_always24h.setter
    def timestamp_day_is_always24h(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "timestamp_day_is_always24h", value)

    @_builtins.property
    @pulumi.getter(name="timestampInputFormat")
    def timestamp_input_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        """
        return pulumi.get(self, "timestamp_input_format")

    @timestamp_input_format.setter
    def timestamp_input_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_input_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampLtzOutputFormat")
    def timestamp_ltz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        """
        return pulumi.get(self, "timestamp_ltz_output_format")

    @timestamp_ltz_output_format.setter
    def timestamp_ltz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_ltz_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampNtzOutputFormat")
    def timestamp_ntz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        """
        return pulumi.get(self, "timestamp_ntz_output_format")

    @timestamp_ntz_output_format.setter
    def timestamp_ntz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_ntz_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampOutputFormat")
    def timestamp_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        """
        return pulumi.get(self, "timestamp_output_format")

    @timestamp_output_format.setter
    def timestamp_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_output_format", value)

    @_builtins.property
    @pulumi.getter(name="timestampTypeMapping")
    def timestamp_type_mapping(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        """
        return pulumi.get(self, "timestamp_type_mapping")

    @timestamp_type_mapping.setter
    def timestamp_type_mapping(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_type_mapping", value)

    @_builtins.property
    @pulumi.getter(name="timestampTzOutputFormat")
    def timestamp_tz_output_format(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        """
        return pulumi.get(self, "timestamp_tz_output_format")

    @timestamp_tz_output_format.setter
    def timestamp_tz_output_format(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timestamp_tz_output_format", value)

    @_builtins.property
    @pulumi.getter
    def timezone(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        """
        return pulumi.get(self, "timezone")

    @timezone.setter
    def timezone(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "timezone", value)

    @_builtins.property
    @pulumi.getter(name="traceLevel")
    def trace_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        """
        return pulumi.get(self, "trace_level")

    @trace_level.setter
    def trace_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "trace_level", value)

    @_builtins.property
    @pulumi.getter(name="transactionAbortOnError")
    def transaction_abort_on_error(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        """
        return pulumi.get(self, "transaction_abort_on_error")

    @transaction_abort_on_error.setter
    def transaction_abort_on_error(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "transaction_abort_on_error", value)

    @_builtins.property
    @pulumi.getter(name="transactionDefaultIsolationLevel")
    def transaction_default_isolation_level(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        """
        return pulumi.get(self, "transaction_default_isolation_level")

    @transaction_default_isolation_level.setter
    def transaction_default_isolation_level(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "transaction_default_isolation_level", value)

    @_builtins.property
    @pulumi.getter(name="twoDigitCenturyStart")
    def two_digit_century_start(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        """
        return pulumi.get(self, "two_digit_century_start")

    @two_digit_century_start.setter
    def two_digit_century_start(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "two_digit_century_start", value)

    @_builtins.property
    @pulumi.getter(name="unsupportedDdlAction")
    def unsupported_ddl_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        """
        return pulumi.get(self, "unsupported_ddl_action")

    @unsupported_ddl_action.setter
    def unsupported_ddl_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "unsupported_ddl_action", value)

    @_builtins.property
    @pulumi.getter(name="useCachedResult")
    def use_cached_result(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        """
        return pulumi.get(self, "use_cached_result")

    @use_cached_result.setter
    def use_cached_result(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "use_cached_result", value)

    @_builtins.property
    @pulumi.getter(name="userTaskManagedInitialWarehouseSize")
    def user_task_managed_initial_warehouse_size(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        """
        return pulumi.get(self, "user_task_managed_initial_warehouse_size")

    @user_task_managed_initial_warehouse_size.setter
    def user_task_managed_initial_warehouse_size(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "user_task_managed_initial_warehouse_size", value)

    @_builtins.property
    @pulumi.getter(name="userTaskMinimumTriggerIntervalInSeconds")
    def user_task_minimum_trigger_interval_in_seconds(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        """
        return pulumi.get(self, "user_task_minimum_trigger_interval_in_seconds")

    @user_task_minimum_trigger_interval_in_seconds.setter
    def user_task_minimum_trigger_interval_in_seconds(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "user_task_minimum_trigger_interval_in_seconds", value)

    @_builtins.property
    @pulumi.getter(name="userTaskTimeoutMs")
    def user_task_timeout_ms(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        """
        return pulumi.get(self, "user_task_timeout_ms")

    @user_task_timeout_ms.setter
    def user_task_timeout_ms(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "user_task_timeout_ms", value)

    @_builtins.property
    @pulumi.getter(name="weekOfYearPolicy")
    def week_of_year_policy(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        """
        return pulumi.get(self, "week_of_year_policy")

    @week_of_year_policy.setter
    def week_of_year_policy(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "week_of_year_policy", value)

    @_builtins.property
    @pulumi.getter(name="weekStart")
    def week_start(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        return pulumi.get(self, "week_start")

    @week_start.setter
    def week_start(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "week_start", value)


@pulumi.type_token("snowflake:index/currentOrganizationAccount:CurrentOrganizationAccount")
class CurrentOrganizationAccount(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 abort_detached_query: Optional[pulumi.Input[_builtins.bool]] = None,
                 active_python_profiler: Optional[pulumi.Input[_builtins.str]] = None,
                 allow_client_mfa_caching: Optional[pulumi.Input[_builtins.bool]] = None,
                 allow_id_token: Optional[pulumi.Input[_builtins.bool]] = None,
                 autocommit: Optional[pulumi.Input[_builtins.bool]] = None,
                 base_location_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog_sync: Optional[pulumi.Input[_builtins.str]] = None,
                 client_enable_log_info_statement_parameters: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_encryption_key_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_memory_limit: Optional[pulumi.Input[_builtins.int]] = None,
                 client_metadata_request_use_connection_ctx: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_metadata_use_session_database: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_prefetch_threads: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_chunk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_column_case_insensitive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive_heartbeat_frequency: Optional[pulumi.Input[_builtins.int]] = None,
                 client_timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 comment: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_enabled_cross_region: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_models_allowlist: Optional[pulumi.Input[_builtins.str]] = None,
                 csv_timestamp_format: Optional[pulumi.Input[_builtins.str]] = None,
                 data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 date_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 date_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 default_ddl_collation: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_cpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_gpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_null_ordering: Optional[pulumi.Input[_builtins.str]] = None,
                 default_streamlit_notebook_warehouse: Optional[pulumi.Input[_builtins.str]] = None,
                 disable_ui_download_button: Optional[pulumi.Input[_builtins.bool]] = None,
                 disable_user_privilege_grants: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_automatic_sensitive_data_classification_log: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_egress_cost_optimizer: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_identifier_first_login: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_internal_stages_privatelink: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_image_repository: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unhandled_exceptions_reporting: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unload_physical_type_optimization: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_query_syntax_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_secure_object_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enforce_network_rules_for_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_merge: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_update: Optional[pulumi.Input[_builtins.bool]] = None,
                 event_table: Optional[pulumi.Input[_builtins.str]] = None,
                 external_oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 external_volume: Optional[pulumi.Input[_builtins.str]] = None,
                 geography_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 geometry_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 hybrid_table_lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 initial_replication_size_limit_in_tb: Optional[pulumi.Input[_builtins.str]] = None,
                 jdbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_treat_timestamp_ntz_as_utc: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_use_session_timezone: Optional[pulumi.Input[_builtins.bool]] = None,
                 js_treat_integer_as_bigint: Optional[pulumi.Input[_builtins.bool]] = None,
                 json_indent: Optional[pulumi.Input[_builtins.int]] = None,
                 listing_auto_fulfillment_replication_refresh_schedule: Optional[pulumi.Input[_builtins.str]] = None,
                 lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 log_level: Optional[pulumi.Input[_builtins.str]] = None,
                 max_concurrency_level: Optional[pulumi.Input[_builtins.int]] = None,
                 max_data_extension_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 metric_level: Optional[pulumi.Input[_builtins.str]] = None,
                 min_data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 multi_statement_count: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 noorder_sequence_as_default: Optional[pulumi.Input[_builtins.bool]] = None,
                 oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 odbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 password_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 periodic_data_rekeying: Optional[pulumi.Input[_builtins.bool]] = None,
                 pipe_execution_paused: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_inline_url: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 python_profiler_modules: Optional[pulumi.Input[_builtins.str]] = None,
                 python_profiler_target_stage: Optional[pulumi.Input[_builtins.str]] = None,
                 query_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 quoted_identifiers_ignore_case: Optional[pulumi.Input[_builtins.bool]] = None,
                 replace_invalid_characters: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_creation: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_operation: Optional[pulumi.Input[_builtins.bool]] = None,
                 resource_monitor: Optional[pulumi.Input[_builtins.str]] = None,
                 rows_per_resultset: Optional[pulumi.Input[_builtins.int]] = None,
                 s3_stage_vpce_dns_name: Optional[pulumi.Input[_builtins.str]] = None,
                 saml_identity_provider: Optional[pulumi.Input[_builtins.str]] = None,
                 search_path: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_max_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_min_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 session_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 simulated_data_sharing_consumer: Optional[pulumi.Input[_builtins.str]] = None,
                 sso_login_page: Optional[pulumi.Input[_builtins.bool]] = None,
                 statement_queued_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 statement_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 storage_serialization_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 strict_json_output: Optional[pulumi.Input[_builtins.bool]] = None,
                 suspend_task_after_num_failures: Optional[pulumi.Input[_builtins.int]] = None,
                 task_auto_retry_attempts: Optional[pulumi.Input[_builtins.int]] = None,
                 time_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 time_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_day_is_always24h: Optional[pulumi.Input[_builtins.bool]] = None,
                 timestamp_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ltz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ntz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_tz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timezone: Optional[pulumi.Input[_builtins.str]] = None,
                 trace_level: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_abort_on_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 transaction_default_isolation_level: Optional[pulumi.Input[_builtins.str]] = None,
                 two_digit_century_start: Optional[pulumi.Input[_builtins.int]] = None,
                 unsupported_ddl_action: Optional[pulumi.Input[_builtins.str]] = None,
                 use_cached_result: Optional[pulumi.Input[_builtins.bool]] = None,
                 user_task_managed_initial_warehouse_size: Optional[pulumi.Input[_builtins.str]] = None,
                 user_task_minimum_trigger_interval_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 user_task_timeout_ms: Optional[pulumi.Input[_builtins.int]] = None,
                 week_of_year_policy: Optional[pulumi.Input[_builtins.int]] = None,
                 week_start: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        ## Import

        ```sh
        $ pulumi import snowflake:index/currentOrganizationAccount:CurrentOrganizationAccount example '"<organization_account_name>"'
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] abort_detached_query: Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        :param pulumi.Input[_builtins.str] active_python_profiler: Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        :param pulumi.Input[_builtins.bool] allow_client_mfa_caching: Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        :param pulumi.Input[_builtins.bool] allow_id_token: Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        :param pulumi.Input[_builtins.bool] autocommit: Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        :param pulumi.Input[_builtins.str] base_location_prefix: Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        :param pulumi.Input[_builtins.str] binary_input_format: The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        :param pulumi.Input[_builtins.str] binary_output_format: The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        :param pulumi.Input[_builtins.str] catalog: Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        :param pulumi.Input[_builtins.str] catalog_sync: Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        :param pulumi.Input[_builtins.bool] client_enable_log_info_statement_parameters: Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        :param pulumi.Input[_builtins.int] client_encryption_key_size: Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        :param pulumi.Input[_builtins.int] client_memory_limit: Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        :param pulumi.Input[_builtins.bool] client_metadata_request_use_connection_ctx: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        :param pulumi.Input[_builtins.bool] client_metadata_use_session_database: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        :param pulumi.Input[_builtins.int] client_prefetch_threads: Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        :param pulumi.Input[_builtins.int] client_result_chunk_size: Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        :param pulumi.Input[_builtins.bool] client_result_column_case_insensitive: Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        :param pulumi.Input[_builtins.bool] client_session_keep_alive: Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        :param pulumi.Input[_builtins.int] client_session_keep_alive_heartbeat_frequency: Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        :param pulumi.Input[_builtins.str] client_timestamp_type_mapping: Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] comment: Specifies a comment for the organization account.
        :param pulumi.Input[_builtins.str] cortex_enabled_cross_region: Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        :param pulumi.Input[_builtins.str] cortex_models_allowlist: Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        :param pulumi.Input[_builtins.str] csv_timestamp_format: Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        :param pulumi.Input[_builtins.int] data_retention_time_in_days: Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        :param pulumi.Input[_builtins.str] date_input_format: Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        :param pulumi.Input[_builtins.str] date_output_format: Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        :param pulumi.Input[_builtins.str] default_ddl_collation: Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_cpu: Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_gpu: Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        :param pulumi.Input[_builtins.str] default_null_ordering: Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        :param pulumi.Input[_builtins.str] default_streamlit_notebook_warehouse: Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        :param pulumi.Input[_builtins.bool] disable_ui_download_button: Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        :param pulumi.Input[_builtins.bool] disable_user_privilege_grants: Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        :param pulumi.Input[_builtins.bool] enable_automatic_sensitive_data_classification_log: Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        :param pulumi.Input[_builtins.bool] enable_egress_cost_optimizer: Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        :param pulumi.Input[_builtins.bool] enable_identifier_first_login: Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        :param pulumi.Input[_builtins.bool] enable_internal_stages_privatelink: Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_image_repository: Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        :param pulumi.Input[_builtins.bool] enable_unhandled_exceptions_reporting: Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        :param pulumi.Input[_builtins.bool] enable_unload_physical_type_optimization: Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        :param pulumi.Input[_builtins.bool] enable_unredacted_query_syntax_error: Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        :param pulumi.Input[_builtins.bool] enable_unredacted_secure_object_error: Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        :param pulumi.Input[_builtins.bool] enforce_network_rules_for_internal_stages: Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_merge: Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_update: Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        :param pulumi.Input[_builtins.str] event_table: Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        :param pulumi.Input[_builtins.bool] external_oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.str] external_volume: Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        :param pulumi.Input[_builtins.str] geography_output_format: Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        :param pulumi.Input[_builtins.str] geometry_output_format: Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        :param pulumi.Input[_builtins.int] hybrid_table_lock_timeout: Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        :param pulumi.Input[_builtins.str] initial_replication_size_limit_in_tb: Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        :param pulumi.Input[_builtins.bool] jdbc_treat_decimal_as_int: Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.bool] jdbc_treat_timestamp_ntz_as_utc: Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        :param pulumi.Input[_builtins.bool] jdbc_use_session_timezone: Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        :param pulumi.Input[_builtins.bool] js_treat_integer_as_bigint: Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        :param pulumi.Input[_builtins.int] json_indent: Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        :param pulumi.Input[_builtins.str] listing_auto_fulfillment_replication_refresh_schedule: Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        :param pulumi.Input[_builtins.int] lock_timeout: Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        :param pulumi.Input[_builtins.str] log_level: Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        :param pulumi.Input[_builtins.int] max_concurrency_level: Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        :param pulumi.Input[_builtins.int] max_data_extension_time_in_days: Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        :param pulumi.Input[_builtins.str] metric_level: Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        :param pulumi.Input[_builtins.int] min_data_retention_time_in_days: Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        :param pulumi.Input[_builtins.int] multi_statement_count: Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        :param pulumi.Input[_builtins.str] name: The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        :param pulumi.Input[_builtins.str] network_policy: Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        :param pulumi.Input[_builtins.bool] noorder_sequence_as_default: Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        :param pulumi.Input[_builtins.bool] oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.bool] odbc_treat_decimal_as_int: Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.str] password_policy: Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        :param pulumi.Input[_builtins.bool] periodic_data_rekeying: It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        :param pulumi.Input[_builtins.bool] pipe_execution_paused: Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_inline_url: Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_internal_stages: Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        :param pulumi.Input[_builtins.str] python_profiler_modules: Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        :param pulumi.Input[_builtins.str] python_profiler_target_stage: Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        :param pulumi.Input[_builtins.str] query_tag: Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        :param pulumi.Input[_builtins.bool] quoted_identifiers_ignore_case: Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        :param pulumi.Input[_builtins.bool] replace_invalid_characters: Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_creation: Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_operation: Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        :param pulumi.Input[_builtins.int] rows_per_resultset: Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        :param pulumi.Input[_builtins.str] s3_stage_vpce_dns_name: Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        :param pulumi.Input[_builtins.str] saml_identity_provider: Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        :param pulumi.Input[_builtins.str] search_path: Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        :param pulumi.Input[_builtins.str] serverless_task_max_statement_size: Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        :param pulumi.Input[_builtins.str] serverless_task_min_statement_size: Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        :param pulumi.Input[_builtins.str] session_policy: Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        :param pulumi.Input[_builtins.str] simulated_data_sharing_consumer: Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        :param pulumi.Input[_builtins.bool] sso_login_page: This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        :param pulumi.Input[_builtins.int] statement_queued_timeout_in_seconds: Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        :param pulumi.Input[_builtins.int] statement_timeout_in_seconds: Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        :param pulumi.Input[_builtins.str] storage_serialization_policy: Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        :param pulumi.Input[_builtins.bool] strict_json_output: This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        :param pulumi.Input[_builtins.int] suspend_task_after_num_failures: Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        :param pulumi.Input[_builtins.int] task_auto_retry_attempts: Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        :param pulumi.Input[_builtins.str] time_input_format: Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        :param pulumi.Input[_builtins.str] time_output_format: Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        :param pulumi.Input[_builtins.bool] timestamp_day_is_always24h: Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        :param pulumi.Input[_builtins.str] timestamp_input_format: Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        :param pulumi.Input[_builtins.str] timestamp_ltz_output_format: Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_ntz_output_format: Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_output_format: Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        :param pulumi.Input[_builtins.str] timestamp_type_mapping: Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] timestamp_tz_output_format: Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        :param pulumi.Input[_builtins.str] timezone: Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        :param pulumi.Input[_builtins.str] trace_level: Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        :param pulumi.Input[_builtins.bool] transaction_abort_on_error: Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        :param pulumi.Input[_builtins.str] transaction_default_isolation_level: Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        :param pulumi.Input[_builtins.int] two_digit_century_start: Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        :param pulumi.Input[_builtins.str] unsupported_ddl_action: Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        :param pulumi.Input[_builtins.bool] use_cached_result: Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        :param pulumi.Input[_builtins.str] user_task_managed_initial_warehouse_size: Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        :param pulumi.Input[_builtins.int] user_task_minimum_trigger_interval_in_seconds: Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        :param pulumi.Input[_builtins.int] user_task_timeout_ms: Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        :param pulumi.Input[_builtins.int] week_of_year_policy: Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        :param pulumi.Input[_builtins.int] week_start: Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CurrentOrganizationAccountArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Import

        ```sh
        $ pulumi import snowflake:index/currentOrganizationAccount:CurrentOrganizationAccount example '"<organization_account_name>"'
        ```

        :param str resource_name: The name of the resource.
        :param CurrentOrganizationAccountArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CurrentOrganizationAccountArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 abort_detached_query: Optional[pulumi.Input[_builtins.bool]] = None,
                 active_python_profiler: Optional[pulumi.Input[_builtins.str]] = None,
                 allow_client_mfa_caching: Optional[pulumi.Input[_builtins.bool]] = None,
                 allow_id_token: Optional[pulumi.Input[_builtins.bool]] = None,
                 autocommit: Optional[pulumi.Input[_builtins.bool]] = None,
                 base_location_prefix: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 binary_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog: Optional[pulumi.Input[_builtins.str]] = None,
                 catalog_sync: Optional[pulumi.Input[_builtins.str]] = None,
                 client_enable_log_info_statement_parameters: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_encryption_key_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_memory_limit: Optional[pulumi.Input[_builtins.int]] = None,
                 client_metadata_request_use_connection_ctx: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_metadata_use_session_database: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_prefetch_threads: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_chunk_size: Optional[pulumi.Input[_builtins.int]] = None,
                 client_result_column_case_insensitive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive: Optional[pulumi.Input[_builtins.bool]] = None,
                 client_session_keep_alive_heartbeat_frequency: Optional[pulumi.Input[_builtins.int]] = None,
                 client_timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 comment: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_enabled_cross_region: Optional[pulumi.Input[_builtins.str]] = None,
                 cortex_models_allowlist: Optional[pulumi.Input[_builtins.str]] = None,
                 csv_timestamp_format: Optional[pulumi.Input[_builtins.str]] = None,
                 data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 date_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 date_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 default_ddl_collation: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_cpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_notebook_compute_pool_gpu: Optional[pulumi.Input[_builtins.str]] = None,
                 default_null_ordering: Optional[pulumi.Input[_builtins.str]] = None,
                 default_streamlit_notebook_warehouse: Optional[pulumi.Input[_builtins.str]] = None,
                 disable_ui_download_button: Optional[pulumi.Input[_builtins.bool]] = None,
                 disable_user_privilege_grants: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_automatic_sensitive_data_classification_log: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_egress_cost_optimizer: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_identifier_first_login: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_internal_stages_privatelink: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_image_repository: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unhandled_exceptions_reporting: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unload_physical_type_optimization: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_query_syntax_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enable_unredacted_secure_object_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 enforce_network_rules_for_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_merge: Optional[pulumi.Input[_builtins.bool]] = None,
                 error_on_nondeterministic_update: Optional[pulumi.Input[_builtins.bool]] = None,
                 event_table: Optional[pulumi.Input[_builtins.str]] = None,
                 external_oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 external_volume: Optional[pulumi.Input[_builtins.str]] = None,
                 geography_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 geometry_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 hybrid_table_lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 initial_replication_size_limit_in_tb: Optional[pulumi.Input[_builtins.str]] = None,
                 jdbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_treat_timestamp_ntz_as_utc: Optional[pulumi.Input[_builtins.bool]] = None,
                 jdbc_use_session_timezone: Optional[pulumi.Input[_builtins.bool]] = None,
                 js_treat_integer_as_bigint: Optional[pulumi.Input[_builtins.bool]] = None,
                 json_indent: Optional[pulumi.Input[_builtins.int]] = None,
                 listing_auto_fulfillment_replication_refresh_schedule: Optional[pulumi.Input[_builtins.str]] = None,
                 lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 log_level: Optional[pulumi.Input[_builtins.str]] = None,
                 max_concurrency_level: Optional[pulumi.Input[_builtins.int]] = None,
                 max_data_extension_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 metric_level: Optional[pulumi.Input[_builtins.str]] = None,
                 min_data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
                 multi_statement_count: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 network_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 noorder_sequence_as_default: Optional[pulumi.Input[_builtins.bool]] = None,
                 oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
                 odbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
                 password_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 periodic_data_rekeying: Optional[pulumi.Input[_builtins.bool]] = None,
                 pipe_execution_paused: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_inline_url: Optional[pulumi.Input[_builtins.bool]] = None,
                 prevent_unload_to_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
                 python_profiler_modules: Optional[pulumi.Input[_builtins.str]] = None,
                 python_profiler_target_stage: Optional[pulumi.Input[_builtins.str]] = None,
                 query_tag: Optional[pulumi.Input[_builtins.str]] = None,
                 quoted_identifiers_ignore_case: Optional[pulumi.Input[_builtins.bool]] = None,
                 replace_invalid_characters: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_creation: Optional[pulumi.Input[_builtins.bool]] = None,
                 require_storage_integration_for_stage_operation: Optional[pulumi.Input[_builtins.bool]] = None,
                 resource_monitor: Optional[pulumi.Input[_builtins.str]] = None,
                 rows_per_resultset: Optional[pulumi.Input[_builtins.int]] = None,
                 s3_stage_vpce_dns_name: Optional[pulumi.Input[_builtins.str]] = None,
                 saml_identity_provider: Optional[pulumi.Input[_builtins.str]] = None,
                 search_path: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_max_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 serverless_task_min_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
                 session_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 simulated_data_sharing_consumer: Optional[pulumi.Input[_builtins.str]] = None,
                 sso_login_page: Optional[pulumi.Input[_builtins.bool]] = None,
                 statement_queued_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 statement_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 storage_serialization_policy: Optional[pulumi.Input[_builtins.str]] = None,
                 strict_json_output: Optional[pulumi.Input[_builtins.bool]] = None,
                 suspend_task_after_num_failures: Optional[pulumi.Input[_builtins.int]] = None,
                 task_auto_retry_attempts: Optional[pulumi.Input[_builtins.int]] = None,
                 time_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 time_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_day_is_always24h: Optional[pulumi.Input[_builtins.bool]] = None,
                 timestamp_input_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ltz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_ntz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
                 timestamp_tz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
                 timezone: Optional[pulumi.Input[_builtins.str]] = None,
                 trace_level: Optional[pulumi.Input[_builtins.str]] = None,
                 transaction_abort_on_error: Optional[pulumi.Input[_builtins.bool]] = None,
                 transaction_default_isolation_level: Optional[pulumi.Input[_builtins.str]] = None,
                 two_digit_century_start: Optional[pulumi.Input[_builtins.int]] = None,
                 unsupported_ddl_action: Optional[pulumi.Input[_builtins.str]] = None,
                 use_cached_result: Optional[pulumi.Input[_builtins.bool]] = None,
                 user_task_managed_initial_warehouse_size: Optional[pulumi.Input[_builtins.str]] = None,
                 user_task_minimum_trigger_interval_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
                 user_task_timeout_ms: Optional[pulumi.Input[_builtins.int]] = None,
                 week_of_year_policy: Optional[pulumi.Input[_builtins.int]] = None,
                 week_start: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CurrentOrganizationAccountArgs.__new__(CurrentOrganizationAccountArgs)

            __props__.__dict__["abort_detached_query"] = abort_detached_query
            __props__.__dict__["active_python_profiler"] = active_python_profiler
            __props__.__dict__["allow_client_mfa_caching"] = allow_client_mfa_caching
            __props__.__dict__["allow_id_token"] = allow_id_token
            __props__.__dict__["autocommit"] = autocommit
            __props__.__dict__["base_location_prefix"] = base_location_prefix
            __props__.__dict__["binary_input_format"] = binary_input_format
            __props__.__dict__["binary_output_format"] = binary_output_format
            __props__.__dict__["catalog"] = catalog
            __props__.__dict__["catalog_sync"] = catalog_sync
            __props__.__dict__["client_enable_log_info_statement_parameters"] = client_enable_log_info_statement_parameters
            __props__.__dict__["client_encryption_key_size"] = client_encryption_key_size
            __props__.__dict__["client_memory_limit"] = client_memory_limit
            __props__.__dict__["client_metadata_request_use_connection_ctx"] = client_metadata_request_use_connection_ctx
            __props__.__dict__["client_metadata_use_session_database"] = client_metadata_use_session_database
            __props__.__dict__["client_prefetch_threads"] = client_prefetch_threads
            __props__.__dict__["client_result_chunk_size"] = client_result_chunk_size
            __props__.__dict__["client_result_column_case_insensitive"] = client_result_column_case_insensitive
            __props__.__dict__["client_session_keep_alive"] = client_session_keep_alive
            __props__.__dict__["client_session_keep_alive_heartbeat_frequency"] = client_session_keep_alive_heartbeat_frequency
            __props__.__dict__["client_timestamp_type_mapping"] = client_timestamp_type_mapping
            __props__.__dict__["comment"] = comment
            __props__.__dict__["cortex_enabled_cross_region"] = cortex_enabled_cross_region
            __props__.__dict__["cortex_models_allowlist"] = cortex_models_allowlist
            __props__.__dict__["csv_timestamp_format"] = csv_timestamp_format
            __props__.__dict__["data_retention_time_in_days"] = data_retention_time_in_days
            __props__.__dict__["date_input_format"] = date_input_format
            __props__.__dict__["date_output_format"] = date_output_format
            __props__.__dict__["default_ddl_collation"] = default_ddl_collation
            __props__.__dict__["default_notebook_compute_pool_cpu"] = default_notebook_compute_pool_cpu
            __props__.__dict__["default_notebook_compute_pool_gpu"] = default_notebook_compute_pool_gpu
            __props__.__dict__["default_null_ordering"] = default_null_ordering
            __props__.__dict__["default_streamlit_notebook_warehouse"] = default_streamlit_notebook_warehouse
            __props__.__dict__["disable_ui_download_button"] = disable_ui_download_button
            __props__.__dict__["disable_user_privilege_grants"] = disable_user_privilege_grants
            __props__.__dict__["enable_automatic_sensitive_data_classification_log"] = enable_automatic_sensitive_data_classification_log
            __props__.__dict__["enable_egress_cost_optimizer"] = enable_egress_cost_optimizer
            __props__.__dict__["enable_identifier_first_login"] = enable_identifier_first_login
            __props__.__dict__["enable_internal_stages_privatelink"] = enable_internal_stages_privatelink
            __props__.__dict__["enable_tri_secret_and_rekey_opt_out_for_image_repository"] = enable_tri_secret_and_rekey_opt_out_for_image_repository
            __props__.__dict__["enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage"] = enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage
            __props__.__dict__["enable_unhandled_exceptions_reporting"] = enable_unhandled_exceptions_reporting
            __props__.__dict__["enable_unload_physical_type_optimization"] = enable_unload_physical_type_optimization
            __props__.__dict__["enable_unredacted_query_syntax_error"] = enable_unredacted_query_syntax_error
            __props__.__dict__["enable_unredacted_secure_object_error"] = enable_unredacted_secure_object_error
            __props__.__dict__["enforce_network_rules_for_internal_stages"] = enforce_network_rules_for_internal_stages
            __props__.__dict__["error_on_nondeterministic_merge"] = error_on_nondeterministic_merge
            __props__.__dict__["error_on_nondeterministic_update"] = error_on_nondeterministic_update
            __props__.__dict__["event_table"] = event_table
            __props__.__dict__["external_oauth_add_privileged_roles_to_blocked_list"] = external_oauth_add_privileged_roles_to_blocked_list
            __props__.__dict__["external_volume"] = external_volume
            __props__.__dict__["geography_output_format"] = geography_output_format
            __props__.__dict__["geometry_output_format"] = geometry_output_format
            __props__.__dict__["hybrid_table_lock_timeout"] = hybrid_table_lock_timeout
            __props__.__dict__["initial_replication_size_limit_in_tb"] = initial_replication_size_limit_in_tb
            __props__.__dict__["jdbc_treat_decimal_as_int"] = jdbc_treat_decimal_as_int
            __props__.__dict__["jdbc_treat_timestamp_ntz_as_utc"] = jdbc_treat_timestamp_ntz_as_utc
            __props__.__dict__["jdbc_use_session_timezone"] = jdbc_use_session_timezone
            __props__.__dict__["js_treat_integer_as_bigint"] = js_treat_integer_as_bigint
            __props__.__dict__["json_indent"] = json_indent
            __props__.__dict__["listing_auto_fulfillment_replication_refresh_schedule"] = listing_auto_fulfillment_replication_refresh_schedule
            __props__.__dict__["lock_timeout"] = lock_timeout
            __props__.__dict__["log_level"] = log_level
            __props__.__dict__["max_concurrency_level"] = max_concurrency_level
            __props__.__dict__["max_data_extension_time_in_days"] = max_data_extension_time_in_days
            __props__.__dict__["metric_level"] = metric_level
            __props__.__dict__["min_data_retention_time_in_days"] = min_data_retention_time_in_days
            __props__.__dict__["multi_statement_count"] = multi_statement_count
            __props__.__dict__["name"] = name
            __props__.__dict__["network_policy"] = network_policy
            __props__.__dict__["noorder_sequence_as_default"] = noorder_sequence_as_default
            __props__.__dict__["oauth_add_privileged_roles_to_blocked_list"] = oauth_add_privileged_roles_to_blocked_list
            __props__.__dict__["odbc_treat_decimal_as_int"] = odbc_treat_decimal_as_int
            __props__.__dict__["password_policy"] = password_policy
            __props__.__dict__["periodic_data_rekeying"] = periodic_data_rekeying
            __props__.__dict__["pipe_execution_paused"] = pipe_execution_paused
            __props__.__dict__["prevent_unload_to_inline_url"] = prevent_unload_to_inline_url
            __props__.__dict__["prevent_unload_to_internal_stages"] = prevent_unload_to_internal_stages
            __props__.__dict__["python_profiler_modules"] = python_profiler_modules
            __props__.__dict__["python_profiler_target_stage"] = python_profiler_target_stage
            __props__.__dict__["query_tag"] = query_tag
            __props__.__dict__["quoted_identifiers_ignore_case"] = quoted_identifiers_ignore_case
            __props__.__dict__["replace_invalid_characters"] = replace_invalid_characters
            __props__.__dict__["require_storage_integration_for_stage_creation"] = require_storage_integration_for_stage_creation
            __props__.__dict__["require_storage_integration_for_stage_operation"] = require_storage_integration_for_stage_operation
            __props__.__dict__["resource_monitor"] = resource_monitor
            __props__.__dict__["rows_per_resultset"] = rows_per_resultset
            __props__.__dict__["s3_stage_vpce_dns_name"] = s3_stage_vpce_dns_name
            __props__.__dict__["saml_identity_provider"] = saml_identity_provider
            __props__.__dict__["search_path"] = search_path
            __props__.__dict__["serverless_task_max_statement_size"] = serverless_task_max_statement_size
            __props__.__dict__["serverless_task_min_statement_size"] = serverless_task_min_statement_size
            __props__.__dict__["session_policy"] = session_policy
            __props__.__dict__["simulated_data_sharing_consumer"] = simulated_data_sharing_consumer
            __props__.__dict__["sso_login_page"] = sso_login_page
            __props__.__dict__["statement_queued_timeout_in_seconds"] = statement_queued_timeout_in_seconds
            __props__.__dict__["statement_timeout_in_seconds"] = statement_timeout_in_seconds
            __props__.__dict__["storage_serialization_policy"] = storage_serialization_policy
            __props__.__dict__["strict_json_output"] = strict_json_output
            __props__.__dict__["suspend_task_after_num_failures"] = suspend_task_after_num_failures
            __props__.__dict__["task_auto_retry_attempts"] = task_auto_retry_attempts
            __props__.__dict__["time_input_format"] = time_input_format
            __props__.__dict__["time_output_format"] = time_output_format
            __props__.__dict__["timestamp_day_is_always24h"] = timestamp_day_is_always24h
            __props__.__dict__["timestamp_input_format"] = timestamp_input_format
            __props__.__dict__["timestamp_ltz_output_format"] = timestamp_ltz_output_format
            __props__.__dict__["timestamp_ntz_output_format"] = timestamp_ntz_output_format
            __props__.__dict__["timestamp_output_format"] = timestamp_output_format
            __props__.__dict__["timestamp_type_mapping"] = timestamp_type_mapping
            __props__.__dict__["timestamp_tz_output_format"] = timestamp_tz_output_format
            __props__.__dict__["timezone"] = timezone
            __props__.__dict__["trace_level"] = trace_level
            __props__.__dict__["transaction_abort_on_error"] = transaction_abort_on_error
            __props__.__dict__["transaction_default_isolation_level"] = transaction_default_isolation_level
            __props__.__dict__["two_digit_century_start"] = two_digit_century_start
            __props__.__dict__["unsupported_ddl_action"] = unsupported_ddl_action
            __props__.__dict__["use_cached_result"] = use_cached_result
            __props__.__dict__["user_task_managed_initial_warehouse_size"] = user_task_managed_initial_warehouse_size
            __props__.__dict__["user_task_minimum_trigger_interval_in_seconds"] = user_task_minimum_trigger_interval_in_seconds
            __props__.__dict__["user_task_timeout_ms"] = user_task_timeout_ms
            __props__.__dict__["week_of_year_policy"] = week_of_year_policy
            __props__.__dict__["week_start"] = week_start
            __props__.__dict__["show_outputs"] = None
        super(CurrentOrganizationAccount, __self__).__init__(
            'snowflake:index/currentOrganizationAccount:CurrentOrganizationAccount',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            abort_detached_query: Optional[pulumi.Input[_builtins.bool]] = None,
            active_python_profiler: Optional[pulumi.Input[_builtins.str]] = None,
            allow_client_mfa_caching: Optional[pulumi.Input[_builtins.bool]] = None,
            allow_id_token: Optional[pulumi.Input[_builtins.bool]] = None,
            autocommit: Optional[pulumi.Input[_builtins.bool]] = None,
            base_location_prefix: Optional[pulumi.Input[_builtins.str]] = None,
            binary_input_format: Optional[pulumi.Input[_builtins.str]] = None,
            binary_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            catalog: Optional[pulumi.Input[_builtins.str]] = None,
            catalog_sync: Optional[pulumi.Input[_builtins.str]] = None,
            client_enable_log_info_statement_parameters: Optional[pulumi.Input[_builtins.bool]] = None,
            client_encryption_key_size: Optional[pulumi.Input[_builtins.int]] = None,
            client_memory_limit: Optional[pulumi.Input[_builtins.int]] = None,
            client_metadata_request_use_connection_ctx: Optional[pulumi.Input[_builtins.bool]] = None,
            client_metadata_use_session_database: Optional[pulumi.Input[_builtins.bool]] = None,
            client_prefetch_threads: Optional[pulumi.Input[_builtins.int]] = None,
            client_result_chunk_size: Optional[pulumi.Input[_builtins.int]] = None,
            client_result_column_case_insensitive: Optional[pulumi.Input[_builtins.bool]] = None,
            client_session_keep_alive: Optional[pulumi.Input[_builtins.bool]] = None,
            client_session_keep_alive_heartbeat_frequency: Optional[pulumi.Input[_builtins.int]] = None,
            client_timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
            comment: Optional[pulumi.Input[_builtins.str]] = None,
            cortex_enabled_cross_region: Optional[pulumi.Input[_builtins.str]] = None,
            cortex_models_allowlist: Optional[pulumi.Input[_builtins.str]] = None,
            csv_timestamp_format: Optional[pulumi.Input[_builtins.str]] = None,
            data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
            date_input_format: Optional[pulumi.Input[_builtins.str]] = None,
            date_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            default_ddl_collation: Optional[pulumi.Input[_builtins.str]] = None,
            default_notebook_compute_pool_cpu: Optional[pulumi.Input[_builtins.str]] = None,
            default_notebook_compute_pool_gpu: Optional[pulumi.Input[_builtins.str]] = None,
            default_null_ordering: Optional[pulumi.Input[_builtins.str]] = None,
            default_streamlit_notebook_warehouse: Optional[pulumi.Input[_builtins.str]] = None,
            disable_ui_download_button: Optional[pulumi.Input[_builtins.bool]] = None,
            disable_user_privilege_grants: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_automatic_sensitive_data_classification_log: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_egress_cost_optimizer: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_identifier_first_login: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_internal_stages_privatelink: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_tri_secret_and_rekey_opt_out_for_image_repository: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_unhandled_exceptions_reporting: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_unload_physical_type_optimization: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_unredacted_query_syntax_error: Optional[pulumi.Input[_builtins.bool]] = None,
            enable_unredacted_secure_object_error: Optional[pulumi.Input[_builtins.bool]] = None,
            enforce_network_rules_for_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
            error_on_nondeterministic_merge: Optional[pulumi.Input[_builtins.bool]] = None,
            error_on_nondeterministic_update: Optional[pulumi.Input[_builtins.bool]] = None,
            event_table: Optional[pulumi.Input[_builtins.str]] = None,
            external_oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
            external_volume: Optional[pulumi.Input[_builtins.str]] = None,
            geography_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            geometry_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            hybrid_table_lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
            initial_replication_size_limit_in_tb: Optional[pulumi.Input[_builtins.str]] = None,
            jdbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
            jdbc_treat_timestamp_ntz_as_utc: Optional[pulumi.Input[_builtins.bool]] = None,
            jdbc_use_session_timezone: Optional[pulumi.Input[_builtins.bool]] = None,
            js_treat_integer_as_bigint: Optional[pulumi.Input[_builtins.bool]] = None,
            json_indent: Optional[pulumi.Input[_builtins.int]] = None,
            listing_auto_fulfillment_replication_refresh_schedule: Optional[pulumi.Input[_builtins.str]] = None,
            lock_timeout: Optional[pulumi.Input[_builtins.int]] = None,
            log_level: Optional[pulumi.Input[_builtins.str]] = None,
            max_concurrency_level: Optional[pulumi.Input[_builtins.int]] = None,
            max_data_extension_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
            metric_level: Optional[pulumi.Input[_builtins.str]] = None,
            min_data_retention_time_in_days: Optional[pulumi.Input[_builtins.int]] = None,
            multi_statement_count: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            network_policy: Optional[pulumi.Input[_builtins.str]] = None,
            noorder_sequence_as_default: Optional[pulumi.Input[_builtins.bool]] = None,
            oauth_add_privileged_roles_to_blocked_list: Optional[pulumi.Input[_builtins.bool]] = None,
            odbc_treat_decimal_as_int: Optional[pulumi.Input[_builtins.bool]] = None,
            password_policy: Optional[pulumi.Input[_builtins.str]] = None,
            periodic_data_rekeying: Optional[pulumi.Input[_builtins.bool]] = None,
            pipe_execution_paused: Optional[pulumi.Input[_builtins.bool]] = None,
            prevent_unload_to_inline_url: Optional[pulumi.Input[_builtins.bool]] = None,
            prevent_unload_to_internal_stages: Optional[pulumi.Input[_builtins.bool]] = None,
            python_profiler_modules: Optional[pulumi.Input[_builtins.str]] = None,
            python_profiler_target_stage: Optional[pulumi.Input[_builtins.str]] = None,
            query_tag: Optional[pulumi.Input[_builtins.str]] = None,
            quoted_identifiers_ignore_case: Optional[pulumi.Input[_builtins.bool]] = None,
            replace_invalid_characters: Optional[pulumi.Input[_builtins.bool]] = None,
            require_storage_integration_for_stage_creation: Optional[pulumi.Input[_builtins.bool]] = None,
            require_storage_integration_for_stage_operation: Optional[pulumi.Input[_builtins.bool]] = None,
            resource_monitor: Optional[pulumi.Input[_builtins.str]] = None,
            rows_per_resultset: Optional[pulumi.Input[_builtins.int]] = None,
            s3_stage_vpce_dns_name: Optional[pulumi.Input[_builtins.str]] = None,
            saml_identity_provider: Optional[pulumi.Input[_builtins.str]] = None,
            search_path: Optional[pulumi.Input[_builtins.str]] = None,
            serverless_task_max_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
            serverless_task_min_statement_size: Optional[pulumi.Input[_builtins.str]] = None,
            session_policy: Optional[pulumi.Input[_builtins.str]] = None,
            show_outputs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['CurrentOrganizationAccountShowOutputArgs', 'CurrentOrganizationAccountShowOutputArgsDict']]]]] = None,
            simulated_data_sharing_consumer: Optional[pulumi.Input[_builtins.str]] = None,
            sso_login_page: Optional[pulumi.Input[_builtins.bool]] = None,
            statement_queued_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
            statement_timeout_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
            storage_serialization_policy: Optional[pulumi.Input[_builtins.str]] = None,
            strict_json_output: Optional[pulumi.Input[_builtins.bool]] = None,
            suspend_task_after_num_failures: Optional[pulumi.Input[_builtins.int]] = None,
            task_auto_retry_attempts: Optional[pulumi.Input[_builtins.int]] = None,
            time_input_format: Optional[pulumi.Input[_builtins.str]] = None,
            time_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_day_is_always24h: Optional[pulumi.Input[_builtins.bool]] = None,
            timestamp_input_format: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_ltz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_ntz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_type_mapping: Optional[pulumi.Input[_builtins.str]] = None,
            timestamp_tz_output_format: Optional[pulumi.Input[_builtins.str]] = None,
            timezone: Optional[pulumi.Input[_builtins.str]] = None,
            trace_level: Optional[pulumi.Input[_builtins.str]] = None,
            transaction_abort_on_error: Optional[pulumi.Input[_builtins.bool]] = None,
            transaction_default_isolation_level: Optional[pulumi.Input[_builtins.str]] = None,
            two_digit_century_start: Optional[pulumi.Input[_builtins.int]] = None,
            unsupported_ddl_action: Optional[pulumi.Input[_builtins.str]] = None,
            use_cached_result: Optional[pulumi.Input[_builtins.bool]] = None,
            user_task_managed_initial_warehouse_size: Optional[pulumi.Input[_builtins.str]] = None,
            user_task_minimum_trigger_interval_in_seconds: Optional[pulumi.Input[_builtins.int]] = None,
            user_task_timeout_ms: Optional[pulumi.Input[_builtins.int]] = None,
            week_of_year_policy: Optional[pulumi.Input[_builtins.int]] = None,
            week_start: Optional[pulumi.Input[_builtins.int]] = None) -> 'CurrentOrganizationAccount':
        """
        Get an existing CurrentOrganizationAccount resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] abort_detached_query: Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        :param pulumi.Input[_builtins.str] active_python_profiler: Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        :param pulumi.Input[_builtins.bool] allow_client_mfa_caching: Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        :param pulumi.Input[_builtins.bool] allow_id_token: Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        :param pulumi.Input[_builtins.bool] autocommit: Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        :param pulumi.Input[_builtins.str] base_location_prefix: Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        :param pulumi.Input[_builtins.str] binary_input_format: The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        :param pulumi.Input[_builtins.str] binary_output_format: The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        :param pulumi.Input[_builtins.str] catalog: Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        :param pulumi.Input[_builtins.str] catalog_sync: Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        :param pulumi.Input[_builtins.bool] client_enable_log_info_statement_parameters: Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        :param pulumi.Input[_builtins.int] client_encryption_key_size: Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        :param pulumi.Input[_builtins.int] client_memory_limit: Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        :param pulumi.Input[_builtins.bool] client_metadata_request_use_connection_ctx: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        :param pulumi.Input[_builtins.bool] client_metadata_use_session_database: For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        :param pulumi.Input[_builtins.int] client_prefetch_threads: Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        :param pulumi.Input[_builtins.int] client_result_chunk_size: Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        :param pulumi.Input[_builtins.bool] client_result_column_case_insensitive: Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        :param pulumi.Input[_builtins.bool] client_session_keep_alive: Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        :param pulumi.Input[_builtins.int] client_session_keep_alive_heartbeat_frequency: Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        :param pulumi.Input[_builtins.str] client_timestamp_type_mapping: Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] comment: Specifies a comment for the organization account.
        :param pulumi.Input[_builtins.str] cortex_enabled_cross_region: Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        :param pulumi.Input[_builtins.str] cortex_models_allowlist: Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        :param pulumi.Input[_builtins.str] csv_timestamp_format: Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        :param pulumi.Input[_builtins.int] data_retention_time_in_days: Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        :param pulumi.Input[_builtins.str] date_input_format: Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        :param pulumi.Input[_builtins.str] date_output_format: Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        :param pulumi.Input[_builtins.str] default_ddl_collation: Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_cpu: Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        :param pulumi.Input[_builtins.str] default_notebook_compute_pool_gpu: Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        :param pulumi.Input[_builtins.str] default_null_ordering: Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        :param pulumi.Input[_builtins.str] default_streamlit_notebook_warehouse: Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        :param pulumi.Input[_builtins.bool] disable_ui_download_button: Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        :param pulumi.Input[_builtins.bool] disable_user_privilege_grants: Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        :param pulumi.Input[_builtins.bool] enable_automatic_sensitive_data_classification_log: Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        :param pulumi.Input[_builtins.bool] enable_egress_cost_optimizer: Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        :param pulumi.Input[_builtins.bool] enable_identifier_first_login: Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        :param pulumi.Input[_builtins.bool] enable_internal_stages_privatelink: Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_image_repository: Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        :param pulumi.Input[_builtins.bool] enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        :param pulumi.Input[_builtins.bool] enable_unhandled_exceptions_reporting: Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        :param pulumi.Input[_builtins.bool] enable_unload_physical_type_optimization: Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        :param pulumi.Input[_builtins.bool] enable_unredacted_query_syntax_error: Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        :param pulumi.Input[_builtins.bool] enable_unredacted_secure_object_error: Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        :param pulumi.Input[_builtins.bool] enforce_network_rules_for_internal_stages: Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_merge: Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        :param pulumi.Input[_builtins.bool] error_on_nondeterministic_update: Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        :param pulumi.Input[_builtins.str] event_table: Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        :param pulumi.Input[_builtins.bool] external_oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.str] external_volume: Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        :param pulumi.Input[_builtins.str] geography_output_format: Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        :param pulumi.Input[_builtins.str] geometry_output_format: Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        :param pulumi.Input[_builtins.int] hybrid_table_lock_timeout: Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        :param pulumi.Input[_builtins.str] initial_replication_size_limit_in_tb: Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        :param pulumi.Input[_builtins.bool] jdbc_treat_decimal_as_int: Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.bool] jdbc_treat_timestamp_ntz_as_utc: Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        :param pulumi.Input[_builtins.bool] jdbc_use_session_timezone: Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        :param pulumi.Input[_builtins.bool] js_treat_integer_as_bigint: Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        :param pulumi.Input[_builtins.int] json_indent: Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        :param pulumi.Input[_builtins.str] listing_auto_fulfillment_replication_refresh_schedule: Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        :param pulumi.Input[_builtins.int] lock_timeout: Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        :param pulumi.Input[_builtins.str] log_level: Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        :param pulumi.Input[_builtins.int] max_concurrency_level: Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        :param pulumi.Input[_builtins.int] max_data_extension_time_in_days: Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        :param pulumi.Input[_builtins.str] metric_level: Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        :param pulumi.Input[_builtins.int] min_data_retention_time_in_days: Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        :param pulumi.Input[_builtins.int] multi_statement_count: Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        :param pulumi.Input[_builtins.str] name: The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        :param pulumi.Input[_builtins.str] network_policy: Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        :param pulumi.Input[_builtins.bool] noorder_sequence_as_default: Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        :param pulumi.Input[_builtins.bool] oauth_add_privileged_roles_to_blocked_list: Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        :param pulumi.Input[_builtins.bool] odbc_treat_decimal_as_int: Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        :param pulumi.Input[_builtins.str] password_policy: Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        :param pulumi.Input[_builtins.bool] periodic_data_rekeying: It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        :param pulumi.Input[_builtins.bool] pipe_execution_paused: Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_inline_url: Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        :param pulumi.Input[_builtins.bool] prevent_unload_to_internal_stages: Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        :param pulumi.Input[_builtins.str] python_profiler_modules: Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        :param pulumi.Input[_builtins.str] python_profiler_target_stage: Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        :param pulumi.Input[_builtins.str] query_tag: Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        :param pulumi.Input[_builtins.bool] quoted_identifiers_ignore_case: Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        :param pulumi.Input[_builtins.bool] replace_invalid_characters: Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_creation: Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        :param pulumi.Input[_builtins.bool] require_storage_integration_for_stage_operation: Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        :param pulumi.Input[_builtins.int] rows_per_resultset: Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        :param pulumi.Input[_builtins.str] s3_stage_vpce_dns_name: Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        :param pulumi.Input[_builtins.str] saml_identity_provider: Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        :param pulumi.Input[_builtins.str] search_path: Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        :param pulumi.Input[_builtins.str] serverless_task_max_statement_size: Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        :param pulumi.Input[_builtins.str] serverless_task_min_statement_size: Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        :param pulumi.Input[_builtins.str] session_policy: Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        :param pulumi.Input[Sequence[pulumi.Input[Union['CurrentOrganizationAccountShowOutputArgs', 'CurrentOrganizationAccountShowOutputArgsDict']]]] show_outputs: Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
        :param pulumi.Input[_builtins.str] simulated_data_sharing_consumer: Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        :param pulumi.Input[_builtins.bool] sso_login_page: This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        :param pulumi.Input[_builtins.int] statement_queued_timeout_in_seconds: Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        :param pulumi.Input[_builtins.int] statement_timeout_in_seconds: Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        :param pulumi.Input[_builtins.str] storage_serialization_policy: Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        :param pulumi.Input[_builtins.bool] strict_json_output: This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        :param pulumi.Input[_builtins.int] suspend_task_after_num_failures: Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        :param pulumi.Input[_builtins.int] task_auto_retry_attempts: Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        :param pulumi.Input[_builtins.str] time_input_format: Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        :param pulumi.Input[_builtins.str] time_output_format: Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        :param pulumi.Input[_builtins.bool] timestamp_day_is_always24h: Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        :param pulumi.Input[_builtins.str] timestamp_input_format: Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        :param pulumi.Input[_builtins.str] timestamp_ltz_output_format: Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_ntz_output_format: Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        :param pulumi.Input[_builtins.str] timestamp_output_format: Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        :param pulumi.Input[_builtins.str] timestamp_type_mapping: Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        :param pulumi.Input[_builtins.str] timestamp_tz_output_format: Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        :param pulumi.Input[_builtins.str] timezone: Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        :param pulumi.Input[_builtins.str] trace_level: Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        :param pulumi.Input[_builtins.bool] transaction_abort_on_error: Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        :param pulumi.Input[_builtins.str] transaction_default_isolation_level: Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        :param pulumi.Input[_builtins.int] two_digit_century_start: Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        :param pulumi.Input[_builtins.str] unsupported_ddl_action: Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        :param pulumi.Input[_builtins.bool] use_cached_result: Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        :param pulumi.Input[_builtins.str] user_task_managed_initial_warehouse_size: Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        :param pulumi.Input[_builtins.int] user_task_minimum_trigger_interval_in_seconds: Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        :param pulumi.Input[_builtins.int] user_task_timeout_ms: Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        :param pulumi.Input[_builtins.int] week_of_year_policy: Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        :param pulumi.Input[_builtins.int] week_start: Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CurrentOrganizationAccountState.__new__(_CurrentOrganizationAccountState)

        __props__.__dict__["abort_detached_query"] = abort_detached_query
        __props__.__dict__["active_python_profiler"] = active_python_profiler
        __props__.__dict__["allow_client_mfa_caching"] = allow_client_mfa_caching
        __props__.__dict__["allow_id_token"] = allow_id_token
        __props__.__dict__["autocommit"] = autocommit
        __props__.__dict__["base_location_prefix"] = base_location_prefix
        __props__.__dict__["binary_input_format"] = binary_input_format
        __props__.__dict__["binary_output_format"] = binary_output_format
        __props__.__dict__["catalog"] = catalog
        __props__.__dict__["catalog_sync"] = catalog_sync
        __props__.__dict__["client_enable_log_info_statement_parameters"] = client_enable_log_info_statement_parameters
        __props__.__dict__["client_encryption_key_size"] = client_encryption_key_size
        __props__.__dict__["client_memory_limit"] = client_memory_limit
        __props__.__dict__["client_metadata_request_use_connection_ctx"] = client_metadata_request_use_connection_ctx
        __props__.__dict__["client_metadata_use_session_database"] = client_metadata_use_session_database
        __props__.__dict__["client_prefetch_threads"] = client_prefetch_threads
        __props__.__dict__["client_result_chunk_size"] = client_result_chunk_size
        __props__.__dict__["client_result_column_case_insensitive"] = client_result_column_case_insensitive
        __props__.__dict__["client_session_keep_alive"] = client_session_keep_alive
        __props__.__dict__["client_session_keep_alive_heartbeat_frequency"] = client_session_keep_alive_heartbeat_frequency
        __props__.__dict__["client_timestamp_type_mapping"] = client_timestamp_type_mapping
        __props__.__dict__["comment"] = comment
        __props__.__dict__["cortex_enabled_cross_region"] = cortex_enabled_cross_region
        __props__.__dict__["cortex_models_allowlist"] = cortex_models_allowlist
        __props__.__dict__["csv_timestamp_format"] = csv_timestamp_format
        __props__.__dict__["data_retention_time_in_days"] = data_retention_time_in_days
        __props__.__dict__["date_input_format"] = date_input_format
        __props__.__dict__["date_output_format"] = date_output_format
        __props__.__dict__["default_ddl_collation"] = default_ddl_collation
        __props__.__dict__["default_notebook_compute_pool_cpu"] = default_notebook_compute_pool_cpu
        __props__.__dict__["default_notebook_compute_pool_gpu"] = default_notebook_compute_pool_gpu
        __props__.__dict__["default_null_ordering"] = default_null_ordering
        __props__.__dict__["default_streamlit_notebook_warehouse"] = default_streamlit_notebook_warehouse
        __props__.__dict__["disable_ui_download_button"] = disable_ui_download_button
        __props__.__dict__["disable_user_privilege_grants"] = disable_user_privilege_grants
        __props__.__dict__["enable_automatic_sensitive_data_classification_log"] = enable_automatic_sensitive_data_classification_log
        __props__.__dict__["enable_egress_cost_optimizer"] = enable_egress_cost_optimizer
        __props__.__dict__["enable_identifier_first_login"] = enable_identifier_first_login
        __props__.__dict__["enable_internal_stages_privatelink"] = enable_internal_stages_privatelink
        __props__.__dict__["enable_tri_secret_and_rekey_opt_out_for_image_repository"] = enable_tri_secret_and_rekey_opt_out_for_image_repository
        __props__.__dict__["enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage"] = enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage
        __props__.__dict__["enable_unhandled_exceptions_reporting"] = enable_unhandled_exceptions_reporting
        __props__.__dict__["enable_unload_physical_type_optimization"] = enable_unload_physical_type_optimization
        __props__.__dict__["enable_unredacted_query_syntax_error"] = enable_unredacted_query_syntax_error
        __props__.__dict__["enable_unredacted_secure_object_error"] = enable_unredacted_secure_object_error
        __props__.__dict__["enforce_network_rules_for_internal_stages"] = enforce_network_rules_for_internal_stages
        __props__.__dict__["error_on_nondeterministic_merge"] = error_on_nondeterministic_merge
        __props__.__dict__["error_on_nondeterministic_update"] = error_on_nondeterministic_update
        __props__.__dict__["event_table"] = event_table
        __props__.__dict__["external_oauth_add_privileged_roles_to_blocked_list"] = external_oauth_add_privileged_roles_to_blocked_list
        __props__.__dict__["external_volume"] = external_volume
        __props__.__dict__["geography_output_format"] = geography_output_format
        __props__.__dict__["geometry_output_format"] = geometry_output_format
        __props__.__dict__["hybrid_table_lock_timeout"] = hybrid_table_lock_timeout
        __props__.__dict__["initial_replication_size_limit_in_tb"] = initial_replication_size_limit_in_tb
        __props__.__dict__["jdbc_treat_decimal_as_int"] = jdbc_treat_decimal_as_int
        __props__.__dict__["jdbc_treat_timestamp_ntz_as_utc"] = jdbc_treat_timestamp_ntz_as_utc
        __props__.__dict__["jdbc_use_session_timezone"] = jdbc_use_session_timezone
        __props__.__dict__["js_treat_integer_as_bigint"] = js_treat_integer_as_bigint
        __props__.__dict__["json_indent"] = json_indent
        __props__.__dict__["listing_auto_fulfillment_replication_refresh_schedule"] = listing_auto_fulfillment_replication_refresh_schedule
        __props__.__dict__["lock_timeout"] = lock_timeout
        __props__.__dict__["log_level"] = log_level
        __props__.__dict__["max_concurrency_level"] = max_concurrency_level
        __props__.__dict__["max_data_extension_time_in_days"] = max_data_extension_time_in_days
        __props__.__dict__["metric_level"] = metric_level
        __props__.__dict__["min_data_retention_time_in_days"] = min_data_retention_time_in_days
        __props__.__dict__["multi_statement_count"] = multi_statement_count
        __props__.__dict__["name"] = name
        __props__.__dict__["network_policy"] = network_policy
        __props__.__dict__["noorder_sequence_as_default"] = noorder_sequence_as_default
        __props__.__dict__["oauth_add_privileged_roles_to_blocked_list"] = oauth_add_privileged_roles_to_blocked_list
        __props__.__dict__["odbc_treat_decimal_as_int"] = odbc_treat_decimal_as_int
        __props__.__dict__["password_policy"] = password_policy
        __props__.__dict__["periodic_data_rekeying"] = periodic_data_rekeying
        __props__.__dict__["pipe_execution_paused"] = pipe_execution_paused
        __props__.__dict__["prevent_unload_to_inline_url"] = prevent_unload_to_inline_url
        __props__.__dict__["prevent_unload_to_internal_stages"] = prevent_unload_to_internal_stages
        __props__.__dict__["python_profiler_modules"] = python_profiler_modules
        __props__.__dict__["python_profiler_target_stage"] = python_profiler_target_stage
        __props__.__dict__["query_tag"] = query_tag
        __props__.__dict__["quoted_identifiers_ignore_case"] = quoted_identifiers_ignore_case
        __props__.__dict__["replace_invalid_characters"] = replace_invalid_characters
        __props__.__dict__["require_storage_integration_for_stage_creation"] = require_storage_integration_for_stage_creation
        __props__.__dict__["require_storage_integration_for_stage_operation"] = require_storage_integration_for_stage_operation
        __props__.__dict__["resource_monitor"] = resource_monitor
        __props__.__dict__["rows_per_resultset"] = rows_per_resultset
        __props__.__dict__["s3_stage_vpce_dns_name"] = s3_stage_vpce_dns_name
        __props__.__dict__["saml_identity_provider"] = saml_identity_provider
        __props__.__dict__["search_path"] = search_path
        __props__.__dict__["serverless_task_max_statement_size"] = serverless_task_max_statement_size
        __props__.__dict__["serverless_task_min_statement_size"] = serverless_task_min_statement_size
        __props__.__dict__["session_policy"] = session_policy
        __props__.__dict__["show_outputs"] = show_outputs
        __props__.__dict__["simulated_data_sharing_consumer"] = simulated_data_sharing_consumer
        __props__.__dict__["sso_login_page"] = sso_login_page
        __props__.__dict__["statement_queued_timeout_in_seconds"] = statement_queued_timeout_in_seconds
        __props__.__dict__["statement_timeout_in_seconds"] = statement_timeout_in_seconds
        __props__.__dict__["storage_serialization_policy"] = storage_serialization_policy
        __props__.__dict__["strict_json_output"] = strict_json_output
        __props__.__dict__["suspend_task_after_num_failures"] = suspend_task_after_num_failures
        __props__.__dict__["task_auto_retry_attempts"] = task_auto_retry_attempts
        __props__.__dict__["time_input_format"] = time_input_format
        __props__.__dict__["time_output_format"] = time_output_format
        __props__.__dict__["timestamp_day_is_always24h"] = timestamp_day_is_always24h
        __props__.__dict__["timestamp_input_format"] = timestamp_input_format
        __props__.__dict__["timestamp_ltz_output_format"] = timestamp_ltz_output_format
        __props__.__dict__["timestamp_ntz_output_format"] = timestamp_ntz_output_format
        __props__.__dict__["timestamp_output_format"] = timestamp_output_format
        __props__.__dict__["timestamp_type_mapping"] = timestamp_type_mapping
        __props__.__dict__["timestamp_tz_output_format"] = timestamp_tz_output_format
        __props__.__dict__["timezone"] = timezone
        __props__.__dict__["trace_level"] = trace_level
        __props__.__dict__["transaction_abort_on_error"] = transaction_abort_on_error
        __props__.__dict__["transaction_default_isolation_level"] = transaction_default_isolation_level
        __props__.__dict__["two_digit_century_start"] = two_digit_century_start
        __props__.__dict__["unsupported_ddl_action"] = unsupported_ddl_action
        __props__.__dict__["use_cached_result"] = use_cached_result
        __props__.__dict__["user_task_managed_initial_warehouse_size"] = user_task_managed_initial_warehouse_size
        __props__.__dict__["user_task_minimum_trigger_interval_in_seconds"] = user_task_minimum_trigger_interval_in_seconds
        __props__.__dict__["user_task_timeout_ms"] = user_task_timeout_ms
        __props__.__dict__["week_of_year_policy"] = week_of_year_policy
        __props__.__dict__["week_start"] = week_start
        return CurrentOrganizationAccount(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="abortDetachedQuery")
    def abort_detached_query(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
        """
        return pulumi.get(self, "abort_detached_query")

    @_builtins.property
    @pulumi.getter(name="activePythonProfiler")
    def active_python_profiler(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
        """
        return pulumi.get(self, "active_python_profiler")

    @_builtins.property
    @pulumi.getter(name="allowClientMfaCaching")
    def allow_client_mfa_caching(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
        """
        return pulumi.get(self, "allow_client_mfa_caching")

    @_builtins.property
    @pulumi.getter(name="allowIdToken")
    def allow_id_token(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
        """
        return pulumi.get(self, "allow_id_token")

    @_builtins.property
    @pulumi.getter
    def autocommit(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
        """
        return pulumi.get(self, "autocommit")

    @_builtins.property
    @pulumi.getter(name="baseLocationPrefix")
    def base_location_prefix(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
        """
        return pulumi.get(self, "base_location_prefix")

    @_builtins.property
    @pulumi.getter(name="binaryInputFormat")
    def binary_input_format(self) -> pulumi.Output[_builtins.str]:
        """
        The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
        """
        return pulumi.get(self, "binary_input_format")

    @_builtins.property
    @pulumi.getter(name="binaryOutputFormat")
    def binary_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
        """
        return pulumi.get(self, "binary_output_format")

    @_builtins.property
    @pulumi.getter
    def catalog(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
        """
        return pulumi.get(self, "catalog")

    @_builtins.property
    @pulumi.getter(name="catalogSync")
    def catalog_sync(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
        """
        return pulumi.get(self, "catalog_sync")

    @_builtins.property
    @pulumi.getter(name="clientEnableLogInfoStatementParameters")
    def client_enable_log_info_statement_parameters(self) -> pulumi.Output[_builtins.bool]:
        """
        Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
        """
        return pulumi.get(self, "client_enable_log_info_statement_parameters")

    @_builtins.property
    @pulumi.getter(name="clientEncryptionKeySize")
    def client_encryption_key_size(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check [CLIENT*ENCRYPTION*KEY*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
        """
        return pulumi.get(self, "client_encryption_key_size")

    @_builtins.property
    @pulumi.getter(name="clientMemoryLimit")
    def client_memory_limit(self) -> pulumi.Output[_builtins.int]:
        """
        Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
        """
        return pulumi.get(self, "client_memory_limit")

    @_builtins.property
    @pulumi.getter(name="clientMetadataRequestUseConnectionCtx")
    def client_metadata_request_use_connection_ctx(self) -> pulumi.Output[_builtins.bool]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
        """
        return pulumi.get(self, "client_metadata_request_use_connection_ctx")

    @_builtins.property
    @pulumi.getter(name="clientMetadataUseSessionDatabase")
    def client_metadata_use_session_database(self) -> pulumi.Output[_builtins.bool]:
        """
        For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
        """
        return pulumi.get(self, "client_metadata_use_session_database")

    @_builtins.property
    @pulumi.getter(name="clientPrefetchThreads")
    def client_prefetch_threads(self) -> pulumi.Output[_builtins.int]:
        """
        Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
        """
        return pulumi.get(self, "client_prefetch_threads")

    @_builtins.property
    @pulumi.getter(name="clientResultChunkSize")
    def client_result_chunk_size(self) -> pulumi.Output[_builtins.int]:
        """
        Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
        """
        return pulumi.get(self, "client_result_chunk_size")

    @_builtins.property
    @pulumi.getter(name="clientResultColumnCaseInsensitive")
    def client_result_column_case_insensitive(self) -> pulumi.Output[_builtins.bool]:
        """
        Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
        """
        return pulumi.get(self, "client_result_column_case_insensitive")

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAlive")
    def client_session_keep_alive(self) -> pulumi.Output[_builtins.bool]:
        """
        Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
        """
        return pulumi.get(self, "client_session_keep_alive")

    @_builtins.property
    @pulumi.getter(name="clientSessionKeepAliveHeartbeatFrequency")
    def client_session_keep_alive_heartbeat_frequency(self) -> pulumi.Output[_builtins.int]:
        """
        Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
        """
        return pulumi.get(self, "client_session_keep_alive_heartbeat_frequency")

    @_builtins.property
    @pulumi.getter(name="clientTimestampTypeMapping")
    def client_timestamp_type_mapping(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
        """
        return pulumi.get(self, "client_timestamp_type_mapping")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies a comment for the organization account.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter(name="cortexEnabledCrossRegion")
    def cortex_enabled_cross_region(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
        """
        return pulumi.get(self, "cortex_enabled_cross_region")

    @_builtins.property
    @pulumi.getter(name="cortexModelsAllowlist")
    def cortex_models_allowlist(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
        """
        return pulumi.get(self, "cortex_models_allowlist")

    @_builtins.property
    @pulumi.getter(name="csvTimestampFormat")
    def csv_timestamp_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, [TIMESTAMP*TZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and [TIMESTAMP*NTZ*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check [CSV*TIMESTAMP*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
        """
        return pulumi.get(self, "csv_timestamp_format")

    @_builtins.property
    @pulumi.getter(name="dataRetentionTimeInDays")
    def data_retention_time_in_days(self) -> pulumi.Output[_builtins.int]:
        """
        Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding & using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
        """
        return pulumi.get(self, "data_retention_time_in_days")

    @_builtins.property
    @pulumi.getter(name="dateInputFormat")
    def date_input_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
        """
        return pulumi.get(self, "date_input_format")

    @_builtins.property
    @pulumi.getter(name="dateOutputFormat")
    def date_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
        """
        return pulumi.get(self, "date_output_format")

    @_builtins.property
    @pulumi.getter(name="defaultDdlCollation")
    def default_ddl_collation(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
        """
        return pulumi.get(self, "default_ddl_collation")

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolCpu")
    def default_notebook_compute_pool_cpu(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_cpu")

    @_builtins.property
    @pulumi.getter(name="defaultNotebookComputePoolGpu")
    def default_notebook_compute_pool_gpu(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
        """
        return pulumi.get(self, "default_notebook_compute_pool_gpu")

    @_builtins.property
    @pulumi.getter(name="defaultNullOrdering")
    def default_null_ordering(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
        """
        return pulumi.get(self, "default_null_ordering")

    @_builtins.property
    @pulumi.getter(name="defaultStreamlitNotebookWarehouse")
    def default_streamlit_notebook_warehouse(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
        """
        return pulumi.get(self, "default_streamlit_notebook_warehouse")

    @_builtins.property
    @pulumi.getter(name="disableUiDownloadButton")
    def disable_ui_download_button(self) -> pulumi.Output[_builtins.bool]:
        """
        Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
        """
        return pulumi.get(self, "disable_ui_download_button")

    @_builtins.property
    @pulumi.getter(name="disableUserPrivilegeGrants")
    def disable_user_privilege_grants(self) -> pulumi.Output[_builtins.bool]:
        """
        Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \\n\\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check [DISABLE*USER*PRIVILEGE*GRANTS docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
        """
        return pulumi.get(self, "disable_user_privilege_grants")

    @_builtins.property
    @pulumi.getter(name="enableAutomaticSensitiveDataClassificationLog")
    def enable_automatic_sensitive_data_classification_log(self) -> pulumi.Output[_builtins.bool]:
        """
        Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
        """
        return pulumi.get(self, "enable_automatic_sensitive_data_classification_log")

    @_builtins.property
    @pulumi.getter(name="enableEgressCostOptimizer")
    def enable_egress_cost_optimizer(self) -> pulumi.Output[_builtins.bool]:
        """
        Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
        """
        return pulumi.get(self, "enable_egress_cost_optimizer")

    @_builtins.property
    @pulumi.getter(name="enableIdentifierFirstLogin")
    def enable_identifier_first_login(self) -> pulumi.Output[_builtins.bool]:
        """
        Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
        """
        return pulumi.get(self, "enable_identifier_first_login")

    @_builtins.property
    @pulumi.getter(name="enableInternalStagesPrivatelink")
    def enable_internal_stages_privatelink(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
        """
        return pulumi.get(self, "enable_internal_stages_privatelink")

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForImageRepository")
    def enable_tri_secret_and_rekey_opt_out_for_image_repository(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_image_repository")

    @_builtins.property
    @pulumi.getter(name="enableTriSecretAndRekeyOptOutForSpcsBlockStorage")
    def enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
        """
        return pulumi.get(self, "enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage")

    @_builtins.property
    @pulumi.getter(name="enableUnhandledExceptionsReporting")
    def enable_unhandled_exceptions_reporting(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
        """
        return pulumi.get(self, "enable_unhandled_exceptions_reporting")

    @_builtins.property
    @pulumi.getter(name="enableUnloadPhysicalTypeOptimization")
    def enable_unload_physical_type_optimization(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
        """
        return pulumi.get(self, "enable_unload_physical_type_optimization")

    @_builtins.property
    @pulumi.getter(name="enableUnredactedQuerySyntaxError")
    def enable_unredacted_query_syntax_error(self) -> pulumi.Output[_builtins.bool]:
        """
        Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check [ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
        """
        return pulumi.get(self, "enable_unredacted_query_syntax_error")

    @_builtins.property
    @pulumi.getter(name="enableUnredactedSecureObjectError")
    def enable_unredacted_secure_object_error(self) -> pulumi.Output[_builtins.bool]:
        """
        Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check [ENABLE*UNREDACTED*SECURE*OBJECT*ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
        """
        return pulumi.get(self, "enable_unredacted_secure_object_error")

    @_builtins.property
    @pulumi.getter(name="enforceNetworkRulesForInternalStages")
    def enforce_network_rules_for_internal_stages(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
        """
        return pulumi.get(self, "enforce_network_rules_for_internal_stages")

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicMerge")
    def error_on_nondeterministic_merge(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
        """
        return pulumi.get(self, "error_on_nondeterministic_merge")

    @_builtins.property
    @pulumi.getter(name="errorOnNondeterministicUpdate")
    def error_on_nondeterministic_update(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
        """
        return pulumi.get(self, "error_on_nondeterministic_update")

    @_builtins.property
    @pulumi.getter(name="eventTable")
    def event_table(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
        """
        return pulumi.get(self, "event_table")

    @_builtins.property
    @pulumi.getter(name="externalOauthAddPrivilegedRolesToBlockedList")
    def external_oauth_add_privileged_roles_to_blocked_list(self) -> pulumi.Output[_builtins.bool]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "external_oauth_add_privileged_roles_to_blocked_list")

    @_builtins.property
    @pulumi.getter(name="externalVolume")
    def external_volume(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
        """
        return pulumi.get(self, "external_volume")

    @_builtins.property
    @pulumi.getter(name="geographyOutputFormat")
    def geography_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
        """
        return pulumi.get(self, "geography_output_format")

    @_builtins.property
    @pulumi.getter(name="geometryOutputFormat")
    def geometry_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
        """
        return pulumi.get(self, "geometry_output_format")

    @_builtins.property
    @pulumi.getter(name="hybridTableLockTimeout")
    def hybrid_table_lock_timeout(self) -> pulumi.Output[_builtins.int]:
        """
        Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
        """
        return pulumi.get(self, "hybrid_table_lock_timeout")

    @_builtins.property
    @pulumi.getter(name="initialReplicationSizeLimitInTb")
    def initial_replication_size_limit_in_tb(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
        """
        return pulumi.get(self, "initial_replication_size_limit_in_tb")

    @_builtins.property
    @pulumi.getter(name="jdbcTreatDecimalAsInt")
    def jdbc_treat_decimal_as_int(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "jdbc_treat_decimal_as_int")

    @_builtins.property
    @pulumi.getter(name="jdbcTreatTimestampNtzAsUtc")
    def jdbc_treat_timestamp_ntz_as_utc(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check [JDBC*TREAT*TIMESTAMP*NTZ*AS*UTC docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
        """
        return pulumi.get(self, "jdbc_treat_timestamp_ntz_as_utc")

    @_builtins.property
    @pulumi.getter(name="jdbcUseSessionTimezone")
    def jdbc_use_session_timezone(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
        """
        return pulumi.get(self, "jdbc_use_session_timezone")

    @_builtins.property
    @pulumi.getter(name="jsTreatIntegerAsBigint")
    def js_treat_integer_as_bigint(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
        """
        return pulumi.get(self, "js_treat_integer_as_bigint")

    @_builtins.property
    @pulumi.getter(name="jsonIndent")
    def json_indent(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
        """
        return pulumi.get(self, "json_indent")

    @_builtins.property
    @pulumi.getter(name="listingAutoFulfillmentReplicationRefreshSchedule")
    def listing_auto_fulfillment_replication_refresh_schedule(self) -> pulumi.Output[_builtins.str]:
        """
        Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
        """
        return pulumi.get(self, "listing_auto_fulfillment_replication_refresh_schedule")

    @_builtins.property
    @pulumi.getter(name="lockTimeout")
    def lock_timeout(self) -> pulumi.Output[_builtins.int]:
        """
        Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
        """
        return pulumi.get(self, "lock_timeout")

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
        """
        return pulumi.get(self, "log_level")

    @_builtins.property
    @pulumi.getter(name="maxConcurrencyLevel")
    def max_concurrency_level(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
        """
        return pulumi.get(self, "max_concurrency_level")

    @_builtins.property
    @pulumi.getter(name="maxDataExtensionTimeInDays")
    def max_data_extension_time_in_days(self) -> pulumi.Output[_builtins.int]:
        """
        Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check [MAX*DATA*EXTENSION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
        """
        return pulumi.get(self, "max_data_extension_time_in_days")

    @_builtins.property
    @pulumi.getter(name="metricLevel")
    def metric_level(self) -> pulumi.Output[_builtins.str]:
        """
        Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
        """
        return pulumi.get(self, "metric_level")

    @_builtins.property
    @pulumi.getter(name="minDataRetentionTimeInDays")
    def min_data_retention_time_in_days(self) -> pulumi.Output[_builtins.int]:
        """
        Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check [MIN*DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
        """
        return pulumi.get(self, "min_data_retention_time_in_days")

    @_builtins.property
    @pulumi.getter(name="multiStatementCount")
    def multi_statement_count(self) -> pulumi.Output[_builtins.int]:
        """
        Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
        """
        return pulumi.get(self, "multi_statement_count")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkPolicy")
    def network_policy(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
        """
        return pulumi.get(self, "network_policy")

    @_builtins.property
    @pulumi.getter(name="noorderSequenceAsDefault")
    def noorder_sequence_as_default(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
        """
        return pulumi.get(self, "noorder_sequence_as_default")

    @_builtins.property
    @pulumi.getter(name="oauthAddPrivilegedRolesToBlockedList")
    def oauth_add_privileged_roles_to_blocked_list(self) -> pulumi.Output[_builtins.bool]:
        """
        Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
        """
        return pulumi.get(self, "oauth_add_privileged_roles_to_blocked_list")

    @_builtins.property
    @pulumi.getter(name="odbcTreatDecimalAsInt")
    def odbc_treat_decimal_as_int(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
        """
        return pulumi.get(self, "odbc_treat_decimal_as_int")

    @_builtins.property
    @pulumi.getter(name="passwordPolicy")
    def password_policy(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
        """
        return pulumi.get(self, "password_policy")

    @_builtins.property
    @pulumi.getter(name="periodicDataRekeying")
    def periodic_data_rekeying(self) -> pulumi.Output[_builtins.bool]:
        """
        It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
        """
        return pulumi.get(self, "periodic_data_rekeying")

    @_builtins.property
    @pulumi.getter(name="pipeExecutionPaused")
    def pipe_execution_paused(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
        """
        return pulumi.get(self, "pipe_execution_paused")

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInlineUrl")
    def prevent_unload_to_inline_url(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
        """
        return pulumi.get(self, "prevent_unload_to_inline_url")

    @_builtins.property
    @pulumi.getter(name="preventUnloadToInternalStages")
    def prevent_unload_to_internal_stages(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
        """
        return pulumi.get(self, "prevent_unload_to_internal_stages")

    @_builtins.property
    @pulumi.getter(name="pythonProfilerModules")
    def python_profiler_modules(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
        """
        return pulumi.get(self, "python_profiler_modules")

    @_builtins.property
    @pulumi.getter(name="pythonProfilerTargetStage")
    def python_profiler_target_stage(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
        """
        return pulumi.get(self, "python_profiler_target_stage")

    @_builtins.property
    @pulumi.getter(name="queryTag")
    def query_tag(self) -> pulumi.Output[_builtins.str]:
        """
        Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
        """
        return pulumi.get(self, "query_tag")

    @_builtins.property
    @pulumi.getter(name="quotedIdentifiersIgnoreCase")
    def quoted_identifiers_ignore_case(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
        """
        return pulumi.get(self, "quoted_identifiers_ignore_case")

    @_builtins.property
    @pulumi.getter(name="replaceInvalidCharacters")
    def replace_invalid_characters(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
        """
        return pulumi.get(self, "replace_invalid_characters")

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageCreation")
    def require_storage_integration_for_stage_creation(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_creation")

    @_builtins.property
    @pulumi.getter(name="requireStorageIntegrationForStageOperation")
    def require_storage_integration_for_stage_operation(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
        """
        return pulumi.get(self, "require_storage_integration_for_stage_operation")

    @_builtins.property
    @pulumi.getter(name="resourceMonitor")
    def resource_monitor(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "resource_monitor")

    @_builtins.property
    @pulumi.getter(name="rowsPerResultset")
    def rows_per_resultset(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
        """
        return pulumi.get(self, "rows_per_resultset")

    @_builtins.property
    @pulumi.getter(name="s3StageVpceDnsName")
    def s3_stage_vpce_dns_name(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
        """
        return pulumi.get(self, "s3_stage_vpce_dns_name")

    @_builtins.property
    @pulumi.getter(name="samlIdentityProvider")
    def saml_identity_provider(self) -> pulumi.Output[_builtins.str]:
        """
        Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
        """
        return pulumi.get(self, "saml_identity_provider")

    @_builtins.property
    @pulumi.getter(name="searchPath")
    def search_path(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
        """
        return pulumi.get(self, "search_path")

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMaxStatementSize")
    def serverless_task_max_statement_size(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
        """
        return pulumi.get(self, "serverless_task_max_statement_size")

    @_builtins.property
    @pulumi.getter(name="serverlessTaskMinStatementSize")
    def serverless_task_min_statement_size(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
        """
        return pulumi.get(self, "serverless_task_min_statement_size")

    @_builtins.property
    @pulumi.getter(name="sessionPolicy")
    def session_policy(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
        """
        return pulumi.get(self, "session_policy")

    @_builtins.property
    @pulumi.getter(name="showOutputs")
    def show_outputs(self) -> pulumi.Output[Sequence['outputs.CurrentOrganizationAccountShowOutput']]:
        """
        Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
        """
        return pulumi.get(self, "show_outputs")

    @_builtins.property
    @pulumi.getter(name="simulatedDataSharingConsumer")
    def simulated_data_sharing_consumer(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
        """
        return pulumi.get(self, "simulated_data_sharing_consumer")

    @_builtins.property
    @pulumi.getter(name="ssoLoginPage")
    def sso_login_page(self) -> pulumi.Output[_builtins.bool]:
        """
        This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
        """
        return pulumi.get(self, "sso_login_page")

    @_builtins.property
    @pulumi.getter(name="statementQueuedTimeoutInSeconds")
    def statement_queued_timeout_in_seconds(self) -> pulumi.Output[_builtins.int]:
        """
        Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_queued_timeout_in_seconds")

    @_builtins.property
    @pulumi.getter(name="statementTimeoutInSeconds")
    def statement_timeout_in_seconds(self) -> pulumi.Output[_builtins.int]:
        """
        Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
        """
        return pulumi.get(self, "statement_timeout_in_seconds")

    @_builtins.property
    @pulumi.getter(name="storageSerializationPolicy")
    def storage_serialization_policy(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
        """
        return pulumi.get(self, "storage_serialization_policy")

    @_builtins.property
    @pulumi.getter(name="strictJsonOutput")
    def strict_json_output(self) -> pulumi.Output[_builtins.bool]:
        """
        This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
        """
        return pulumi.get(self, "strict_json_output")

    @_builtins.property
    @pulumi.getter(name="suspendTaskAfterNumFailures")
    def suspend_task_after_num_failures(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
        """
        return pulumi.get(self, "suspend_task_after_num_failures")

    @_builtins.property
    @pulumi.getter(name="taskAutoRetryAttempts")
    def task_auto_retry_attempts(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
        """
        return pulumi.get(self, "task_auto_retry_attempts")

    @_builtins.property
    @pulumi.getter(name="timeInputFormat")
    def time_input_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
        """
        return pulumi.get(self, "time_input_format")

    @_builtins.property
    @pulumi.getter(name="timeOutputFormat")
    def time_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
        """
        return pulumi.get(self, "time_output_format")

    @_builtins.property
    @pulumi.getter(name="timestampDayIsAlways24h")
    def timestamp_day_is_always24h(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
        """
        return pulumi.get(self, "timestamp_day_is_always24h")

    @_builtins.property
    @pulumi.getter(name="timestampInputFormat")
    def timestamp_input_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
        """
        return pulumi.get(self, "timestamp_input_format")

    @_builtins.property
    @pulumi.getter(name="timestampLtzOutputFormat")
    def timestamp_ltz_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
        """
        return pulumi.get(self, "timestamp_ltz_output_format")

    @_builtins.property
    @pulumi.getter(name="timestampNtzOutputFormat")
    def timestamp_ntz_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check [TIMESTAMP*NTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
        """
        return pulumi.get(self, "timestamp_ntz_output_format")

    @_builtins.property
    @pulumi.getter(name="timestampOutputFormat")
    def timestamp_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
        """
        return pulumi.get(self, "timestamp_output_format")

    @_builtins.property
    @pulumi.getter(name="timestampTypeMapping")
    def timestamp_type_mapping(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
        """
        return pulumi.get(self, "timestamp_type_mapping")

    @_builtins.property
    @pulumi.getter(name="timestampTzOutputFormat")
    def timestamp_tz_output_format(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to [TIMESTAMP*OUTPUT*FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
        """
        return pulumi.get(self, "timestamp_tz_output_format")

    @_builtins.property
    @pulumi.getter
    def timezone(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
        """
        return pulumi.get(self, "timezone")

    @_builtins.property
    @pulumi.getter(name="traceLevel")
    def trace_level(self) -> pulumi.Output[_builtins.str]:
        """
        Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
        """
        return pulumi.get(self, "trace_level")

    @_builtins.property
    @pulumi.getter(name="transactionAbortOnError")
    def transaction_abort_on_error(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
        """
        return pulumi.get(self, "transaction_abort_on_error")

    @_builtins.property
    @pulumi.getter(name="transactionDefaultIsolationLevel")
    def transaction_default_isolation_level(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
        """
        return pulumi.get(self, "transaction_default_isolation_level")

    @_builtins.property
    @pulumi.getter(name="twoDigitCenturyStart")
    def two_digit_century_start(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
        """
        return pulumi.get(self, "two_digit_century_start")

    @_builtins.property
    @pulumi.getter(name="unsupportedDdlAction")
    def unsupported_ddl_action(self) -> pulumi.Output[_builtins.str]:
        """
        Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
        """
        return pulumi.get(self, "unsupported_ddl_action")

    @_builtins.property
    @pulumi.getter(name="useCachedResult")
    def use_cached_result(self) -> pulumi.Output[_builtins.bool]:
        """
        Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
        """
        return pulumi.get(self, "use_cached_result")

    @_builtins.property
    @pulumi.getter(name="userTaskManagedInitialWarehouseSize")
    def user_task_managed_initial_warehouse_size(self) -> pulumi.Output[_builtins.str]:
        """
        Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
        """
        return pulumi.get(self, "user_task_managed_initial_warehouse_size")

    @_builtins.property
    @pulumi.getter(name="userTaskMinimumTriggerIntervalInSeconds")
    def user_task_minimum_trigger_interval_in_seconds(self) -> pulumi.Output[_builtins.int]:
        """
        Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
        """
        return pulumi.get(self, "user_task_minimum_trigger_interval_in_seconds")

    @_builtins.property
    @pulumi.getter(name="userTaskTimeoutMs")
    def user_task_timeout_ms(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
        """
        return pulumi.get(self, "user_task_timeout_ms")

    @_builtins.property
    @pulumi.getter(name="weekOfYearPolicy")
    def week_of_year_policy(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
        """
        return pulumi.get(self, "week_of_year_policy")

    @_builtins.property
    @pulumi.getter(name="weekStart")
    def week_start(self) -> pulumi.Output[_builtins.int]:
        """
        Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
        """
        return pulumi.get(self, "week_start")

