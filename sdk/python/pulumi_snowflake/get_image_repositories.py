# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetImageRepositoriesResult',
    'AwaitableGetImageRepositoriesResult',
    'get_image_repositories',
    'get_image_repositories_output',
]

@pulumi.output_type
class GetImageRepositoriesResult:
    """
    A collection of values returned by getImageRepositories.
    """
    def __init__(__self__, id=None, image_repositories=None, in_=None, like=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if image_repositories and not isinstance(image_repositories, list):
            raise TypeError("Expected argument 'image_repositories' to be a list")
        pulumi.set(__self__, "image_repositories", image_repositories)
        if in_ and not isinstance(in_, dict):
            raise TypeError("Expected argument 'in_' to be a dict")
        pulumi.set(__self__, "in_", in_)
        if like and not isinstance(like, str):
            raise TypeError("Expected argument 'like' to be a str")
        pulumi.set(__self__, "like", like)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="imageRepositories")
    def image_repositories(self) -> Sequence['outputs.GetImageRepositoriesImageRepositoryResult']:
        """
        Holds the aggregated output of all image repositories details queries.
        """
        return pulumi.get(self, "image_repositories")

    @property
    @pulumi.getter(name="in")
    def in_(self) -> Optional['outputs.GetImageRepositoriesInResult']:
        """
        IN clause to filter the list of objects
        """
        return pulumi.get(self, "in_")

    @property
    @pulumi.getter
    def like(self) -> Optional[builtins.str]:
        """
        Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        """
        return pulumi.get(self, "like")


class AwaitableGetImageRepositoriesResult(GetImageRepositoriesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetImageRepositoriesResult(
            id=self.id,
            image_repositories=self.image_repositories,
            in_=self.in_,
            like=self.like)


def get_image_repositories(in_: Optional[Union['GetImageRepositoriesInArgs', 'GetImageRepositoriesInArgsDict']] = None,
                           like: Optional[builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetImageRepositoriesResult:
    """
    !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `preview_features_enabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.

    Data source used to get details of filtered image repositories. Filtering is aligned with the current possibilities for [SHOW IMAGE REPOSITORIES](https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories) query. The results of SHOW are encapsulated in one output collection `image_repositories`.


    :param Union['GetImageRepositoriesInArgs', 'GetImageRepositoriesInArgsDict'] in_: IN clause to filter the list of objects
    :param builtins.str like: Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
    """
    __args__ = dict()
    __args__['in'] = in_
    __args__['like'] = like
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('snowflake:index/getImageRepositories:getImageRepositories', __args__, opts=opts, typ=GetImageRepositoriesResult).value

    return AwaitableGetImageRepositoriesResult(
        id=pulumi.get(__ret__, 'id'),
        image_repositories=pulumi.get(__ret__, 'image_repositories'),
        in_=pulumi.get(__ret__, 'in_'),
        like=pulumi.get(__ret__, 'like'))
def get_image_repositories_output(in_: Optional[pulumi.Input[Optional[Union['GetImageRepositoriesInArgs', 'GetImageRepositoriesInArgsDict']]]] = None,
                                  like: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetImageRepositoriesResult]:
    """
    !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `preview_features_enabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.

    Data source used to get details of filtered image repositories. Filtering is aligned with the current possibilities for [SHOW IMAGE REPOSITORIES](https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories) query. The results of SHOW are encapsulated in one output collection `image_repositories`.


    :param Union['GetImageRepositoriesInArgs', 'GetImageRepositoriesInArgsDict'] in_: IN clause to filter the list of objects
    :param builtins.str like: Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
    """
    __args__ = dict()
    __args__['in'] = in_
    __args__['like'] = like
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('snowflake:index/getImageRepositories:getImageRepositories', __args__, opts=opts, typ=GetImageRepositoriesResult)
    return __ret__.apply(lambda __response__: GetImageRepositoriesResult(
        id=pulumi.get(__response__, 'id'),
        image_repositories=pulumi.get(__response__, 'image_repositories'),
        in_=pulumi.get(__response__, 'in_'),
        like=pulumi.get(__response__, 'like')))
