# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemGetSnowflakePlatformInfoResult',
    'AwaitableGetSystemGetSnowflakePlatformInfoResult',
    'get_system_get_snowflake_platform_info',
    'get_system_get_snowflake_platform_info_output',
]

@pulumi.output_type
class GetSystemGetSnowflakePlatformInfoResult:
    """
    A collection of values returned by getSystemGetSnowflakePlatformInfo.
    """
    def __init__(__self__, aws_vpc_ids=None, azure_vnet_subnet_ids=None, id=None):
        if aws_vpc_ids and not isinstance(aws_vpc_ids, list):
            raise TypeError("Expected argument 'aws_vpc_ids' to be a list")
        pulumi.set(__self__, "aws_vpc_ids", aws_vpc_ids)
        if azure_vnet_subnet_ids and not isinstance(azure_vnet_subnet_ids, list):
            raise TypeError("Expected argument 'azure_vnet_subnet_ids' to be a list")
        pulumi.set(__self__, "azure_vnet_subnet_ids", azure_vnet_subnet_ids)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="awsVpcIds")
    def aws_vpc_ids(self) -> Sequence[str]:
        """
        Snowflake AWS Virtual Private Cloud IDs
        """
        return pulumi.get(self, "aws_vpc_ids")

    @property
    @pulumi.getter(name="azureVnetSubnetIds")
    def azure_vnet_subnet_ids(self) -> Sequence[str]:
        """
        Snowflake Azure Virtual Network Subnet IDs
        """
        return pulumi.get(self, "azure_vnet_subnet_ids")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetSystemGetSnowflakePlatformInfoResult(GetSystemGetSnowflakePlatformInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemGetSnowflakePlatformInfoResult(
            aws_vpc_ids=self.aws_vpc_ids,
            azure_vnet_subnet_ids=self.azure_vnet_subnet_ids,
            id=self.id)


def get_system_get_snowflake_platform_info(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemGetSnowflakePlatformInfoResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('snowflake:index/getSystemGetSnowflakePlatformInfo:getSystemGetSnowflakePlatformInfo', __args__, opts=opts, typ=GetSystemGetSnowflakePlatformInfoResult).value

    return AwaitableGetSystemGetSnowflakePlatformInfoResult(
        aws_vpc_ids=pulumi.get(__ret__, 'aws_vpc_ids'),
        azure_vnet_subnet_ids=pulumi.get(__ret__, 'azure_vnet_subnet_ids'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_system_get_snowflake_platform_info)
def get_system_get_snowflake_platform_info_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSystemGetSnowflakePlatformInfoResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
