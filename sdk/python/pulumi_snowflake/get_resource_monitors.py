# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetResourceMonitorsResult',
    'AwaitableGetResourceMonitorsResult',
    'get_resource_monitors',
    'get_resource_monitors_output',
]

@pulumi.output_type
class GetResourceMonitorsResult:
    """
    A collection of values returned by getResourceMonitors.
    """
    def __init__(__self__, id=None, like=None, resource_monitors=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if like and not isinstance(like, str):
            raise TypeError("Expected argument 'like' to be a str")
        pulumi.set(__self__, "like", like)
        if resource_monitors and not isinstance(resource_monitors, list):
            raise TypeError("Expected argument 'resource_monitors' to be a list")
        pulumi.set(__self__, "resource_monitors", resource_monitors)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def like(self) -> Optional[str]:
        """
        Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        """
        return pulumi.get(self, "like")

    @property
    @pulumi.getter(name="resourceMonitors")
    def resource_monitors(self) -> Sequence['outputs.GetResourceMonitorsResourceMonitorResult']:
        """
        Holds the aggregated output of all resource monitor details queries.
        """
        return pulumi.get(self, "resource_monitors")


class AwaitableGetResourceMonitorsResult(GetResourceMonitorsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetResourceMonitorsResult(
            id=self.id,
            like=self.like,
            resource_monitors=self.resource_monitors)


def get_resource_monitors(like: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetResourceMonitorsResult:
    """
    !> **V1 release candidate** This data source was reworked and is a release candidate for the V1. We do not expect significant changes in it before the V1. We will welcome any feedback and adjust the data source if needed. Any errors reported will be resolved with a higher priority. We encourage checking this data source out before the V1 release. Please follow the migration guide to use it.

    Datasource used to get details of filtered resource monitors. Filtering is aligned with the current possibilities for [SHOW RESOURCE MONITORS](https://docs.snowflake.com/en/sql-reference/sql/show-resource-monitors) query (`like` is supported). The results of SHOW is encapsulated in show_output collection.


    :param str like: Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
    """
    __args__ = dict()
    __args__['like'] = like
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('snowflake:index/getResourceMonitors:getResourceMonitors', __args__, opts=opts, typ=GetResourceMonitorsResult).value

    return AwaitableGetResourceMonitorsResult(
        id=pulumi.get(__ret__, 'id'),
        like=pulumi.get(__ret__, 'like'),
        resource_monitors=pulumi.get(__ret__, 'resource_monitors'))
def get_resource_monitors_output(like: Optional[pulumi.Input[Optional[str]]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetResourceMonitorsResult]:
    """
    !> **V1 release candidate** This data source was reworked and is a release candidate for the V1. We do not expect significant changes in it before the V1. We will welcome any feedback and adjust the data source if needed. Any errors reported will be resolved with a higher priority. We encourage checking this data source out before the V1 release. Please follow the migration guide to use it.

    Datasource used to get details of filtered resource monitors. Filtering is aligned with the current possibilities for [SHOW RESOURCE MONITORS](https://docs.snowflake.com/en/sql-reference/sql/show-resource-monitors) query (`like` is supported). The results of SHOW is encapsulated in show_output collection.


    :param str like: Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
    """
    __args__ = dict()
    __args__['like'] = like
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('snowflake:index/getResourceMonitors:getResourceMonitors', __args__, opts=opts, typ=GetResourceMonitorsResult)
    return __ret__.apply(lambda __response__: GetResourceMonitorsResult(
        id=pulumi.get(__response__, 'id'),
        like=pulumi.get(__response__, 'like'),
        resource_monitors=pulumi.get(__response__, 'resource_monitors')))
