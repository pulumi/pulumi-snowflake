// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDynamicTables(args?: GetDynamicTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetDynamicTablesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getDynamicTables:getDynamicTables", {
        "in": args.in,
        "like": args.like,
        "limit": args.limit,
        "startsWith": args.startsWith,
    }, opts);
}

/**
 * A collection of arguments for invoking getDynamicTables.
 */
export interface GetDynamicTablesArgs {
    /**
     * IN clause to filter the list of dynamic tables.
     */
    in?: inputs.GetDynamicTablesIn;
    /**
     * LIKE clause to filter the list of dynamic tables.
     */
    like?: inputs.GetDynamicTablesLike;
    /**
     * Optionally limits the maximum number of rows returned, while also enabling “pagination” of the results. Note that the actual number of rows returned might be less than the specified limit (e.g. the number of existing objects is less than the specified limit).
     */
    limit?: inputs.GetDynamicTablesLimit;
    /**
     * Optionally filters the command output based on the characters that appear at the beginning of the object name. The string is case-sensitive.
     */
    startsWith?: string;
}

/**
 * A collection of values returned by getDynamicTables.
 */
export interface GetDynamicTablesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * IN clause to filter the list of dynamic tables.
     */
    readonly in?: outputs.GetDynamicTablesIn;
    /**
     * LIKE clause to filter the list of dynamic tables.
     */
    readonly like?: outputs.GetDynamicTablesLike;
    /**
     * Optionally limits the maximum number of rows returned, while also enabling “pagination” of the results. Note that the actual number of rows returned might be less than the specified limit (e.g. the number of existing objects is less than the specified limit).
     */
    readonly limit?: outputs.GetDynamicTablesLimit;
    /**
     * The list of dynamic tables.
     */
    readonly records: outputs.GetDynamicTablesRecord[];
    /**
     * Optionally filters the command output based on the characters that appear at the beginning of the object name. The string is case-sensitive.
     */
    readonly startsWith?: string;
}
export function getDynamicTablesOutput(args?: GetDynamicTablesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDynamicTablesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("snowflake:index/getDynamicTables:getDynamicTables", {
        "in": args.in,
        "like": args.like,
        "limit": args.limit,
        "startsWith": args.startsWith,
    }, opts);
}

/**
 * A collection of arguments for invoking getDynamicTables.
 */
export interface GetDynamicTablesOutputArgs {
    /**
     * IN clause to filter the list of dynamic tables.
     */
    in?: pulumi.Input<inputs.GetDynamicTablesInArgs>;
    /**
     * LIKE clause to filter the list of dynamic tables.
     */
    like?: pulumi.Input<inputs.GetDynamicTablesLikeArgs>;
    /**
     * Optionally limits the maximum number of rows returned, while also enabling “pagination” of the results. Note that the actual number of rows returned might be less than the specified limit (e.g. the number of existing objects is less than the specified limit).
     */
    limit?: pulumi.Input<inputs.GetDynamicTablesLimitArgs>;
    /**
     * Optionally filters the command output based on the characters that appear at the beginning of the object name. The string is case-sensitive.
     */
    startsWith?: pulumi.Input<string>;
}
