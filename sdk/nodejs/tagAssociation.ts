// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ~> **Note** Due to technical limitations of Terraform SDK, `object_identifiers` are not set during import state. Please run `terraform refresh` after importing to get this field populated.
 *
 * ```sh
 * $ pulumi import snowflake:index/tagAssociation:TagAssociation example '"TAG_DATABASE"."TAG_SCHEMA"."TAG_NAME"|TAG_VALUE|OBJECT_TYPE'
 * ```
 */
export class TagAssociation extends pulumi.CustomResource {
    /**
     * Get an existing TagAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TagAssociationState, opts?: pulumi.CustomResourceOptions): TagAssociation {
        return new TagAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/tagAssociation:TagAssociation';

    /**
     * Returns true if the given object is an instance of TagAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TagAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TagAssociation.__pulumiType;
    }

    /**
     * Specifies the object identifiers for the tag association.
     */
    declare public readonly objectIdentifiers: pulumi.Output<string[]>;
    /**
     * Specifies the type of object to add a tag. Allowed object types: `ACCOUNT` | `APPLICATION` | `APPLICATION PACKAGE` | `COMPUTE POOL` | `DATABASE` | `FAILOVER GROUP` | `INTEGRATION` | `NETWORK POLICY` | `REPLICATION GROUP` | `ROLE` | `SHARE` | `USER` | `WAREHOUSE` | `DATABASE ROLE` | `SCHEMA` | `ALERT` | `SNOWFLAKE.CORE.BUDGET` | `SNOWFLAKE.ML.CLASSIFICATION` | `EXTERNAL FUNCTION` | `EXTERNAL TABLE` | `FUNCTION` | `IMAGE REPOSITORY` | `GIT REPOSITORY` | `ICEBERG TABLE` | `MATERIALIZED VIEW` | `PIPE` | `MASKING POLICY` | `PASSWORD POLICY` | `ROW ACCESS POLICY` | `SESSION POLICY` | `PRIVACY POLICY` | `PROCEDURE` | `SERVICE` | `STAGE` | `STREAM` | `TABLE` | `TASK` | `VIEW` | `COLUMN` | `EVENT TABLE`.
     */
    declare public readonly objectType: pulumi.Output<string>;
    /**
     * (Default: `true`) If true, skips validation of the tag association.
     */
    declare public readonly skipValidation: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the identifier for the tag.
     */
    declare public readonly tagId: pulumi.Output<string>;
    /**
     * Specifies the value of the tag, (e.g. 'finance' or 'engineering')
     */
    declare public readonly tagValue: pulumi.Output<string>;

    /**
     * Create a TagAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TagAssociationArgs | TagAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TagAssociationState | undefined;
            resourceInputs["objectIdentifiers"] = state?.objectIdentifiers;
            resourceInputs["objectType"] = state?.objectType;
            resourceInputs["skipValidation"] = state?.skipValidation;
            resourceInputs["tagId"] = state?.tagId;
            resourceInputs["tagValue"] = state?.tagValue;
        } else {
            const args = argsOrState as TagAssociationArgs | undefined;
            if (args?.objectIdentifiers === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectIdentifiers'");
            }
            if (args?.objectType === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectType'");
            }
            if (args?.tagId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tagId'");
            }
            if (args?.tagValue === undefined && !opts.urn) {
                throw new Error("Missing required property 'tagValue'");
            }
            resourceInputs["objectIdentifiers"] = args?.objectIdentifiers;
            resourceInputs["objectType"] = args?.objectType;
            resourceInputs["skipValidation"] = args?.skipValidation;
            resourceInputs["tagId"] = args?.tagId;
            resourceInputs["tagValue"] = args?.tagValue;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TagAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TagAssociation resources.
 */
export interface TagAssociationState {
    /**
     * Specifies the object identifiers for the tag association.
     */
    objectIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the type of object to add a tag. Allowed object types: `ACCOUNT` | `APPLICATION` | `APPLICATION PACKAGE` | `COMPUTE POOL` | `DATABASE` | `FAILOVER GROUP` | `INTEGRATION` | `NETWORK POLICY` | `REPLICATION GROUP` | `ROLE` | `SHARE` | `USER` | `WAREHOUSE` | `DATABASE ROLE` | `SCHEMA` | `ALERT` | `SNOWFLAKE.CORE.BUDGET` | `SNOWFLAKE.ML.CLASSIFICATION` | `EXTERNAL FUNCTION` | `EXTERNAL TABLE` | `FUNCTION` | `IMAGE REPOSITORY` | `GIT REPOSITORY` | `ICEBERG TABLE` | `MATERIALIZED VIEW` | `PIPE` | `MASKING POLICY` | `PASSWORD POLICY` | `ROW ACCESS POLICY` | `SESSION POLICY` | `PRIVACY POLICY` | `PROCEDURE` | `SERVICE` | `STAGE` | `STREAM` | `TABLE` | `TASK` | `VIEW` | `COLUMN` | `EVENT TABLE`.
     */
    objectType?: pulumi.Input<string>;
    /**
     * (Default: `true`) If true, skips validation of the tag association.
     */
    skipValidation?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the tag.
     */
    tagId?: pulumi.Input<string>;
    /**
     * Specifies the value of the tag, (e.g. 'finance' or 'engineering')
     */
    tagValue?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TagAssociation resource.
 */
export interface TagAssociationArgs {
    /**
     * Specifies the object identifiers for the tag association.
     */
    objectIdentifiers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the type of object to add a tag. Allowed object types: `ACCOUNT` | `APPLICATION` | `APPLICATION PACKAGE` | `COMPUTE POOL` | `DATABASE` | `FAILOVER GROUP` | `INTEGRATION` | `NETWORK POLICY` | `REPLICATION GROUP` | `ROLE` | `SHARE` | `USER` | `WAREHOUSE` | `DATABASE ROLE` | `SCHEMA` | `ALERT` | `SNOWFLAKE.CORE.BUDGET` | `SNOWFLAKE.ML.CLASSIFICATION` | `EXTERNAL FUNCTION` | `EXTERNAL TABLE` | `FUNCTION` | `IMAGE REPOSITORY` | `GIT REPOSITORY` | `ICEBERG TABLE` | `MATERIALIZED VIEW` | `PIPE` | `MASKING POLICY` | `PASSWORD POLICY` | `ROW ACCESS POLICY` | `SESSION POLICY` | `PRIVACY POLICY` | `PROCEDURE` | `SERVICE` | `STAGE` | `STREAM` | `TABLE` | `TASK` | `VIEW` | `COLUMN` | `EVENT TABLE`.
     */
    objectType: pulumi.Input<string>;
    /**
     * (Default: `true`) If true, skips validation of the tag association.
     */
    skipValidation?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the tag.
     */
    tagId: pulumi.Input<string>;
    /**
     * Specifies the value of the tag, (e.g. 'finance' or 'engineering')
     */
    tagValue: pulumi.Input<string>;
}
