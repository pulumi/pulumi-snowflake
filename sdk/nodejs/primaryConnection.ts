// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 * $ pulumi import snowflake:index/primaryConnection:PrimaryConnection example '"<primary_connection_name>"'
 * ```
 */
export class PrimaryConnection extends pulumi.CustomResource {
    /**
     * Get an existing PrimaryConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrimaryConnectionState, opts?: pulumi.CustomResourceOptions): PrimaryConnection {
        return new PrimaryConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/primaryConnection:PrimaryConnection';

    /**
     * Returns true if the given object is an instance of PrimaryConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrimaryConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrimaryConnection.__pulumiType;
    }

    /**
     * Specifies a comment for the connection.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * Enables failover for given connection to provided accounts. Specifies a list of accounts in your organization where a secondary connection for this primary connection can be promoted to serve as the primary connection. Include your organization name for each account in the list. For more information about this resource, see docs.
     */
    declare public readonly enableFailoverToAccounts: pulumi.Output<string[] | undefined>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    declare public /*out*/ readonly fullyQualifiedName: pulumi.Output<string>;
    declare public /*out*/ readonly isPrimary: pulumi.Output<boolean>;
    /**
     * String that specifies the identifier (i.e. name) for the connection. Must start with an alphabetic character and may only contain letters, decimal digits (0-9), and underscores (*). For a primary connection, the name must be unique across connection names and account names in the organization.  Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Outputs the result of `SHOW CONNECTIONS` for the given connection.
     */
    declare public /*out*/ readonly showOutputs: pulumi.Output<outputs.PrimaryConnectionShowOutput[]>;

    /**
     * Create a PrimaryConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PrimaryConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrimaryConnectionArgs | PrimaryConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrimaryConnectionState | undefined;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["enableFailoverToAccounts"] = state?.enableFailoverToAccounts;
            resourceInputs["fullyQualifiedName"] = state?.fullyQualifiedName;
            resourceInputs["isPrimary"] = state?.isPrimary;
            resourceInputs["name"] = state?.name;
            resourceInputs["showOutputs"] = state?.showOutputs;
        } else {
            const args = argsOrState as PrimaryConnectionArgs | undefined;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["enableFailoverToAccounts"] = args?.enableFailoverToAccounts;
            resourceInputs["name"] = args?.name;
            resourceInputs["fullyQualifiedName"] = undefined /*out*/;
            resourceInputs["isPrimary"] = undefined /*out*/;
            resourceInputs["showOutputs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrimaryConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrimaryConnection resources.
 */
export interface PrimaryConnectionState {
    /**
     * Specifies a comment for the connection.
     */
    comment?: pulumi.Input<string>;
    /**
     * Enables failover for given connection to provided accounts. Specifies a list of accounts in your organization where a secondary connection for this primary connection can be promoted to serve as the primary connection. Include your organization name for each account in the list. For more information about this resource, see docs.
     */
    enableFailoverToAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    fullyQualifiedName?: pulumi.Input<string>;
    isPrimary?: pulumi.Input<boolean>;
    /**
     * String that specifies the identifier (i.e. name) for the connection. Must start with an alphabetic character and may only contain letters, decimal digits (0-9), and underscores (*). For a primary connection, the name must be unique across connection names and account names in the organization.  Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    name?: pulumi.Input<string>;
    /**
     * Outputs the result of `SHOW CONNECTIONS` for the given connection.
     */
    showOutputs?: pulumi.Input<pulumi.Input<inputs.PrimaryConnectionShowOutput>[]>;
}

/**
 * The set of arguments for constructing a PrimaryConnection resource.
 */
export interface PrimaryConnectionArgs {
    /**
     * Specifies a comment for the connection.
     */
    comment?: pulumi.Input<string>;
    /**
     * Enables failover for given connection to provided accounts. Specifies a list of accounts in your organization where a secondary connection for this primary connection can be promoted to serve as the primary connection. Include your organization name for each account in the list. For more information about this resource, see docs.
     */
    enableFailoverToAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * String that specifies the identifier (i.e. name) for the connection. Must start with an alphabetic character and may only contain letters, decimal digits (0-9), and underscores (*). For a primary connection, the name must be unique across connection names and account names in the organization.  Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    name?: pulumi.Input<string>;
}
