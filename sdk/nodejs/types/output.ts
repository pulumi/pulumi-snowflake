// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertAlertSchedule {
    /**
     * Specifies the cron expression for the alert. The cron expression must be in the following format: "minute hour day-of-month month day-of-week". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     */
    cron?: outputs.AlertAlertScheduleCron;
    /**
     * Specifies the interval in minutes for the alert schedule. The interval must be greater than 0 and less than 1440 (24 hours).
     */
    interval?: number;
}

export interface AlertAlertScheduleCron {
    /**
     * Specifies the cron expression for the alert. The cron expression must be in the following format: "minute hour day-of-month month day-of-week". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     */
    expression: string;
    /**
     * Specifies the time zone for alert refresh.
     */
    timeZone: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutput {
    authTypes: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputAuthType[];
    comments: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputComment[];
    enableds: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputEnabled[];
    oauthAccessTokenValidities: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAccessTokenValidity[];
    oauthAllowedScopes: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAllowedScope[];
    oauthAuthorizationEndpoints: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientAuthMethods: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthClientAuthMethod[];
    oauthClientIds: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthClientId[];
    oauthGrants: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthGrant[];
    oauthRefreshTokenValidities: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthTokenEndpoint[];
    parentIntegrations: outputs.ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputParentIntegration[];
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputAuthType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAccessTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAllowedScope {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthClientAuthMethod {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthGrant {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantDescribeOutputParentIntegration {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithAuthorizationCodeGrantShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutput {
    authTypes: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputAuthType[];
    comments: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputComment[];
    enableds: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputEnabled[];
    oauthAccessTokenValidities: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAccessTokenValidity[];
    oauthAllowedScopes: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAllowedScope[];
    oauthAuthorizationEndpoints: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientAuthMethods: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthClientAuthMethod[];
    oauthClientIds: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthClientId[];
    oauthGrants: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthGrant[];
    oauthRefreshTokenValidities: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthTokenEndpoint[];
    parentIntegrations: outputs.ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputParentIntegration[];
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputAuthType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAccessTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAllowedScope {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthClientAuthMethod {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthGrant {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsDescribeOutputParentIntegration {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithClientCredentialsShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutput {
    authTypes: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputAuthType[];
    comments: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputComment[];
    enableds: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputEnabled[];
    oauthAccessTokenValidities: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAccessTokenValidity[];
    oauthAllowedScopes: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAllowedScope[];
    oauthAuthorizationEndpoints: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientAuthMethods: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthClientAuthMethod[];
    oauthClientIds: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthClientId[];
    oauthGrants: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthGrant[];
    oauthRefreshTokenValidities: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthTokenEndpoint[];
    parentIntegrations: outputs.ApiAuthenticationIntegrationWithJwtBearerDescribeOutputParentIntegration[];
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputAuthType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAccessTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAllowedScope {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthClientAuthMethod {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthGrant {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerDescribeOutputParentIntegration {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ApiAuthenticationIntegrationWithJwtBearerShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface DatabaseOldReplicationConfiguration {
    accounts: string[];
    ignoreEditionCheck?: boolean;
}

export interface DatabaseReplication {
    /**
     * Entry to enable replication and optionally failover for a given account identifier.
     */
    enableToAccounts: outputs.DatabaseReplicationEnableToAccount[];
    /**
     * Allows replicating data to accounts on lower editions in either of the following scenarios: 1. The primary database is in a Business Critical (or higher) account but one or more of the accounts approved for replication are on lower editions. Business Critical Edition is intended for Snowflake accounts with extremely sensitive data. 2. The primary database is in a Business Critical (or higher) account and a signed business associate agreement is in place to store PHI data in the account per HIPAA and HITRUST regulations, but no such agreement is in place for one or more of the accounts approved for replication, regardless if they are Business Critical (or higher) accounts. Both scenarios are prohibited by default in an effort to help prevent account administrators for Business Critical (or higher) accounts from inadvertently replicating sensitive data to accounts on lower editions.
     */
    ignoreEditionCheck?: boolean;
}

export interface DatabaseReplicationEnableToAccount {
    /**
     * Specifies account identifier for which replication should be enabled. The account identifiers should be in the form of `"<organization_name>"."<account_name>"`.
     */
    accountIdentifier: string;
    /**
     * Specifies if failover should be enabled for the specified account identifier
     */
    withFailover?: boolean;
}

export interface DynamicTableTargetLag {
    /**
     * Specifies whether the target lag time is downstream.
     */
    downstream?: boolean;
    /**
     * Specifies the maximum target lag time for the dynamic table.
     */
    maximumDuration?: string;
}

export interface ExternalFunctionArg {
    /**
     * Argument name
     */
    name: string;
    /**
     * Argument type, e.g. VARCHAR
     */
    type: string;
}

export interface ExternalFunctionHeader {
    /**
     * Header name
     */
    name: string;
    /**
     * Header value
     */
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutput {
    comments: outputs.ExternalOauthIntegrationDescribeOutputComment[];
    enableds: outputs.ExternalOauthIntegrationDescribeOutputEnabled[];
    externalOauthAllowedRolesLists: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthAllowedRolesList[];
    externalOauthAnyRoleModes: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthAnyRoleMode[];
    externalOauthAudienceLists: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthAudienceList[];
    externalOauthBlockedRolesLists: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthBlockedRolesList[];
    externalOauthIssuers: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthIssuer[];
    externalOauthJwsKeysUrls: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthJwsKeysUrl[];
    externalOauthRsaPublicKey2s: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthRsaPublicKey2[];
    externalOauthRsaPublicKeys: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthRsaPublicKey[];
    externalOauthScopeDelimiters: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthScopeDelimiter[];
    externalOauthSnowflakeUserMappingAttributes: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthSnowflakeUserMappingAttribute[];
    externalOauthTokenUserMappingClaims: outputs.ExternalOauthIntegrationDescribeOutputExternalOauthTokenUserMappingClaim[];
}

export interface ExternalOauthIntegrationDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthAllowedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthAnyRoleMode {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthAudienceList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthBlockedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthIssuer {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthJwsKeysUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthRsaPublicKey {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthRsaPublicKey2 {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthScopeDelimiter {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthSnowflakeUserMappingAttribute {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationDescribeOutputExternalOauthTokenUserMappingClaim {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ExternalOauthIntegrationRelatedParameter {
    externalOauthAddPrivilegedRolesToBlockedLists: outputs.ExternalOauthIntegrationRelatedParameterExternalOauthAddPrivilegedRolesToBlockedList[];
}

export interface ExternalOauthIntegrationRelatedParameterExternalOauthAddPrivilegedRolesToBlockedList {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface ExternalOauthIntegrationShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface ExternalTableColumn {
    /**
     * String that specifies the expression for the column. When queried, the column returns results derived from this expression.
     */
    as: string;
    /**
     * Column name
     */
    name: string;
    /**
     * Column type, e.g. VARIANT
     */
    type: string;
}

export interface ExternalTableTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface FailoverGroupFromReplica {
    /**
     * Identifier for the primary failover group in the source account.
     */
    name: string;
    /**
     * Name of your Snowflake organization.
     */
    organizationName: string;
    /**
     * Source account from which you are enabling replication and failover of the specified objects.
     */
    sourceAccountName: string;
}

export interface FailoverGroupReplicationSchedule {
    /**
     * Specifies the cron expression for the replication schedule. The cron expression must be in the following format: "minute hour day-of-month month day-of-week". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     */
    cron?: outputs.FailoverGroupReplicationScheduleCron;
    /**
     * Specifies the interval in minutes for the replication schedule. The interval must be greater than 0 and less than 1440 (24 hours).
     */
    interval?: number;
}

export interface FailoverGroupReplicationScheduleCron {
    /**
     * Specifies the cron expression for the replication schedule. The cron expression must be in the following format: "minute hour day-of-month month day-of-week". The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     */
    expression: string;
    /**
     * Specifies the time zone for secondary group refresh.
     */
    timeZone: string;
}

export interface FunctionArgument {
    /**
     * The argument name
     */
    name: string;
    /**
     * The argument type
     */
    type: string;
}

export interface GetAccountsAccount {
    /**
     * System-assigned identifier of the acccount.
     */
    accountLocator: string;
    /**
     * Legacy Snowflake access URL syntax that includes the regionName and account_locator.
     */
    accountLocatorUrl: string;
    /**
     * User-defined name that identifies an account within the organization.
     */
    accountName: string;
    /**
     * Preferred Snowflake access URL that includes the values of organizationName and account_name.
     */
    accountUrl: string;
    /**
     * Comment for the account.
     */
    comment: string;
    /**
     * Name of the consumption billing entity.
     */
    consumptionBillingEntityName: string;
    /**
     * Date and time when the account was created.
     */
    createdOn: string;
    /**
     * Snowflake Edition of the account.
     */
    edition: string;
    /**
     * Indicates whether the ORGADMIN role is enabled in an account. If TRUE, the role is enabled.
     */
    isOrgAdmin: boolean;
    /**
     * Indicates how many managed accounts have been created by the account.
     */
    managedAccounts: number;
    /**
     * Name of the marketplace consumer billing entity.
     */
    marketplaceConsumerBillingEntityName: string;
    /**
     * Name of the marketplace provider billing entity.
     */
    marketplaceProviderBillingEntityName: string;
    /**
     * The previous account URL for a given account.
     */
    oldAccountUrl: string;
    /**
     * Name of the organization.
     */
    organizationName: string;
    /**
     * Region group where the account is located. Note: this column is only visible to organizations that span multiple Region Groups.
     */
    regionGroup: string;
    /**
     * Snowflake Region where the account is located. A Snowflake Region is a distinct location within a cloud platform region that is isolated from other Snowflake Regions. A Snowflake Region can be either multi-tenant or single-tenant (for a Virtual Private Snowflake account).
     */
    snowflakeRegion: string;
}

export interface GetAlertsAlert {
    /**
     * The text of the SQL statement that should be executed when the alert is triggered.
     */
    action: string;
    /**
     * Comment for the alert.
     */
    comment: string;
    /**
     * The text of the SQL statement that serves as the condition when the alert should be triggered.
     */
    condition: string;
    /**
     * Database in which the alert is stored.
     */
    databaseName: string;
    /**
     * Name of the alert.
     */
    name: string;
    /**
     * Role that owns the alert (i.e. has the OWNERSHIP privilege on the alert)
     */
    owner: string;
    /**
     * Schema in which the alert is stored.
     */
    schemaName: string;
}

export interface GetCortexSearchServicesCortexSearchService {
    /**
     * Comment for the cortex search service.
     */
    comment: string;
    /**
     * Date and time when the cortex search service was created.
     */
    createdOn: string;
    /**
     * Database in which the cortex search service is stored.
     */
    databaseName: string;
    /**
     * Name of the cortex search service.
     */
    name: string;
    /**
     * Schema in which the cortex search service is stored.
     */
    schemaName: string;
}

export interface GetCortexSearchServicesIn {
    /**
     * Returns records for the entire account.
     */
    account?: boolean;
    /**
     * Returns records for the current database in use or for a specified database (db_name).
     */
    database?: string;
    /**
     * Returns records for the current schema in use or a specified schema (schema_name).
     */
    schema?: string;
}

export interface GetCortexSearchServicesLimit {
    /**
     * Specifies a **case-sensitive** pattern that is used to match object name. After the first match, the limit on the number of rows will be applied.
     */
    from?: string;
    /**
     * The maximum number of rows to return.
     */
    rows: number;
}

export interface GetDatabaseRolesDatabaseRole {
    /**
     * The comment on the role
     */
    comment: string;
    /**
     * Identifier for the role.
     */
    name: string;
    /**
     * The owner of the role
     */
    owner: string;
}

export interface GetDatabasesDatabase {
    /**
     * Holds the output of DESCRIBE DATABASE.
     */
    describeOutputs: outputs.GetDatabasesDatabaseDescribeOutput[];
    /**
     * Holds the output of SHOW PARAMETERS FOR DATABASE.
     */
    parameters: outputs.GetDatabasesDatabaseParameter[];
    /**
     * Holds the output of SHOW DATABASES.
     */
    showOutputs: outputs.GetDatabasesDatabaseShowOutput[];
}

export interface GetDatabasesDatabaseDescribeOutput {
    createdOn: string;
    kind: string;
    name: string;
}

export interface GetDatabasesDatabaseParameter {
    catalogs: outputs.GetDatabasesDatabaseParameterCatalog[];
    dataRetentionTimeInDays: outputs.GetDatabasesDatabaseParameterDataRetentionTimeInDay[];
    defaultDdlCollations: outputs.GetDatabasesDatabaseParameterDefaultDdlCollation[];
    enableConsoleOutputs: outputs.GetDatabasesDatabaseParameterEnableConsoleOutput[];
    externalVolumes: outputs.GetDatabasesDatabaseParameterExternalVolume[];
    logLevels: outputs.GetDatabasesDatabaseParameterLogLevel[];
    maxDataExtensionTimeInDays: outputs.GetDatabasesDatabaseParameterMaxDataExtensionTimeInDay[];
    quotedIdentifiersIgnoreCases: outputs.GetDatabasesDatabaseParameterQuotedIdentifiersIgnoreCase[];
    replaceInvalidCharacters: outputs.GetDatabasesDatabaseParameterReplaceInvalidCharacter[];
    storageSerializationPolicies: outputs.GetDatabasesDatabaseParameterStorageSerializationPolicy[];
    suspendTaskAfterNumFailures: outputs.GetDatabasesDatabaseParameterSuspendTaskAfterNumFailure[];
    taskAutoRetryAttempts: outputs.GetDatabasesDatabaseParameterTaskAutoRetryAttempt[];
    traceLevels: outputs.GetDatabasesDatabaseParameterTraceLevel[];
    userTaskManagedInitialWarehouseSizes: outputs.GetDatabasesDatabaseParameterUserTaskManagedInitialWarehouseSize[];
    userTaskMinimumTriggerIntervalInSeconds: outputs.GetDatabasesDatabaseParameterUserTaskMinimumTriggerIntervalInSecond[];
    userTaskTimeoutMs: outputs.GetDatabasesDatabaseParameterUserTaskTimeoutM[];
}

export interface GetDatabasesDatabaseParameterCatalog {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterDataRetentionTimeInDay {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterDefaultDdlCollation {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterEnableConsoleOutput {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterExternalVolume {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterLogLevel {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterMaxDataExtensionTimeInDay {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterQuotedIdentifiersIgnoreCase {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterReplaceInvalidCharacter {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterStorageSerializationPolicy {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterSuspendTaskAfterNumFailure {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterTaskAutoRetryAttempt {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterTraceLevel {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterUserTaskManagedInitialWarehouseSize {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterUserTaskMinimumTriggerIntervalInSecond {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseParameterUserTaskTimeoutM {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetDatabasesDatabaseShowOutput {
    comment: string;
    createdOn: string;
    droppedOn: string;
    isCurrent: boolean;
    isDefault: boolean;
    kind: string;
    name: string;
    options: string;
    origin: string;
    owner: string;
    ownerRoleType: string;
    resourceGroup: string;
    retentionTime: number;
    transient: boolean;
}

export interface GetDatabasesLimit {
    /**
     * Specifies a **case-sensitive** pattern that is used to match object name. After the first match, the limit on the number of rows will be applied.
     */
    from?: string;
    /**
     * The maximum number of rows to return.
     */
    rows: number;
}

export interface GetDynamicTablesIn {
    /**
     * Returns records for the entire account.
     */
    account?: boolean;
    /**
     * Returns records for the current database in use or for a specified database (db_name).
     */
    database?: string;
    /**
     * Returns records for the current schema in use or a specified schema (schema_name).
     */
    schema?: string;
}

export interface GetDynamicTablesLike {
    /**
     * Filters the command output by object name. The filter uses case-insensitive pattern matching with support for SQL wildcard characters (% and _).
     */
    pattern: string;
}

export interface GetDynamicTablesLimit {
    /**
     * The optional FROM 'name_string' subclause effectively serves as a “cursor” for the results. This enables fetching the specified number of rows following the first row whose object name matches the specified string
     */
    from?: string;
    /**
     * Specifies the maximum number of rows to return.
     */
    rows?: number;
}

export interface GetDynamicTablesRecord {
    /**
     * Whether auto-clustering is enabled on the dynamic table. Not currently supported for dynamic tables.
     */
    automaticClustering: boolean;
    /**
     * Number of bytes that will be scanned if the entire dynamic table is scanned in a query.
     */
    bytes: number;
    /**
     * The clustering key for the dynamic table.
     */
    clusterBy: string;
    /**
     * Comment for the dynamic table.
     */
    comment: string;
    /**
     * Date and time when the dynamic table was created.
     */
    createdOn: string;
    /**
     * Timestamp of the data in the base object(s) that is included in the dynamic table.
     */
    dataTimestamp: string;
    /**
     * Database in which the dynamic table is stored.
     */
    databaseName: string;
    /**
     * TRUE if the dynamic table has been cloned, else FALSE.
     */
    isClone: boolean;
    /**
     * TRUE if the dynamic table is a replica. else FALSE.
     */
    isReplica: boolean;
    /**
     * Timestamp of last suspension.
     */
    lastSuspendedOn: string;
    /**
     * Name of the dynamic table.
     */
    name: string;
    /**
     * Role that owns the dynamic table.
     */
    owner: string;
    /**
     * INCREMENTAL if the dynamic table will use incremental refreshes, or FULL if it will recompute the whole table on every refresh.
     */
    refreshMode: string;
    /**
     * Explanation for why FULL refresh mode was chosen. NULL if refresh mode is not FULL.
     */
    refreshModeReason: string;
    /**
     * Number of rows in the table.
     */
    rows: number;
    /**
     * Displays RUNNING for dynamic tables that are actively scheduling refreshes and SUSPENDED for suspended dynamic tables.
     */
    schedulingState: string;
    /**
     * Schema in which the dynamic table is stored.
     */
    schemaName: string;
    /**
     * The maximum duration that the dynamic table’s content should lag behind real time.
     */
    targetLag: string;
    /**
     * The text of the command that created this dynamic table (e.g. CREATE DYNAMIC TABLE ...).
     */
    text: string;
    /**
     * Warehouse that provides the required resources to perform the incremental refreshes.
     */
    warehouse: string;
}

export interface GetExternalFunctionsExternalFunction {
    comment: string;
    database: string;
    language: string;
    name: string;
    schema: string;
}

export interface GetExternalTablesExternalTable {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetFailoverGroupsFailoverGroup {
    /**
     * Account locator in a region.
     */
    accountLocator: string;
    /**
     * Name of the account.
     */
    accountName: string;
    /**
     * List of accounts enabled for replication and failover.
     */
    allowedAccounts: any[];
    /**
     * A list of integration types that are enabled for replication.
     */
    allowedIntegrationTypes: any[];
    /**
     * Comment string.
     */
    comment: string;
    /**
     * Date and time failover group was created.
     */
    createdOn: string;
    /**
     * Indicates whether the failover group is the primary group.
     */
    isPrimary: boolean;
    /**
     * Date and time of the next scheduled refresh.
     */
    nextScheduledRefresh: string;
    /**
     * List of specified object types enabled for replication and failover.
     */
    objectTypes: any[];
    /**
     * Name of your Snowflake organization.
     */
    organizationName: string;
    /**
     * Name of the role with the OWNERSHIP privilege on the failover group. NULL if the failover group is in a different region.
     */
    owner: string;
    /**
     * Name of the primary group.
     */
    primary: string;
    /**
     * Region group where the account is located. Note: this column is only visible to organizations that span multiple Region Groups.
     */
    regionGroup: string;
    /**
     * Scheduled interval for refresh; NULL if no replication schedule is set.
     */
    replicationSchedule: string;
    /**
     * Current state of scheduled refresh. Valid values are started or suspended. NULL if no replication schedule is set.
     */
    secondaryState: string;
    /**
     * Snowflake Region where the account is located. A Snowflake Region is a distinct location within a cloud platform region that is isolated from other Snowflake Regions. A Snowflake Region can be either multi-tenant or single-tenant (for a Virtual Private Snowflake account).
     */
    snowflakeRegion: string;
    /**
     * Type of group. Valid value is FAILOVER.
     */
    type: string;
}

export interface GetFileFormatsFileFormat {
    comment: string;
    database: string;
    formatType: string;
    name: string;
    schema: string;
}

export interface GetFunctionsFunction {
    argumentTypes: string[];
    comment: string;
    database: string;
    name: string;
    returnType: string;
    schema: string;
}

export interface GetGrantsFutureGrantsIn {
    /**
     * Lists all privileges on new (i.e. future) objects of a specified type in the database granted to a role.
     */
    database?: string;
    /**
     * Lists all privileges on new (i.e. future) objects of a specified type in the schema granted to a role. Schema must be a fully qualified name ("&lt;db*name&gt;"."&lt;schema*name&gt;").
     */
    schema?: string;
}

export interface GetGrantsFutureGrantsTo {
    /**
     * Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the account role.
     */
    accountRole?: string;
    /**
     * Lists all privileges on new (i.e. future) objects granted to the database role. Must be a fully qualified name ("&lt;db*name&gt;"."&lt;database*role_name&gt;").
     */
    databaseRole?: string;
}

export interface GetGrantsGrant {
    /**
     * The date and time the grant was created.
     */
    createdOn: string;
    /**
     * Whether the grantee can grant the privilege to others.
     */
    grantOption: boolean;
    /**
     * The role that granted the privilege.
     */
    grantedBy: string;
    /**
     * The object on which the privilege was granted.
     */
    grantedOn: string;
    /**
     * The role to which the privilege was granted.
     */
    grantedTo: string;
    /**
     * The name of the role to which the privilege was granted.
     */
    granteeName: string;
    /**
     * The name of the object on which the privilege was granted.
     */
    name: string;
    /**
     * The privilege granted.
     */
    privilege: string;
}

export interface GetGrantsGrantsOf {
    /**
     * Lists all users and roles to which the account role has been granted.
     */
    accountRole?: string;
    /**
     * Lists all the users and roles to which the application role has been granted. Must be a fully qualified name ("&lt;db*name&gt;"."&lt;database*role_name&gt;").
     */
    applicationRole?: string;
    /**
     * Lists all users and roles to which the database role has been granted. Must be a fully qualified name ("&lt;db*name&gt;"."&lt;database*role_name&gt;").
     */
    databaseRole?: string;
    /**
     * Lists all the accounts for the share and indicates the accounts that are using the share.
     */
    share?: string;
}

export interface GetGrantsGrantsOn {
    /**
     * Object hierarchy to list privileges on. The only valid value is: ACCOUNT. Setting this attribute lists all the account-level (i.e. global) privileges that have been granted to roles.
     */
    account?: boolean;
    /**
     * Name of object to list privileges on.
     */
    objectName?: string;
    /**
     * Type of object to list privileges on.
     */
    objectType?: string;
}

export interface GetGrantsGrantsTo {
    /**
     * Lists all privileges and roles granted to the role.
     */
    accountRole?: string;
    /**
     * Lists all the privileges and roles granted to the application.
     */
    application?: string;
    /**
     * Lists all the privileges and roles granted to the application role. Must be a fully qualified name ("&lt;app*name&gt;"."&lt;app*role_name&gt;").
     */
    applicationRole?: string;
    /**
     * Lists all privileges and roles granted to the database role. Must be a fully qualified name ("&lt;db*name&gt;"."&lt;database*role_name&gt;").
     */
    databaseRole?: string;
    /**
     * Lists all the privileges granted to the share.
     */
    share?: outputs.GetGrantsGrantsToShare;
    /**
     * Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed.
     */
    user?: string;
}

export interface GetGrantsGrantsToShare {
    /**
     * Lists all of the privileges and roles granted to the specified share.
     */
    shareName: string;
}

export interface GetMaskingPoliciesMaskingPolicy {
    comment: string;
    database: string;
    kind: string;
    name: string;
    schema: string;
}

export interface GetMaterializedViewsMaterializedView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetParametersParameter {
    /**
     * The default value of the parameter
     */
    default: string;
    /**
     * The description of the parameter
     */
    description: string;
    /**
     * The name of the parameter
     */
    key: string;
    /**
     * The level of the parameter
     */
    level: string;
    /**
     * The value of the parameter
     */
    value: string;
}

export interface GetPipesPipe {
    comment: string;
    database: string;
    integration: string;
    name: string;
    schema: string;
}

export interface GetProceduresProcedure {
    argumentTypes: string[];
    comment: string;
    database: string;
    name: string;
    returnType: string;
    schema: string;
}

export interface GetResourceMonitorsResourceMonitor {
    comment: string;
    creditQuota: string;
    frequency: string;
    name: string;
}

export interface GetRolesRole {
    /**
     * The comment on the role
     */
    comment: string;
    /**
     * Identifier for the role.
     */
    name: string;
    /**
     * The owner of the role
     */
    owner: string;
}

export interface GetRowAccessPoliciesRowAccessPolicy {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetSchemasSchema {
    comment: string;
    database: string;
    name: string;
}

export interface GetSecurityIntegrationsSecurityIntegration {
    /**
     * Holds the output of DESCRIBE SECURITY INTEGRATIONS.
     */
    describeOutputs: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutput[];
    /**
     * Holds the output of SHOW SECURITY INTEGRATIONS.
     */
    showOutputs: outputs.GetSecurityIntegrationsSecurityIntegrationShowOutput[];
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutput {
    allowedEmailPatterns: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputAllowedEmailPattern[];
    allowedUserDomains: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputAllowedUserDomain[];
    authTypes: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputAuthType[];
    blockedRolesLists: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputBlockedRolesList[];
    comments: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputComment[];
    enableds: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputEnabled[];
    externalOauthAllowedRolesLists: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAllowedRolesList[];
    externalOauthAnyRoleModes: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAnyRoleMode[];
    externalOauthAudienceLists: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAudienceList[];
    externalOauthBlockedRolesLists: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthBlockedRolesList[];
    externalOauthIssuers: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthIssuer[];
    externalOauthJwsKeysUrls: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthJwsKeysUrl[];
    externalOauthRsaPublicKey2s: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthRsaPublicKey2[];
    externalOauthRsaPublicKeys: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthRsaPublicKey[];
    externalOauthScopeDelimiters: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthScopeDelimiter[];
    externalOauthSnowflakeUserMappingAttributes: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthSnowflakeUserMappingAttribute[];
    externalOauthTokenUserMappingClaims: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthTokenUserMappingClaim[];
    networkPolicies: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputNetworkPolicy[];
    oauthAccessTokenValidities: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAccessTokenValidity[];
    oauthAllowNonTlsRedirectUris: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowNonTlsRedirectUri[];
    oauthAllowedAuthorizationEndpoints: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedAuthorizationEndpoint[];
    oauthAllowedScopes: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedScope[];
    oauthAllowedTokenEndpoints: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedTokenEndpoint[];
    oauthAuthorizationEndpoints: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientAuthMethods: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientAuthMethod[];
    oauthClientIds: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientId[];
    oauthClientRsaPublicKey2Fps: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientRsaPublicKey2Fp[];
    oauthClientRsaPublicKeyFps: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientRsaPublicKeyFp[];
    oauthClientTypes: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientType[];
    oauthEnforcePkces: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthEnforcePkce[];
    oauthGrants: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthGrant[];
    oauthIssueRefreshTokens: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthIssueRefreshToken[];
    oauthRedirectUris: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthRedirectUri[];
    oauthRefreshTokenValidities: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthTokenEndpoint[];
    oauthUseSecondaryRoles: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthUseSecondaryRole[];
    parentIntegrations: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputParentIntegration[];
    preAuthorizedRolesLists: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputPreAuthorizedRolesList[];
    runAsRoles: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputRunAsRole[];
    saml2DigestMethodsUseds: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2DigestMethodsUsed[];
    saml2EnableSpInitiateds: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2EnableSpInitiated[];
    saml2ForceAuthns: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2ForceAuthn[];
    saml2Issuers: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2Issuer[];
    saml2PostLogoutRedirectUrls: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2PostLogoutRedirectUrl[];
    saml2Providers: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2Provider[];
    saml2RequestedNameidFormats: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2RequestedNameidFormat[];
    saml2SignRequests: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SignRequest[];
    saml2SignatureMethodsUseds: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SignatureMethodsUsed[];
    saml2SnowflakeAcsUrls: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeAcsUrl[];
    saml2SnowflakeIssuerUrls: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeIssuerUrl[];
    saml2SnowflakeMetadatas: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeMetadata[];
    saml2SnowflakeX509Certs: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeX509Cert[];
    saml2SpInitiatedLoginPageLabels: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SpInitiatedLoginPageLabel[];
    saml2SsoUrls: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SsoUrl[];
    saml2X509Certs: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2X509Cert[];
    syncPasswords: outputs.GetSecurityIntegrationsSecurityIntegrationDescribeOutputSyncPassword[];
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputAllowedEmailPattern {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputAllowedUserDomain {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputAuthType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputBlockedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAllowedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAnyRoleMode {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthAudienceList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthBlockedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthIssuer {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthJwsKeysUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthRsaPublicKey {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthRsaPublicKey2 {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthScopeDelimiter {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthSnowflakeUserMappingAttribute {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputExternalOauthTokenUserMappingClaim {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputNetworkPolicy {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAccessTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowNonTlsRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedScope {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAllowedTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientAuthMethod {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientRsaPublicKey2Fp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientRsaPublicKeyFp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthClientType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthEnforcePkce {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthGrant {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthIssueRefreshToken {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputOauthUseSecondaryRole {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputParentIntegration {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputPreAuthorizedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputRunAsRole {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2DigestMethodsUsed {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2EnableSpInitiated {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2ForceAuthn {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2Issuer {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2PostLogoutRedirectUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2Provider {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2RequestedNameidFormat {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SignRequest {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SignatureMethodsUsed {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeAcsUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeIssuerUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeMetadata {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SnowflakeX509Cert {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SpInitiatedLoginPageLabel {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2SsoUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSaml2X509Cert {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationDescribeOutputSyncPassword {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface GetSecurityIntegrationsSecurityIntegrationShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface GetSequencesSequence {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetSharesShare {
    /**
     * The comment on the share.
     */
    comment: string;
    /**
     * The kind of the share.
     */
    kind: string;
    /**
     * Identifier for the share.
     */
    name: string;
    /**
     * The owner of the share.
     */
    owner: string;
    /**
     * For the OUTBOUND share, list of consumers.
     */
    tos: any[];
}

export interface GetStagesStage {
    comment: string;
    database: string;
    name: string;
    schema: string;
    storageIntegration: string;
}

export interface GetStorageIntegrationsStorageIntegration {
    comment: string;
    enabled: boolean;
    name: string;
    type: string;
}

export interface GetStreamsStream {
    comment: string;
    database: string;
    name: string;
    schema: string;
    table: string;
}

export interface GetTablesTable {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetTasksTask {
    comment: string;
    database: string;
    name: string;
    schema: string;
    warehouse: string;
}

export interface GetUsersUser {
    comment: string;
    defaultNamespace: string;
    defaultRole: string;
    defaultSecondaryRoles: string[];
    defaultWarehouse: string;
    disabled: boolean;
    displayName: string;
    email: string;
    firstName: string;
    hasRsaPublicKey: boolean;
    lastName: string;
    loginName: string;
    name: string;
}

export interface GetViewsView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetWarehousesWarehouse {
    /**
     * Holds the output of DESCRIBE WAREHOUSE.
     */
    describeOutputs: outputs.GetWarehousesWarehouseDescribeOutput[];
    /**
     * Holds the output of SHOW PARAMETERS FOR WAREHOUSE.
     */
    parameters: outputs.GetWarehousesWarehouseParameter[];
    /**
     * Holds the output of SHOW WAREHOUSES.
     */
    showOutputs: outputs.GetWarehousesWarehouseShowOutput[];
}

export interface GetWarehousesWarehouseDescribeOutput {
    createdOn: string;
    kind: string;
    name: string;
}

export interface GetWarehousesWarehouseParameter {
    maxConcurrencyLevels: outputs.GetWarehousesWarehouseParameterMaxConcurrencyLevel[];
    statementQueuedTimeoutInSeconds: outputs.GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond[];
    statementTimeoutInSeconds: outputs.GetWarehousesWarehouseParameterStatementTimeoutInSecond[];
}

export interface GetWarehousesWarehouseParameterMaxConcurrencyLevel {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetWarehousesWarehouseParameterStatementTimeoutInSecond {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface GetWarehousesWarehouseShowOutput {
    autoResume: boolean;
    autoSuspend: number;
    available: number;
    comment: string;
    createdOn: string;
    enableQueryAcceleration: boolean;
    isCurrent: boolean;
    isDefault: boolean;
    maxClusterCount: number;
    minClusterCount: number;
    name: string;
    other: number;
    owner: string;
    ownerRoleType: string;
    provisioning: number;
    queryAccelerationMaxScaleFactor: number;
    queued: number;
    quiescing: number;
    resourceMonitor: string;
    resumedOn: string;
    running: number;
    scalingPolicy: string;
    size: string;
    startedClusters: number;
    state: string;
    type: string;
    updatedOn: string;
}

export interface GrantOwnershipOn {
    /**
     * Configures the privilege to be granted on all objects in either a database or schema.
     */
    all?: outputs.GrantOwnershipOnAll;
    /**
     * Configures the privilege to be granted on all objects in either a database or schema.
     */
    future?: outputs.GrantOwnershipOnFuture;
    /**
     * Specifies the identifier for the object on which you are transferring ownership.
     */
    objectName?: string;
    /**
     * Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
     */
    objectType?: string;
}

export interface GrantOwnershipOnAll {
    /**
     * The fully qualified name of the database.
     */
    inDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    inSchema?: string;
    /**
     * Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
     */
    objectTypePlural: string;
}

export interface GrantOwnershipOnFuture {
    /**
     * The fully qualified name of the database.
     */
    inDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    inSchema?: string;
    /**
     * Specifies the type of object in plural form on which you are transferring ownership. Available values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | COMPUTE POOLS | DATA METRIC FUNCTIONS | DATABASES | DATABASE ROLES | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | EXTERNAL VOLUMES | FAILOVER GROUPS | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | IMAGE REPOSITORIES | INTEGRATIONS | MATERIALIZED VIEWS | NETWORK POLICIES | NETWORK RULES | PACKAGES POLICIES | PIPES | PROCEDURES | MASKING POLICIES | PASSWORD POLICIES | PROJECTION POLICIES | REPLICATION GROUPS | ROLES | ROW ACCESS POLICIES | SCHEMAS | SESSION POLICIES | SECRETS | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | USERS | VIEWS | WAREHOUSES. For more information head over to [Snowflake documentation](https://docs.snowflake.com/en/sql-reference/sql/grant-ownership#required-parameters).
     */
    objectTypePlural: string;
}

export interface GrantPrivilegesToAccountRoleOnAccountObject {
    /**
     * The fully qualified name of the object on which privileges will be granted.
     */
    objectName: string;
    /**
     * The object type of the account object on which privileges will be granted. Valid values are: USER | RESOURCE MONITOR | WAREHOUSE | COMPUTE POOL | DATABASE | INTEGRATION | FAILOVER GROUP | REPLICATION GROUP | EXTERNAL VOLUME
     */
    objectType: string;
}

export interface GrantPrivilegesToAccountRoleOnSchema {
    /**
     * The fully qualified name of the database.
     */
    allSchemasInDatabase?: string;
    /**
     * The fully qualified name of the database.
     */
    futureSchemasInDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    schemaName?: string;
}

export interface GrantPrivilegesToAccountRoleOnSchemaObject {
    /**
     * Configures the privilege to be granted on all objects in either a database or schema.
     */
    all?: outputs.GrantPrivilegesToAccountRoleOnSchemaObjectAll;
    /**
     * Configures the privilege to be granted on future objects in either a database or schema.
     */
    future?: outputs.GrantPrivilegesToAccountRoleOnSchemaObjectFuture;
    /**
     * The fully qualified name of the object on which privileges will be granted.
     */
    objectName?: string;
    /**
     * The object type of the schema object on which privileges will be granted. Valid values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | CORTEX SEARCH SERVICE | DATA METRIC FUNCTION | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | IMAGE REPOSITORY | ICEBERG TABLE | MASKING POLICY | MATERIALIZED VIEW | MODEL | NETWORK RULE | PACKAGES POLICY | PASSWORD POLICY | PIPE | PROCEDURE | PROJECTION POLICY | ROW ACCESS POLICY | SECRET | SERVICE | SESSION POLICY | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | VIEW | STREAMLIT
     */
    objectType?: string;
}

export interface GrantPrivilegesToAccountRoleOnSchemaObjectAll {
    inDatabase?: string;
    inSchema?: string;
    /**
     * The plural object type of the schema object on which privileges will be granted. Valid values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | CORTEX SEARCH SERVICES | DATA METRIC FUNCTIONS | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | IMAGE REPOSITORIES | ICEBERG TABLES | MASKING POLICIES | MATERIALIZED VIEWS | MODELS | NETWORK RULES | PACKAGES POLICIES | PASSWORD POLICIES | PIPES | PROCEDURES | PROJECTION POLICIES | ROW ACCESS POLICIES | SECRETS | SERVICES | SESSION POLICIES | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | VIEWS | STREAMLITS.
     */
    objectTypePlural: string;
}

export interface GrantPrivilegesToAccountRoleOnSchemaObjectFuture {
    inDatabase?: string;
    inSchema?: string;
    /**
     * The plural object type of the schema object on which privileges will be granted. Valid values are: ALERTS | AUTHENTICATION POLICIES | DATA METRIC FUNCTIONS | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | MATERIALIZED VIEWS | MODELS | NETWORK RULES | PASSWORD POLICIES | PIPES | PROCEDURES | SECRETS | SERVICES | SEQUENCES | STAGES | STREAMS | TABLES | TASKS | VIEWS.
     */
    objectTypePlural: string;
}

export interface GrantPrivilegesToDatabaseRoleOnSchema {
    /**
     * The fully qualified name of the database.
     */
    allSchemasInDatabase?: string;
    /**
     * The fully qualified name of the database.
     */
    futureSchemasInDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    schemaName?: string;
}

export interface GrantPrivilegesToDatabaseRoleOnSchemaObject {
    /**
     * Configures the privilege to be granted on all objects in either a database or schema.
     */
    all?: outputs.GrantPrivilegesToDatabaseRoleOnSchemaObjectAll;
    /**
     * Configures the privilege to be granted on future objects in either a database or schema.
     */
    future?: outputs.GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture;
    /**
     * The fully qualified name of the object on which privileges will be granted.
     */
    objectName?: string;
    /**
     * The object type of the schema object on which privileges will be granted. Valid values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | CORTEX SEARCH SERVICE | DATA METRIC FUNCTION | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | IMAGE REPOSITORY | ICEBERG TABLE | MASKING POLICY | MATERIALIZED VIEW | MODEL | NETWORK RULE | PACKAGES POLICY | PASSWORD POLICY | PIPE | PROCEDURE | PROJECTION POLICY | ROW ACCESS POLICY | SECRET | SERVICE | SESSION POLICY | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | VIEW | STREAMLIT
     */
    objectType?: string;
}

export interface GrantPrivilegesToDatabaseRoleOnSchemaObjectAll {
    /**
     * The fully qualified name of the database.
     */
    inDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    inSchema?: string;
    /**
     * The plural object type of the schema object on which privileges will be granted. Valid values are: AGGREGATION POLICIES | ALERTS | AUTHENTICATION POLICIES | CORTEX SEARCH SERVICES | DATA METRIC FUNCTIONS | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | IMAGE REPOSITORIES | ICEBERG TABLES | MASKING POLICIES | MATERIALIZED VIEWS | MODELS | NETWORK RULES | PACKAGES POLICIES | PASSWORD POLICIES | PIPES | PROCEDURES | PROJECTION POLICIES | ROW ACCESS POLICIES | SECRETS | SERVICES | SESSION POLICIES | SEQUENCES | STAGES | STREAMS | TABLES | TAGS | TASKS | VIEWS | STREAMLITS.
     */
    objectTypePlural: string;
}

export interface GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture {
    /**
     * The fully qualified name of the database.
     */
    inDatabase?: string;
    /**
     * The fully qualified name of the schema.
     */
    inSchema?: string;
    /**
     * The plural object type of the schema object on which privileges will be granted. Valid values are: ALERTS | AUTHENTICATION POLICIES | DATA METRIC FUNCTIONS | DYNAMIC TABLES | EVENT TABLES | EXTERNAL TABLES | FILE FORMATS | FUNCTIONS | GIT REPOSITORIES | HYBRID TABLES | ICEBERG TABLES | MATERIALIZED VIEWS | MODELS | NETWORK RULES | PASSWORD POLICIES | PIPES | PROCEDURES | SECRETS | SERVICES | SEQUENCES | STAGES | STREAMS | TABLES | TASKS | VIEWS.
     */
    objectTypePlural: string;
}

export interface MaskingPolicySignature {
    columns: outputs.MaskingPolicySignatureColumn[];
}

export interface MaskingPolicySignatureColumn {
    /**
     * Specifies the column name to mask.
     */
    name: string;
    /**
     * Specifies the column type to mask.
     */
    type: string;
}

export interface MaterializedViewTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutput {
    blockedRolesLists: outputs.OauthIntegrationForCustomClientsDescribeOutputBlockedRolesList[];
    comments: outputs.OauthIntegrationForCustomClientsDescribeOutputComment[];
    enableds: outputs.OauthIntegrationForCustomClientsDescribeOutputEnabled[];
    networkPolicies: outputs.OauthIntegrationForCustomClientsDescribeOutputNetworkPolicy[];
    oauthAllowNonTlsRedirectUris: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthAllowNonTlsRedirectUri[];
    oauthAllowedAuthorizationEndpoints: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthAllowedAuthorizationEndpoint[];
    oauthAllowedTokenEndpoints: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthAllowedTokenEndpoint[];
    oauthAuthorizationEndpoints: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientIds: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthClientId[];
    oauthClientRsaPublicKey2Fps: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthClientRsaPublicKey2Fp[];
    oauthClientRsaPublicKeyFps: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthClientRsaPublicKeyFp[];
    oauthClientTypes: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthClientType[];
    oauthEnforcePkces: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthEnforcePkce[];
    oauthIssueRefreshTokens: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthIssueRefreshToken[];
    oauthRedirectUris: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthRedirectUri[];
    oauthRefreshTokenValidities: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthTokenEndpoint[];
    oauthUseSecondaryRoles: outputs.OauthIntegrationForCustomClientsDescribeOutputOauthUseSecondaryRole[];
    preAuthorizedRolesLists: outputs.OauthIntegrationForCustomClientsDescribeOutputPreAuthorizedRolesList[];
}

export interface OauthIntegrationForCustomClientsDescribeOutputBlockedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputNetworkPolicy {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthAllowNonTlsRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthAllowedAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthAllowedTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthClientRsaPublicKey2Fp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthClientRsaPublicKeyFp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthClientType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthEnforcePkce {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthIssueRefreshToken {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputOauthUseSecondaryRole {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsDescribeOutputPreAuthorizedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForCustomClientsShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutput {
    blockedRolesLists: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputBlockedRolesList[];
    comments: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputComment[];
    enableds: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputEnabled[];
    networkPolicies: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputNetworkPolicy[];
    oauthAllowNonTlsRedirectUris: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowNonTlsRedirectUri[];
    oauthAllowedAuthorizationEndpoints: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowedAuthorizationEndpoint[];
    oauthAllowedTokenEndpoints: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowedTokenEndpoint[];
    oauthAuthorizationEndpoints: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthAuthorizationEndpoint[];
    oauthClientIds: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientId[];
    oauthClientRsaPublicKey2Fps: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientRsaPublicKey2Fp[];
    oauthClientRsaPublicKeyFps: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientRsaPublicKeyFp[];
    oauthClientTypes: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientType[];
    oauthEnforcePkces: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthEnforcePkce[];
    oauthIssueRefreshTokens: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthIssueRefreshToken[];
    oauthRedirectUris: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthRedirectUri[];
    oauthRefreshTokenValidities: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthRefreshTokenValidity[];
    oauthTokenEndpoints: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthTokenEndpoint[];
    oauthUseSecondaryRoles: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputOauthUseSecondaryRole[];
    preAuthorizedRolesLists: outputs.OauthIntegrationForPartnerApplicationsDescribeOutputPreAuthorizedRolesList[];
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputBlockedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputNetworkPolicy {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowNonTlsRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowedAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthAllowedTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthAuthorizationEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientId {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientRsaPublicKey2Fp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientRsaPublicKeyFp {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthClientType {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthEnforcePkce {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthIssueRefreshToken {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthRedirectUri {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthRefreshTokenValidity {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthTokenEndpoint {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputOauthUseSecondaryRole {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsDescribeOutputPreAuthorizedRolesList {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface OauthIntegrationForPartnerApplicationsShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface ObjectParameterObjectIdentifier {
    /**
     * Name of the database that the object was created in.
     */
    database?: string;
    /**
     * Name of the object to set the parameter for.
     */
    name: string;
    /**
     * Name of the schema that the object was created in.
     */
    schema?: string;
}

export interface ProcedureArgument {
    /**
     * The argument name
     */
    name: string;
    /**
     * The argument type
     */
    type: string;
}

export interface RoleTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface Saml2IntegrationDescribeOutput {
    allowedEmailPatterns: outputs.Saml2IntegrationDescribeOutputAllowedEmailPattern[];
    allowedUserDomains: outputs.Saml2IntegrationDescribeOutputAllowedUserDomain[];
    comments: outputs.Saml2IntegrationDescribeOutputComment[];
    saml2DigestMethodsUseds: outputs.Saml2IntegrationDescribeOutputSaml2DigestMethodsUsed[];
    saml2EnableSpInitiateds: outputs.Saml2IntegrationDescribeOutputSaml2EnableSpInitiated[];
    saml2ForceAuthns: outputs.Saml2IntegrationDescribeOutputSaml2ForceAuthn[];
    saml2Issuers: outputs.Saml2IntegrationDescribeOutputSaml2Issuer[];
    saml2PostLogoutRedirectUrls: outputs.Saml2IntegrationDescribeOutputSaml2PostLogoutRedirectUrl[];
    saml2Providers: outputs.Saml2IntegrationDescribeOutputSaml2Provider[];
    saml2RequestedNameidFormats: outputs.Saml2IntegrationDescribeOutputSaml2RequestedNameidFormat[];
    saml2SignRequests: outputs.Saml2IntegrationDescribeOutputSaml2SignRequest[];
    saml2SignatureMethodsUseds: outputs.Saml2IntegrationDescribeOutputSaml2SignatureMethodsUsed[];
    saml2SnowflakeAcsUrls: outputs.Saml2IntegrationDescribeOutputSaml2SnowflakeAcsUrl[];
    saml2SnowflakeIssuerUrls: outputs.Saml2IntegrationDescribeOutputSaml2SnowflakeIssuerUrl[];
    saml2SnowflakeMetadatas: outputs.Saml2IntegrationDescribeOutputSaml2SnowflakeMetadata[];
    saml2SnowflakeX509Certs: outputs.Saml2IntegrationDescribeOutputSaml2SnowflakeX509Cert[];
    saml2SpInitiatedLoginPageLabels: outputs.Saml2IntegrationDescribeOutputSaml2SpInitiatedLoginPageLabel[];
    saml2SsoUrls: outputs.Saml2IntegrationDescribeOutputSaml2SsoUrl[];
    saml2X509Certs: outputs.Saml2IntegrationDescribeOutputSaml2X509Cert[];
}

export interface Saml2IntegrationDescribeOutputAllowedEmailPattern {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputAllowedUserDomain {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2DigestMethodsUsed {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2EnableSpInitiated {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2ForceAuthn {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2Issuer {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2PostLogoutRedirectUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2Provider {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2RequestedNameidFormat {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SignRequest {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SignatureMethodsUsed {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SnowflakeAcsUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SnowflakeIssuerUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SnowflakeMetadata {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SnowflakeX509Cert {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SpInitiatedLoginPageLabel {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2SsoUrl {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationDescribeOutputSaml2X509Cert {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface Saml2IntegrationShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface SchemaTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface ScimIntegrationDescribeOutput {
    comments: outputs.ScimIntegrationDescribeOutputComment[];
    enableds: outputs.ScimIntegrationDescribeOutputEnabled[];
    networkPolicies: outputs.ScimIntegrationDescribeOutputNetworkPolicy[];
    runAsRoles: outputs.ScimIntegrationDescribeOutputRunAsRole[];
    syncPasswords: outputs.ScimIntegrationDescribeOutputSyncPassword[];
}

export interface ScimIntegrationDescribeOutputComment {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ScimIntegrationDescribeOutputEnabled {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ScimIntegrationDescribeOutputNetworkPolicy {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ScimIntegrationDescribeOutputRunAsRole {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ScimIntegrationDescribeOutputSyncPassword {
    default: string;
    name: string;
    type: string;
    value: string;
}

export interface ScimIntegrationShowOutput {
    category: string;
    comment: string;
    createdOn: string;
    enabled: boolean;
    integrationType: string;
    name: string;
}

export interface StageTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface TableColumn {
    /**
     * Column collation, e.g. utf8
     */
    collate?: string;
    /**
     * Column comment
     */
    comment?: string;
    /**
     * Defines the column default value; note due to limitations of Snowflake's ALTER TABLE ADD/MODIFY COLUMN updates to default will not be applied
     */
    default?: outputs.TableColumnDefault;
    /**
     * Defines the identity start/step values for a column. **Note** Identity/default are mutually exclusive.
     */
    identity?: outputs.TableColumnIdentity;
    /**
     * Masking policy to apply on column. It has to be a fully qualified name.
     */
    maskingPolicy?: string;
    /**
     * Column name
     */
    name: string;
    /**
     * Whether this column can contain null values. **Note**: Depending on your Snowflake version, the default value will not suffice if this column is used in a primary key constraint.
     */
    nullable?: boolean;
    /**
     * Record of schema evolution.
     */
    schemaEvolutionRecord: string;
    /**
     * Column type, e.g. VARIANT
     */
    type: string;
}

export interface TableColumnDefault {
    /**
     * The default constant value for the column
     */
    constant?: string;
    /**
     * The default expression value for the column
     */
    expression?: string;
    /**
     * The default sequence to use for the column
     */
    sequence?: string;
}

export interface TableColumnIdentity {
    /**
     * The number to start incrementing at.
     */
    startNum?: number;
    /**
     * Step size to increment by.
     */
    stepNum?: number;
}

export interface TableConstraintForeignKeyProperties {
    /**
     * The match type for the foreign key. Not applicable for primary/unique keys
     */
    match?: string;
    /**
     * Specifies the action performed when the primary/unique key for the foreign key is deleted. Not applicable for primary/unique keys
     */
    onDelete?: string;
    /**
     * Specifies the action performed when the primary/unique key for the foreign key is updated. Not applicable for primary/unique keys
     */
    onUpdate?: string;
    /**
     * The table and columns that the foreign key references.
     */
    references: outputs.TableConstraintForeignKeyPropertiesReferences;
}

export interface TableConstraintForeignKeyPropertiesReferences {
    /**
     * Columns to use in foreign key reference
     */
    columns: string[];
    /**
     * Name of constraint
     */
    tableId: string;
}

export interface TablePrimaryKey {
    /**
     * Columns to use in primary key
     */
    keys: string[];
    /**
     * Name of constraint
     */
    name?: string;
}

export interface TableTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface TagAssociationObjectIdentifier {
    /**
     * Name of the database that the object was created in.
     */
    database?: string;
    /**
     * Name of the object to associate the tag with.
     */
    name: string;
    /**
     * Name of the schema that the object was created in.
     */
    schema?: string;
}

export interface ViewTag {
    /**
     * Name of the database that the tag was created in.
     */
    database?: string;
    /**
     * Tag name, e.g. department.
     */
    name: string;
    /**
     * Name of the schema that the tag was created in.
     */
    schema?: string;
    /**
     * Tag value, e.g. marketing_info.
     */
    value: string;
}

export interface WarehouseParameter {
    maxConcurrencyLevels: outputs.WarehouseParameterMaxConcurrencyLevel[];
    statementQueuedTimeoutInSeconds: outputs.WarehouseParameterStatementQueuedTimeoutInSecond[];
    statementTimeoutInSeconds: outputs.WarehouseParameterStatementTimeoutInSecond[];
}

export interface WarehouseParameterMaxConcurrencyLevel {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface WarehouseParameterStatementQueuedTimeoutInSecond {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface WarehouseParameterStatementTimeoutInSecond {
    default: string;
    description: string;
    key: string;
    level: string;
    value: string;
}

export interface WarehouseShowOutput {
    autoResume: boolean;
    autoSuspend: number;
    available: number;
    comment: string;
    createdOn: string;
    enableQueryAcceleration: boolean;
    isCurrent: boolean;
    isDefault: boolean;
    maxClusterCount: number;
    minClusterCount: number;
    name: string;
    other: number;
    owner: string;
    ownerRoleType: string;
    provisioning: number;
    queryAccelerationMaxScaleFactor: number;
    queued: number;
    quiescing: number;
    resourceMonitor: string;
    resumedOn: string;
    running: number;
    scalingPolicy: string;
    size: string;
    startedClusters: number;
    state: string;
    type: string;
    updatedOn: string;
}

export namespace config {
    export interface TokenAccessor {
        /**
         * The client ID for the OAuth provider when using a refresh token to renew access token. Can also be sourced from the `SNOWFLAKE_TOKEN_ACCESSOR_CLIENT_ID` environment variable.
         */
        clientId: string;
        /**
         * The client secret for the OAuth provider when using a refresh token to renew access token. Can also be sourced from the `SNOWFLAKE_TOKEN_ACCESSOR_CLIENT_SECRET` environment variable.
         */
        clientSecret: string;
        /**
         * The redirect URI for the OAuth provider when using a refresh token to renew access token. Can also be sourced from the `SNOWFLAKE_TOKEN_ACCESSOR_REDIRECT_URI` environment variable.
         */
        redirectUri: string;
        /**
         * The refresh token for the OAuth provider when using a refresh token to renew access token. Can also be sourced from the `SNOWFLAKE_TOKEN_ACCESSOR_REFRESH_TOKEN` environment variable.
         */
        refreshToken: string;
        /**
         * The token endpoint for the OAuth provider e.g. https://{yourDomain}/oauth/token when using a refresh token to renew access token. Can also be sourced from the `SNOWFLAKE_TOKEN_ACCESSOR_TOKEN_ENDPOINT` environment variable.
         */
        tokenEndpoint: string;
    }

}
