// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface DatabaseReplicationConfiguration {
    accounts: string[];
    ignoreEditionCheck?: boolean;
}

export interface DatabaseTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface ExternalFunctionArg {
    name: string;
    type: string;
}

export interface ExternalFunctionHeader {
    name: string;
    value: string;
}

export interface ExternalTableColumn {
    as: string;
    name: string;
    type: string;
}

export interface ExternalTableTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface FunctionArgument {
    name: string;
    type: string;
}

export interface FunctionGrantArgument {
    name: string;
    type: string;
}

export interface GetDatabasesDatabase {
    comment: string;
    createdOn: string;
    isCurrent: boolean;
    isDefault: boolean;
    name: string;
    options: string;
    origin: string;
    owner: string;
    replicationConfigurations: outputs.GetDatabasesDatabaseReplicationConfiguration[];
    retentionTime: number;
}

export interface GetDatabasesDatabaseReplicationConfiguration {
    accounts: string[];
    ignoreEditionCheck: boolean;
}

export interface GetExternalFunctionsExternalFunction {
    comment: string;
    database: string;
    language: string;
    name: string;
    schema: string;
}

export interface GetExternalTablesExternalTable {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetFileFormatsFileFormat {
    comment: string;
    database: string;
    formatType: string;
    name: string;
    schema: string;
}

export interface GetFunctionsFunction {
    argumentTypes: string[];
    comment: string;
    database: string;
    name: string;
    returnType: string;
    schema: string;
}

export interface GetMaskingPoliciesMaskingPolicy {
    comment: string;
    database: string;
    kind: string;
    name: string;
    schema: string;
}

export interface GetMaterializedViewsMaterializedView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetPipesPipe {
    comment: string;
    database: string;
    integration: string;
    name: string;
    schema: string;
}

export interface GetProceduresProcedure {
    argumentTypes: string[];
    comment: string;
    database: string;
    name: string;
    returnType: string;
    schema: string;
}

export interface GetResourceMonitorsResourceMonitor {
    comment: string;
    creditQuota: string;
    frequency: string;
    name: string;
}

export interface GetRowAccessPoliciesRowAccessPolicy {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetSchemasSchema {
    comment: string;
    database: string;
    name: string;
}

export interface GetSequencesSequence {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetStagesStage {
    comment: string;
    database: string;
    name: string;
    schema: string;
    storageIntegration: string;
}

export interface GetStorageIntegrationsStorageIntegration {
    comment: string;
    enabled: boolean;
    name: string;
    type: string;
}

export interface GetStreamsStream {
    comment: string;
    database: string;
    name: string;
    schema: string;
    table: string;
}

export interface GetTablesTable {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetTasksTask {
    comment: string;
    database: string;
    name: string;
    schema: string;
    warehouse: string;
}

export interface GetUsersUser {
    comment: string;
    defaultNamespace: string;
    defaultRole: string;
    defaultWarehouse: string;
    disabled: boolean;
    displayName: string;
    email: string;
    firstName: string;
    hasRsaPublicKey: boolean;
    lastName: string;
    loginName: string;
    name: string;
}

export interface GetViewsView {
    comment: string;
    database: string;
    name: string;
    schema: string;
}

export interface GetWarehousesWarehouse {
    comment: string;
    name: string;
    scalingPolicy: string;
    size: string;
    state: string;
    type: string;
}

export interface MaterializedViewTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface ProcedureArgument {
    name: string;
    type: string;
}

export interface ProcedureGrantArgument {
    name: string;
    type: string;
}

export interface RoleTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface SchemaTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface StageTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface TableColumn {
    comment?: string;
    default?: outputs.TableColumnDefault;
    identity?: outputs.TableColumnIdentity;
    name: string;
    nullable?: boolean;
    type: string;
}

export interface TableColumnDefault {
    constant?: string;
    expression?: string;
    sequence?: string;
}

export interface TableColumnIdentity {
    startNum?: number;
    stepNum?: number;
}

export interface TablePrimaryKey {
    keys: string[];
    name?: string;
}

export interface TableTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface UserTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface ViewTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}

export interface WarehouseTag {
    database?: string;
    name: string;
    schema?: string;
    value: string;
}
