// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as snowflake from "@pulumi/snowflake";
 *
 * const sessionParameter = new snowflake.SessionParameter("sessionParameter", {
 *     key: "AUTOCOMMIT",
 *     value: "false",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import snowflake:index/sessionParameter:SessionParameter s <parameter_name>
 * ```
 */
export class SessionParameter extends pulumi.CustomResource {
    /**
     * Get an existing SessionParameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SessionParameterState, opts?: pulumi.CustomResourceOptions): SessionParameter {
        return new SessionParameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/sessionParameter:SessionParameter';

    /**
     * Returns true if the given object is an instance of SessionParameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SessionParameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SessionParameter.__pulumiType;
    }

    /**
     * Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a SessionParameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SessionParameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SessionParameterArgs | SessionParameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SessionParameterState | undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as SessionParameterArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SessionParameter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SessionParameter resources.
 */
export interface SessionParameterState {
    /**
     * Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
     */
    key?: pulumi.Input<string>;
    /**
     * Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SessionParameter resource.
 */
export interface SessionParameterArgs {
    /**
     * Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
     */
    key: pulumi.Input<string>;
    /**
     * Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    value: pulumi.Input<string>;
}
