// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getSchemas(args?: GetSchemasArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getSchemas:getSchemas", {
        "in": args.in,
        "like": args.like,
        "limit": args.limit,
        "startsWith": args.startsWith,
        "withDescribe": args.withDescribe,
        "withParameters": args.withParameters,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasArgs {
    in?: inputs.GetSchemasIn;
    like?: string;
    limit?: inputs.GetSchemasLimit;
    startsWith?: string;
    withDescribe?: boolean;
    withParameters?: boolean;
}

/**
 * A collection of values returned by getSchemas.
 */
export interface GetSchemasResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly in?: outputs.GetSchemasIn;
    readonly like?: string;
    readonly limit?: outputs.GetSchemasLimit;
    readonly schemas: outputs.GetSchemasSchema[];
    readonly startsWith?: string;
    readonly withDescribe?: boolean;
    readonly withParameters?: boolean;
}
export function getSchemasOutput(args?: GetSchemasOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("snowflake:index/getSchemas:getSchemas", {
        "in": args.in,
        "like": args.like,
        "limit": args.limit,
        "startsWith": args.startsWith,
        "withDescribe": args.withDescribe,
        "withParameters": args.withParameters,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemas.
 */
export interface GetSchemasOutputArgs {
    in?: pulumi.Input<inputs.GetSchemasInArgs>;
    like?: pulumi.Input<string>;
    limit?: pulumi.Input<inputs.GetSchemasLimitArgs>;
    startsWith?: pulumi.Input<string>;
    withDescribe?: pulumi.Input<boolean>;
    withParameters?: pulumi.Input<boolean>;
}
