// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 * $ pulumi import snowflake:index/computePool:ComputePool example '"<compute_pool_name>"'
 * ```
 */
export class ComputePool extends pulumi.CustomResource {
    /**
     * Get an existing ComputePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ComputePoolState, opts?: pulumi.CustomResourceOptions): ComputePool {
        return new ComputePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/computePool:ComputePool';

    /**
     * Returns true if the given object is an instance of ComputePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ComputePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ComputePool.__pulumiType;
    }

    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to automatically resume a compute pool when a service or job is submitted to it. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
     */
    declare public readonly autoResume: pulumi.Output<string | undefined>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Number of seconds of inactivity after which you want Snowflake to automatically suspend the compute pool.
     */
    declare public readonly autoSuspendSecs: pulumi.Output<number | undefined>;
    /**
     * Specifies a comment for the compute pool.
     */
    declare public readonly comment: pulumi.Output<string | undefined>;
    /**
     * Outputs the result of `DESCRIBE COMPUTE POOL` for the given compute pool.
     */
    declare public /*out*/ readonly describeOutputs: pulumi.Output<outputs.ComputePoolDescribeOutput[]>;
    /**
     * Specifies the Snowflake Native App name.
     */
    declare public readonly forApplication: pulumi.Output<string | undefined>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    declare public /*out*/ readonly fullyQualifiedName: pulumi.Output<string>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the compute pool is created initially in the suspended state. This field is used only when creating a compute pool. Changes on this field are ignored after creation.
     */
    declare public readonly initiallySuspended: pulumi.Output<string | undefined>;
    /**
     * Identifies the type of machine you want to provision for the nodes in the compute pool. Valid values are (case-insensitive): `CPU_X64_XS` | `CPU_X64_S` | `CPU_X64_M` | `CPU_X64_L` | `HIGHMEM_X64_S` | `HIGHMEM_X64_M` | `HIGHMEM_X64_L` | `HIGHMEM_X64_SL` | `GPU_NV_S` | `GPU_NV_M` | `GPU_NV_L` | `GPU_NV_XS` | `GPU_NV_SM` | `GPU_NV_2M` | `GPU_NV_3M` | `GPU_NV_SL`.
     */
    declare public readonly instanceFamily: pulumi.Output<string>;
    /**
     * Specifies the maximum number of nodes for the compute pool.
     */
    declare public readonly maxNodes: pulumi.Output<number>;
    /**
     * Specifies the minimum number of nodes for the compute pool.
     */
    declare public readonly minNodes: pulumi.Output<number>;
    /**
     * Specifies the identifier for the compute pool; must be unique for the account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Outputs the result of `SHOW COMPUTE POOLS` for the given compute pool.
     */
    declare public /*out*/ readonly showOutputs: pulumi.Output<outputs.ComputePoolShowOutput[]>;

    /**
     * Create a ComputePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComputePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ComputePoolArgs | ComputePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ComputePoolState | undefined;
            resourceInputs["autoResume"] = state?.autoResume;
            resourceInputs["autoSuspendSecs"] = state?.autoSuspendSecs;
            resourceInputs["comment"] = state?.comment;
            resourceInputs["describeOutputs"] = state?.describeOutputs;
            resourceInputs["forApplication"] = state?.forApplication;
            resourceInputs["fullyQualifiedName"] = state?.fullyQualifiedName;
            resourceInputs["initiallySuspended"] = state?.initiallySuspended;
            resourceInputs["instanceFamily"] = state?.instanceFamily;
            resourceInputs["maxNodes"] = state?.maxNodes;
            resourceInputs["minNodes"] = state?.minNodes;
            resourceInputs["name"] = state?.name;
            resourceInputs["showOutputs"] = state?.showOutputs;
        } else {
            const args = argsOrState as ComputePoolArgs | undefined;
            if (args?.instanceFamily === undefined && !opts.urn) {
                throw new Error("Missing required property 'instanceFamily'");
            }
            if (args?.maxNodes === undefined && !opts.urn) {
                throw new Error("Missing required property 'maxNodes'");
            }
            if (args?.minNodes === undefined && !opts.urn) {
                throw new Error("Missing required property 'minNodes'");
            }
            resourceInputs["autoResume"] = args?.autoResume;
            resourceInputs["autoSuspendSecs"] = args?.autoSuspendSecs;
            resourceInputs["comment"] = args?.comment;
            resourceInputs["forApplication"] = args?.forApplication;
            resourceInputs["initiallySuspended"] = args?.initiallySuspended;
            resourceInputs["instanceFamily"] = args?.instanceFamily;
            resourceInputs["maxNodes"] = args?.maxNodes;
            resourceInputs["minNodes"] = args?.minNodes;
            resourceInputs["name"] = args?.name;
            resourceInputs["describeOutputs"] = undefined /*out*/;
            resourceInputs["fullyQualifiedName"] = undefined /*out*/;
            resourceInputs["showOutputs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ComputePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ComputePool resources.
 */
export interface ComputePoolState {
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to automatically resume a compute pool when a service or job is submitted to it. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
     */
    autoResume?: pulumi.Input<string>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Number of seconds of inactivity after which you want Snowflake to automatically suspend the compute pool.
     */
    autoSuspendSecs?: pulumi.Input<number>;
    /**
     * Specifies a comment for the compute pool.
     */
    comment?: pulumi.Input<string>;
    /**
     * Outputs the result of `DESCRIBE COMPUTE POOL` for the given compute pool.
     */
    describeOutputs?: pulumi.Input<pulumi.Input<inputs.ComputePoolDescribeOutput>[]>;
    /**
     * Specifies the Snowflake Native App name.
     */
    forApplication?: pulumi.Input<string>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    fullyQualifiedName?: pulumi.Input<string>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the compute pool is created initially in the suspended state. This field is used only when creating a compute pool. Changes on this field are ignored after creation.
     */
    initiallySuspended?: pulumi.Input<string>;
    /**
     * Identifies the type of machine you want to provision for the nodes in the compute pool. Valid values are (case-insensitive): `CPU_X64_XS` | `CPU_X64_S` | `CPU_X64_M` | `CPU_X64_L` | `HIGHMEM_X64_S` | `HIGHMEM_X64_M` | `HIGHMEM_X64_L` | `HIGHMEM_X64_SL` | `GPU_NV_S` | `GPU_NV_M` | `GPU_NV_L` | `GPU_NV_XS` | `GPU_NV_SM` | `GPU_NV_2M` | `GPU_NV_3M` | `GPU_NV_SL`.
     */
    instanceFamily?: pulumi.Input<string>;
    /**
     * Specifies the maximum number of nodes for the compute pool.
     */
    maxNodes?: pulumi.Input<number>;
    /**
     * Specifies the minimum number of nodes for the compute pool.
     */
    minNodes?: pulumi.Input<number>;
    /**
     * Specifies the identifier for the compute pool; must be unique for the account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    name?: pulumi.Input<string>;
    /**
     * Outputs the result of `SHOW COMPUTE POOLS` for the given compute pool.
     */
    showOutputs?: pulumi.Input<pulumi.Input<inputs.ComputePoolShowOutput>[]>;
}

/**
 * The set of arguments for constructing a ComputePool resource.
 */
export interface ComputePoolArgs {
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to automatically resume a compute pool when a service or job is submitted to it. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
     */
    autoResume?: pulumi.Input<string>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`-1`)) Number of seconds of inactivity after which you want Snowflake to automatically suspend the compute pool.
     */
    autoSuspendSecs?: pulumi.Input<number>;
    /**
     * Specifies a comment for the compute pool.
     */
    comment?: pulumi.Input<string>;
    /**
     * Specifies the Snowflake Native App name.
     */
    forApplication?: pulumi.Input<string>;
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether the compute pool is created initially in the suspended state. This field is used only when creating a compute pool. Changes on this field are ignored after creation.
     */
    initiallySuspended?: pulumi.Input<string>;
    /**
     * Identifies the type of machine you want to provision for the nodes in the compute pool. Valid values are (case-insensitive): `CPU_X64_XS` | `CPU_X64_S` | `CPU_X64_M` | `CPU_X64_L` | `HIGHMEM_X64_S` | `HIGHMEM_X64_M` | `HIGHMEM_X64_L` | `HIGHMEM_X64_SL` | `GPU_NV_S` | `GPU_NV_M` | `GPU_NV_L` | `GPU_NV_XS` | `GPU_NV_SM` | `GPU_NV_2M` | `GPU_NV_3M` | `GPU_NV_SL`.
     */
    instanceFamily: pulumi.Input<string>;
    /**
     * Specifies the maximum number of nodes for the compute pool.
     */
    maxNodes: pulumi.Input<number>;
    /**
     * Specifies the minimum number of nodes for the compute pool.
     */
    minNodes: pulumi.Input<number>;
    /**
     * Specifies the identifier for the compute pool; must be unique for the account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
     */
    name?: pulumi.Input<string>;
}
