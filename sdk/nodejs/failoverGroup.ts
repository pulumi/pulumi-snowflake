// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 * $ pulumi import snowflake:index/failoverGroup:FailoverGroup example 'fg1'
 * ```
 */
export class FailoverGroup extends pulumi.CustomResource {
    /**
     * Get an existing FailoverGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FailoverGroupState, opts?: pulumi.CustomResourceOptions): FailoverGroup {
        return new FailoverGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/failoverGroup:FailoverGroup';

    /**
     * Returns true if the given object is an instance of FailoverGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FailoverGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FailoverGroup.__pulumiType;
    }

    /**
     * Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
     */
    declare public readonly allowedAccounts: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
     */
    declare public readonly allowedDatabases: pulumi.Output<string[] | undefined>;
    /**
     * Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: "SECURITY INTEGRATIONS", "API INTEGRATIONS", "STORAGE INTEGRATIONS", "EXTERNAL ACCESS INTEGRATIONS", "NOTIFICATION INTEGRATIONS"
     */
    declare public readonly allowedIntegrationTypes: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
     */
    declare public readonly allowedShares: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the name of the replica to use as the source for the failover group.
     */
    declare public readonly fromReplica: pulumi.Output<outputs.FailoverGroupFromReplica | undefined>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    declare public /*out*/ readonly fullyQualifiedName: pulumi.Output<string>;
    /**
     * (Default: `false`) Allows replicating objects to accounts on lower editions.
     */
    declare public readonly ignoreEditionCheck: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. "My object"). Identifiers enclosed in double quotes are also case-sensitive.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: "ACCOUNT PARAMETERS", "DATABASES", "INTEGRATIONS", "NETWORK POLICIES", "RESOURCE MONITORS", "ROLES", "SHARES", "USERS", "WAREHOUSES"
     */
    declare public readonly objectTypes: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the schedule for refreshing secondary failover groups.
     */
    declare public readonly replicationSchedule: pulumi.Output<outputs.FailoverGroupReplicationSchedule | undefined>;

    /**
     * Create a FailoverGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FailoverGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FailoverGroupArgs | FailoverGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FailoverGroupState | undefined;
            resourceInputs["allowedAccounts"] = state?.allowedAccounts;
            resourceInputs["allowedDatabases"] = state?.allowedDatabases;
            resourceInputs["allowedIntegrationTypes"] = state?.allowedIntegrationTypes;
            resourceInputs["allowedShares"] = state?.allowedShares;
            resourceInputs["fromReplica"] = state?.fromReplica;
            resourceInputs["fullyQualifiedName"] = state?.fullyQualifiedName;
            resourceInputs["ignoreEditionCheck"] = state?.ignoreEditionCheck;
            resourceInputs["name"] = state?.name;
            resourceInputs["objectTypes"] = state?.objectTypes;
            resourceInputs["replicationSchedule"] = state?.replicationSchedule;
        } else {
            const args = argsOrState as FailoverGroupArgs | undefined;
            resourceInputs["allowedAccounts"] = args?.allowedAccounts;
            resourceInputs["allowedDatabases"] = args?.allowedDatabases;
            resourceInputs["allowedIntegrationTypes"] = args?.allowedIntegrationTypes;
            resourceInputs["allowedShares"] = args?.allowedShares;
            resourceInputs["fromReplica"] = args?.fromReplica;
            resourceInputs["ignoreEditionCheck"] = args?.ignoreEditionCheck;
            resourceInputs["name"] = args?.name;
            resourceInputs["objectTypes"] = args?.objectTypes;
            resourceInputs["replicationSchedule"] = args?.replicationSchedule;
            resourceInputs["fullyQualifiedName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FailoverGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FailoverGroup resources.
 */
export interface FailoverGroupState {
    /**
     * Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
     */
    allowedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
     */
    allowedDatabases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: "SECURITY INTEGRATIONS", "API INTEGRATIONS", "STORAGE INTEGRATIONS", "EXTERNAL ACCESS INTEGRATIONS", "NOTIFICATION INTEGRATIONS"
     */
    allowedIntegrationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
     */
    allowedShares?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the replica to use as the source for the failover group.
     */
    fromReplica?: pulumi.Input<inputs.FailoverGroupFromReplica>;
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     */
    fullyQualifiedName?: pulumi.Input<string>;
    /**
     * (Default: `false`) Allows replicating objects to accounts on lower editions.
     */
    ignoreEditionCheck?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. "My object"). Identifiers enclosed in double quotes are also case-sensitive.
     */
    name?: pulumi.Input<string>;
    /**
     * Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: "ACCOUNT PARAMETERS", "DATABASES", "INTEGRATIONS", "NETWORK POLICIES", "RESOURCE MONITORS", "ROLES", "SHARES", "USERS", "WAREHOUSES"
     */
    objectTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the schedule for refreshing secondary failover groups.
     */
    replicationSchedule?: pulumi.Input<inputs.FailoverGroupReplicationSchedule>;
}

/**
 * The set of arguments for constructing a FailoverGroup resource.
 */
export interface FailoverGroupArgs {
    /**
     * Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
     */
    allowedAccounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
     */
    allowedDatabases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: "SECURITY INTEGRATIONS", "API INTEGRATIONS", "STORAGE INTEGRATIONS", "EXTERNAL ACCESS INTEGRATIONS", "NOTIFICATION INTEGRATIONS"
     */
    allowedIntegrationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
     */
    allowedShares?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the name of the replica to use as the source for the failover group.
     */
    fromReplica?: pulumi.Input<inputs.FailoverGroupFromReplica>;
    /**
     * (Default: `false`) Allows replicating objects to accounts on lower editions.
     */
    ignoreEditionCheck?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. "My object"). Identifiers enclosed in double quotes are also case-sensitive.
     */
    name?: pulumi.Input<string>;
    /**
     * Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: "ACCOUNT PARAMETERS", "DATABASES", "INTEGRATIONS", "NETWORK POLICIES", "RESOURCE MONITORS", "ROLES", "SHARES", "USERS", "WAREHOUSES"
     */
    objectTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the schedule for refreshing secondary failover groups.
     */
    replicationSchedule?: pulumi.Input<inputs.FailoverGroupReplicationSchedule>;
}
