// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSystemGetAwsSnsIamPolicy(args: GetSystemGetAwsSnsIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemGetAwsSnsIamPolicyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("snowflake:index/getSystemGetAwsSnsIamPolicy:getSystemGetAwsSnsIamPolicy", {
        "awsSnsTopicArn": args.awsSnsTopicArn,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemGetAwsSnsIamPolicy.
 */
export interface GetSystemGetAwsSnsIamPolicyArgs {
    /**
     * Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
     */
    awsSnsTopicArn: string;
}

/**
 * A collection of values returned by getSystemGetAwsSnsIamPolicy.
 */
export interface GetSystemGetAwsSnsIamPolicyResult {
    /**
     * Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
     */
    readonly awsSnsTopicArn: string;
    /**
     * IAM policy for Snowflakeâ€™s SQS queue to subscribe to this topic
     */
    readonly awsSnsTopicPolicyJson: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

export function getSystemGetAwsSnsIamPolicyOutput(args: GetSystemGetAwsSnsIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSystemGetAwsSnsIamPolicyResult> {
    return pulumi.output(args).apply(a => getSystemGetAwsSnsIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSystemGetAwsSnsIamPolicy.
 */
export interface GetSystemGetAwsSnsIamPolicyOutputArgs {
    /**
     * Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
     */
    awsSnsTopicArn: pulumi.Input<string>;
}
