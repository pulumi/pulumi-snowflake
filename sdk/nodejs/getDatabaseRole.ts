// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `previewFeaturesEnabled field` in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as snowflake from "@pulumi/snowflake";
 *
 * const dbRole = snowflake.getDatabaseRole({
 *     database: "MYDB",
 *     name: "DBROLE",
 * });
 * ```
 */
export function getDatabaseRole(args: GetDatabaseRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("snowflake:index/getDatabaseRole:getDatabaseRole", {
        "database": args.database,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseRole.
 */
export interface GetDatabaseRoleArgs {
    /**
     * The database from which to return the database role from.
     */
    database: string;
    /**
     * Database role name.
     */
    name: string;
}

/**
 * A collection of values returned by getDatabaseRole.
 */
export interface GetDatabaseRoleResult {
    /**
     * The comment on the role
     */
    readonly comment: string;
    /**
     * The database from which to return the database role from.
     */
    readonly database: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Database role name.
     */
    readonly name: string;
    /**
     * The owner of the role
     */
    readonly owner: string;
}
/**
 * !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `previewFeaturesEnabled field` in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as snowflake from "@pulumi/snowflake";
 *
 * const dbRole = snowflake.getDatabaseRole({
 *     database: "MYDB",
 *     name: "DBROLE",
 * });
 * ```
 */
export function getDatabaseRoleOutput(args: GetDatabaseRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatabaseRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("snowflake:index/getDatabaseRole:getDatabaseRole", {
        "database": args.database,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseRole.
 */
export interface GetDatabaseRoleOutputArgs {
    /**
     * The database from which to return the database role from.
     */
    database: pulumi.Input<string>;
    /**
     * Database role name.
     */
    name: pulumi.Input<string>;
}
