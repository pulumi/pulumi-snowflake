// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Specifies the password policy to use for the current account. To set the password policy of a different account, use a provider alias.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as snowflake from "@pulumi/snowflake";
 *
 * const _default = new snowflake.PasswordPolicy("default", {
 *     database: "prod",
 *     schema: "security",
 *     name: "default_policy",
 * });
 * const attachment = new snowflake.AccountPasswordPolicyAttachment("attachment", {passwordPolicy: _default.qualifiedName});
 * ```
 */
export class AccountPasswordPolicyAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AccountPasswordPolicyAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountPasswordPolicyAttachmentState, opts?: pulumi.CustomResourceOptions): AccountPasswordPolicyAttachment {
        return new AccountPasswordPolicyAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/accountPasswordPolicyAttachment:AccountPasswordPolicyAttachment';

    /**
     * Returns true if the given object is an instance of AccountPasswordPolicyAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountPasswordPolicyAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountPasswordPolicyAttachment.__pulumiType;
    }

    /**
     * Qualified name (`"db"."schema"."policyName"`) of the password policy to apply to the current account.
     */
    public readonly passwordPolicy!: pulumi.Output<string>;

    /**
     * Create a AccountPasswordPolicyAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountPasswordPolicyAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountPasswordPolicyAttachmentArgs | AccountPasswordPolicyAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountPasswordPolicyAttachmentState | undefined;
            resourceInputs["passwordPolicy"] = state ? state.passwordPolicy : undefined;
        } else {
            const args = argsOrState as AccountPasswordPolicyAttachmentArgs | undefined;
            if ((!args || args.passwordPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'passwordPolicy'");
            }
            resourceInputs["passwordPolicy"] = args ? args.passwordPolicy : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountPasswordPolicyAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountPasswordPolicyAttachment resources.
 */
export interface AccountPasswordPolicyAttachmentState {
    /**
     * Qualified name (`"db"."schema"."policyName"`) of the password policy to apply to the current account.
     */
    passwordPolicy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountPasswordPolicyAttachment resource.
 */
export interface AccountPasswordPolicyAttachmentArgs {
    /**
     * Qualified name (`"db"."schema"."policyName"`) of the password policy to apply to the current account.
     */
    passwordPolicy: pulumi.Input<string>;
}
