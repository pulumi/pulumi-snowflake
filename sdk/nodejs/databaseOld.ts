// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ```sh
 * $ pulumi import snowflake:index/databaseOld:DatabaseOld example 'database_name'
 * ```
 */
export class DatabaseOld extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseOld resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseOldState, opts?: pulumi.CustomResourceOptions): DatabaseOld {
        return new DatabaseOld(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/databaseOld:DatabaseOld';

    /**
     * Returns true if the given object is an instance of DatabaseOld.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseOld {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseOld.__pulumiType;
    }

    /**
     * Specifies a comment for the database.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database. Default value for this field is set to -1, which is a fallback to use Snowflake default. For more information, see [Understanding & Using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel).
     */
    public readonly dataRetentionTimeInDays!: pulumi.Output<number | undefined>;
    /**
     * Specify a database to create a clone from.
     */
    public readonly fromDatabase!: pulumi.Output<string | undefined>;
    /**
     * Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of `"<organization_name>"."<account_name>"."<db_name>"`. An example would be: `"myorg1"."account1"."db1"`
     */
    public readonly fromReplica!: pulumi.Output<string | undefined>;
    /**
     * Specify a provider and a share in this map to create a database from a share. As of version 0.87.0, the provider field is the account locator.
     */
    public readonly fromShare!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss.
     */
    public readonly isTransient!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the identifier for the database; must be unique for your account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * When set, specifies the configurations for database replication.
     */
    public readonly replicationConfiguration!: pulumi.Output<outputs.DatabaseOldReplicationConfiguration | undefined>;

    /**
     * Create a DatabaseOld resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatabaseOldArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseOldArgs | DatabaseOldState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseOldState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["dataRetentionTimeInDays"] = state ? state.dataRetentionTimeInDays : undefined;
            resourceInputs["fromDatabase"] = state ? state.fromDatabase : undefined;
            resourceInputs["fromReplica"] = state ? state.fromReplica : undefined;
            resourceInputs["fromShare"] = state ? state.fromShare : undefined;
            resourceInputs["isTransient"] = state ? state.isTransient : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["replicationConfiguration"] = state ? state.replicationConfiguration : undefined;
        } else {
            const args = argsOrState as DatabaseOldArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dataRetentionTimeInDays"] = args ? args.dataRetentionTimeInDays : undefined;
            resourceInputs["fromDatabase"] = args ? args.fromDatabase : undefined;
            resourceInputs["fromReplica"] = args ? args.fromReplica : undefined;
            resourceInputs["fromShare"] = args ? args.fromShare : undefined;
            resourceInputs["isTransient"] = args ? args.isTransient : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replicationConfiguration"] = args ? args.replicationConfiguration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseOld.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseOld resources.
 */
export interface DatabaseOldState {
    /**
     * Specifies a comment for the database.
     */
    comment?: pulumi.Input<string>;
    /**
     * Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database. Default value for this field is set to -1, which is a fallback to use Snowflake default. For more information, see [Understanding & Using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel).
     */
    dataRetentionTimeInDays?: pulumi.Input<number>;
    /**
     * Specify a database to create a clone from.
     */
    fromDatabase?: pulumi.Input<string>;
    /**
     * Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of `"<organization_name>"."<account_name>"."<db_name>"`. An example would be: `"myorg1"."account1"."db1"`
     */
    fromReplica?: pulumi.Input<string>;
    /**
     * Specify a provider and a share in this map to create a database from a share. As of version 0.87.0, the provider field is the account locator.
     */
    fromShare?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss.
     */
    isTransient?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the database; must be unique for your account.
     */
    name?: pulumi.Input<string>;
    /**
     * When set, specifies the configurations for database replication.
     */
    replicationConfiguration?: pulumi.Input<inputs.DatabaseOldReplicationConfiguration>;
}

/**
 * The set of arguments for constructing a DatabaseOld resource.
 */
export interface DatabaseOldArgs {
    /**
     * Specifies a comment for the database.
     */
    comment?: pulumi.Input<string>;
    /**
     * Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database. Default value for this field is set to -1, which is a fallback to use Snowflake default. For more information, see [Understanding & Using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel).
     */
    dataRetentionTimeInDays?: pulumi.Input<number>;
    /**
     * Specify a database to create a clone from.
     */
    fromDatabase?: pulumi.Input<string>;
    /**
     * Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of `"<organization_name>"."<account_name>"."<db_name>"`. An example would be: `"myorg1"."account1"."db1"`
     */
    fromReplica?: pulumi.Input<string>;
    /**
     * Specify a provider and a share in this map to create a database from a share. As of version 0.87.0, the provider field is the account locator.
     */
    fromShare?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss.
     */
    isTransient?: pulumi.Input<boolean>;
    /**
     * Specifies the identifier for the database; must be unique for your account.
     */
    name?: pulumi.Input<string>;
    /**
     * When set, specifies the configurations for database replication.
     */
    replicationConfiguration?: pulumi.Input<inputs.DatabaseOldReplicationConfiguration>;
}
