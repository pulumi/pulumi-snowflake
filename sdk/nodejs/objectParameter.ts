// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as snowflake from "@pulumi/snowflake";
 *
 * const database = new snowflake.Database("database", {});
 * const objectParameter = new snowflake.ObjectParameter("objectParameter", {
 *     key: "SUSPEND_TASK_AFTER_NUM_FAILURES",
 *     value: "33",
 *     objectType: "DATABASE",
 *     objectIdentifiers: [{
 *         name: database.name,
 *     }],
 * });
 * const schema = new snowflake.Schema("schema", {database: database.name});
 * const o2 = new snowflake.ObjectParameter("o2", {
 *     key: "USER_TASK_TIMEOUT_MS",
 *     value: "500",
 *     objectType: "SCHEMA",
 *     objectIdentifiers: [{
 *         database: database.name,
 *         name: schema.name,
 *     }],
 * });
 * const table = new snowflake.Table("table", {
 *     database: database.name,
 *     schema: schema.name,
 *     columns: [{
 *         name: "id",
 *         type: "NUMBER",
 *     }],
 * });
 * const o3 = new snowflake.ObjectParameter("o3", {
 *     key: "DATA_RETENTION_TIME_IN_DAYS",
 *     value: "89",
 *     objectType: "TABLE",
 *     objectIdentifiers: [{
 *         database: database.name,
 *         schema: schema.name,
 *         name: table.name,
 *     }],
 * });
 * // Setting object parameter at account level
 * const o4 = new snowflake.ObjectParameter("o4", {
 *     key: "DATA_RETENTION_TIME_IN_DAYS",
 *     value: "89",
 *     onAccount: true,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import snowflake:index/objectParameter:ObjectParameter s <key>❄️<object_type>❄️<object_identifier>
 * ```
 */
export class ObjectParameter extends pulumi.CustomResource {
    /**
     * Get an existing ObjectParameter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ObjectParameterState, opts?: pulumi.CustomResourceOptions): ObjectParameter {
        return new ObjectParameter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'snowflake:index/objectParameter:ObjectParameter';

    /**
     * Returns true if the given object is an instance of ObjectParameter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ObjectParameter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ObjectParameter.__pulumiType;
    }

    /**
     * Name of object parameter. Valid values are those in [object parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#object-parameters).
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Specifies the object identifier for the object parameter. If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    public readonly objectIdentifiers!: pulumi.Output<outputs.ObjectParameterObjectIdentifier[] | undefined>;
    /**
     * Type of object to which the parameter applies. Valid values are those in [object types](https://docs.snowflake.com/en/sql-reference/parameters.html#object-types). If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    public readonly objectType!: pulumi.Output<string | undefined>;
    /**
     * If true, the object parameter will be set on the account level.
     */
    public readonly onAccount!: pulumi.Output<boolean | undefined>;
    /**
     * Value of object parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a ObjectParameter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ObjectParameterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ObjectParameterArgs | ObjectParameterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ObjectParameterState | undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["objectIdentifiers"] = state ? state.objectIdentifiers : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["onAccount"] = state ? state.onAccount : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as ObjectParameterArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["objectIdentifiers"] = args ? args.objectIdentifiers : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["onAccount"] = args ? args.onAccount : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ObjectParameter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ObjectParameter resources.
 */
export interface ObjectParameterState {
    /**
     * Name of object parameter. Valid values are those in [object parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#object-parameters).
     */
    key?: pulumi.Input<string>;
    /**
     * Specifies the object identifier for the object parameter. If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    objectIdentifiers?: pulumi.Input<pulumi.Input<inputs.ObjectParameterObjectIdentifier>[]>;
    /**
     * Type of object to which the parameter applies. Valid values are those in [object types](https://docs.snowflake.com/en/sql-reference/parameters.html#object-types). If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    objectType?: pulumi.Input<string>;
    /**
     * If true, the object parameter will be set on the account level.
     */
    onAccount?: pulumi.Input<boolean>;
    /**
     * Value of object parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ObjectParameter resource.
 */
export interface ObjectParameterArgs {
    /**
     * Name of object parameter. Valid values are those in [object parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#object-parameters).
     */
    key: pulumi.Input<string>;
    /**
     * Specifies the object identifier for the object parameter. If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    objectIdentifiers?: pulumi.Input<pulumi.Input<inputs.ObjectParameterObjectIdentifier>[]>;
    /**
     * Type of object to which the parameter applies. Valid values are those in [object types](https://docs.snowflake.com/en/sql-reference/parameters.html#object-types). If no value is provided, then the resource will default to setting the object parameter at account level.
     */
    objectType?: pulumi.Input<string>;
    /**
     * If true, the object parameter will be set on the account level.
     */
    onAccount?: pulumi.Input<boolean>;
    /**
     * Value of object parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
     */
    value: pulumi.Input<string>;
}
