// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDynamicTables(ctx *pulumi.Context, args *GetDynamicTablesArgs, opts ...pulumi.InvokeOption) (*GetDynamicTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDynamicTablesResult
	err := ctx.Invoke("snowflake:index/getDynamicTables:getDynamicTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDynamicTables.
type GetDynamicTablesArgs struct {
	In         *GetDynamicTablesIn    `pulumi:"in"`
	Like       *GetDynamicTablesLike  `pulumi:"like"`
	Limit      *GetDynamicTablesLimit `pulumi:"limit"`
	StartsWith *string                `pulumi:"startsWith"`
}

// A collection of values returned by getDynamicTables.
type GetDynamicTablesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string                   `pulumi:"id"`
	In         *GetDynamicTablesIn      `pulumi:"in"`
	Like       *GetDynamicTablesLike    `pulumi:"like"`
	Limit      *GetDynamicTablesLimit   `pulumi:"limit"`
	Records    []GetDynamicTablesRecord `pulumi:"records"`
	StartsWith *string                  `pulumi:"startsWith"`
}

func GetDynamicTablesOutput(ctx *pulumi.Context, args GetDynamicTablesOutputArgs, opts ...pulumi.InvokeOption) GetDynamicTablesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDynamicTablesResultOutput, error) {
			args := v.(GetDynamicTablesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getDynamicTables:getDynamicTables", args, GetDynamicTablesResultOutput{}, options).(GetDynamicTablesResultOutput), nil
		}).(GetDynamicTablesResultOutput)
}

// A collection of arguments for invoking getDynamicTables.
type GetDynamicTablesOutputArgs struct {
	In         GetDynamicTablesInPtrInput    `pulumi:"in"`
	Like       GetDynamicTablesLikePtrInput  `pulumi:"like"`
	Limit      GetDynamicTablesLimitPtrInput `pulumi:"limit"`
	StartsWith pulumi.StringPtrInput         `pulumi:"startsWith"`
}

func (GetDynamicTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTablesArgs)(nil)).Elem()
}

// A collection of values returned by getDynamicTables.
type GetDynamicTablesResultOutput struct{ *pulumi.OutputState }

func (GetDynamicTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDynamicTablesResult)(nil)).Elem()
}

func (o GetDynamicTablesResultOutput) ToGetDynamicTablesResultOutput() GetDynamicTablesResultOutput {
	return o
}

func (o GetDynamicTablesResultOutput) ToGetDynamicTablesResultOutputWithContext(ctx context.Context) GetDynamicTablesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDynamicTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDynamicTablesResultOutput) In() GetDynamicTablesInPtrOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) *GetDynamicTablesIn { return v.In }).(GetDynamicTablesInPtrOutput)
}

func (o GetDynamicTablesResultOutput) Like() GetDynamicTablesLikePtrOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) *GetDynamicTablesLike { return v.Like }).(GetDynamicTablesLikePtrOutput)
}

func (o GetDynamicTablesResultOutput) Limit() GetDynamicTablesLimitPtrOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) *GetDynamicTablesLimit { return v.Limit }).(GetDynamicTablesLimitPtrOutput)
}

func (o GetDynamicTablesResultOutput) Records() GetDynamicTablesRecordArrayOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) []GetDynamicTablesRecord { return v.Records }).(GetDynamicTablesRecordArrayOutput)
}

func (o GetDynamicTablesResultOutput) StartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDynamicTablesResult) *string { return v.StartsWith }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDynamicTablesResultOutput{})
}
