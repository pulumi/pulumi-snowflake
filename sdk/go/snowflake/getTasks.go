// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetTasks(ctx *pulumi.Context, args *GetTasksArgs, opts ...pulumi.InvokeOption) (*GetTasksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTasksResult
	err := ctx.Invoke("snowflake:index/getTasks:getTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTasks.
type GetTasksArgs struct {
	In             *GetTasksIn    `pulumi:"in"`
	Like           *string        `pulumi:"like"`
	Limit          *GetTasksLimit `pulumi:"limit"`
	RootOnly       *bool          `pulumi:"rootOnly"`
	StartsWith     *string        `pulumi:"startsWith"`
	WithParameters *bool          `pulumi:"withParameters"`
}

// A collection of values returned by getTasks.
type GetTasksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id             string         `pulumi:"id"`
	In             *GetTasksIn    `pulumi:"in"`
	Like           *string        `pulumi:"like"`
	Limit          *GetTasksLimit `pulumi:"limit"`
	RootOnly       *bool          `pulumi:"rootOnly"`
	StartsWith     *string        `pulumi:"startsWith"`
	Tasks          []GetTasksTask `pulumi:"tasks"`
	WithParameters *bool          `pulumi:"withParameters"`
}

func GetTasksOutput(ctx *pulumi.Context, args GetTasksOutputArgs, opts ...pulumi.InvokeOption) GetTasksResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTasksResultOutput, error) {
			args := v.(GetTasksArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getTasks:getTasks", args, GetTasksResultOutput{}, options).(GetTasksResultOutput), nil
		}).(GetTasksResultOutput)
}

// A collection of arguments for invoking getTasks.
type GetTasksOutputArgs struct {
	In             GetTasksInPtrInput    `pulumi:"in"`
	Like           pulumi.StringPtrInput `pulumi:"like"`
	Limit          GetTasksLimitPtrInput `pulumi:"limit"`
	RootOnly       pulumi.BoolPtrInput   `pulumi:"rootOnly"`
	StartsWith     pulumi.StringPtrInput `pulumi:"startsWith"`
	WithParameters pulumi.BoolPtrInput   `pulumi:"withParameters"`
}

func (GetTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksArgs)(nil)).Elem()
}

// A collection of values returned by getTasks.
type GetTasksResultOutput struct{ *pulumi.OutputState }

func (GetTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTasksResult)(nil)).Elem()
}

func (o GetTasksResultOutput) ToGetTasksResultOutput() GetTasksResultOutput {
	return o
}

func (o GetTasksResultOutput) ToGetTasksResultOutputWithContext(ctx context.Context) GetTasksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTasksResultOutput) In() GetTasksInPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *GetTasksIn { return v.In }).(GetTasksInPtrOutput)
}

func (o GetTasksResultOutput) Like() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.Like }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) Limit() GetTasksLimitPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *GetTasksLimit { return v.Limit }).(GetTasksLimitPtrOutput)
}

func (o GetTasksResultOutput) RootOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *bool { return v.RootOnly }).(pulumi.BoolPtrOutput)
}

func (o GetTasksResultOutput) StartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *string { return v.StartsWith }).(pulumi.StringPtrOutput)
}

func (o GetTasksResultOutput) Tasks() GetTasksTaskArrayOutput {
	return o.ApplyT(func(v GetTasksResult) []GetTasksTask { return v.Tasks }).(GetTasksTaskArrayOutput)
}

func (o GetTasksResultOutput) WithParameters() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTasksResult) *bool { return v.WithParameters }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTasksResultOutput{})
}
