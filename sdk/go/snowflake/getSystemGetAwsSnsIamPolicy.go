// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSystemGetAwsSnsIamPolicy(ctx *pulumi.Context, args *GetSystemGetAwsSnsIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetSystemGetAwsSnsIamPolicyResult, error) {
	var rv GetSystemGetAwsSnsIamPolicyResult
	err := ctx.Invoke("snowflake:index/getSystemGetAwsSnsIamPolicy:getSystemGetAwsSnsIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSystemGetAwsSnsIamPolicy.
type GetSystemGetAwsSnsIamPolicyArgs struct {
	// Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
	AwsSnsTopicArn string `pulumi:"awsSnsTopicArn"`
}

// A collection of values returned by getSystemGetAwsSnsIamPolicy.
type GetSystemGetAwsSnsIamPolicyResult struct {
	// Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
	AwsSnsTopicArn string `pulumi:"awsSnsTopicArn"`
	// IAM policy for Snowflake’s SQS queue to subscribe to this topic
	AwsSnsTopicPolicyJson string `pulumi:"awsSnsTopicPolicyJson"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetSystemGetAwsSnsIamPolicyOutput(ctx *pulumi.Context, args GetSystemGetAwsSnsIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetSystemGetAwsSnsIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSystemGetAwsSnsIamPolicyResult, error) {
			args := v.(GetSystemGetAwsSnsIamPolicyArgs)
			r, err := GetSystemGetAwsSnsIamPolicy(ctx, &args, opts...)
			var s GetSystemGetAwsSnsIamPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSystemGetAwsSnsIamPolicyResultOutput)
}

// A collection of arguments for invoking getSystemGetAwsSnsIamPolicy.
type GetSystemGetAwsSnsIamPolicyOutputArgs struct {
	// Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
	AwsSnsTopicArn pulumi.StringInput `pulumi:"awsSnsTopicArn"`
}

func (GetSystemGetAwsSnsIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGetAwsSnsIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSystemGetAwsSnsIamPolicy.
type GetSystemGetAwsSnsIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetSystemGetAwsSnsIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemGetAwsSnsIamPolicyResult)(nil)).Elem()
}

func (o GetSystemGetAwsSnsIamPolicyResultOutput) ToGetSystemGetAwsSnsIamPolicyResultOutput() GetSystemGetAwsSnsIamPolicyResultOutput {
	return o
}

func (o GetSystemGetAwsSnsIamPolicyResultOutput) ToGetSystemGetAwsSnsIamPolicyResultOutputWithContext(ctx context.Context) GetSystemGetAwsSnsIamPolicyResultOutput {
	return o
}

// Amazon Resource Name (ARN) of the SNS topic for your S3 bucket
func (o GetSystemGetAwsSnsIamPolicyResultOutput) AwsSnsTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGetAwsSnsIamPolicyResult) string { return v.AwsSnsTopicArn }).(pulumi.StringOutput)
}

// IAM policy for Snowflake’s SQS queue to subscribe to this topic
func (o GetSystemGetAwsSnsIamPolicyResultOutput) AwsSnsTopicPolicyJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGetAwsSnsIamPolicyResult) string { return v.AwsSnsTopicPolicyJson }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSystemGetAwsSnsIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSystemGetAwsSnsIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSystemGetAwsSnsIamPolicyResultOutput{})
}
