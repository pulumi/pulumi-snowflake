// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountAuthenticationPolicyAttachment struct {
	pulumi.CustomResourceState

	// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
	AuthenticationPolicy pulumi.StringOutput `pulumi:"authenticationPolicy"`
}

// NewAccountAuthenticationPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewAccountAuthenticationPolicyAttachment(ctx *pulumi.Context,
	name string, args *AccountAuthenticationPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*AccountAuthenticationPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationPolicy == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountAuthenticationPolicyAttachment
	err := ctx.RegisterResource("snowflake:index/accountAuthenticationPolicyAttachment:AccountAuthenticationPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountAuthenticationPolicyAttachment gets an existing AccountAuthenticationPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountAuthenticationPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountAuthenticationPolicyAttachmentState, opts ...pulumi.ResourceOption) (*AccountAuthenticationPolicyAttachment, error) {
	var resource AccountAuthenticationPolicyAttachment
	err := ctx.ReadResource("snowflake:index/accountAuthenticationPolicyAttachment:AccountAuthenticationPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountAuthenticationPolicyAttachment resources.
type accountAuthenticationPolicyAttachmentState struct {
	// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
	AuthenticationPolicy *string `pulumi:"authenticationPolicy"`
}

type AccountAuthenticationPolicyAttachmentState struct {
	// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
	AuthenticationPolicy pulumi.StringPtrInput
}

func (AccountAuthenticationPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationPolicyAttachmentState)(nil)).Elem()
}

type accountAuthenticationPolicyAttachmentArgs struct {
	// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
	AuthenticationPolicy string `pulumi:"authenticationPolicy"`
}

// The set of arguments for constructing a AccountAuthenticationPolicyAttachment resource.
type AccountAuthenticationPolicyAttachmentArgs struct {
	// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
	AuthenticationPolicy pulumi.StringInput
}

func (AccountAuthenticationPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountAuthenticationPolicyAttachmentArgs)(nil)).Elem()
}

type AccountAuthenticationPolicyAttachmentInput interface {
	pulumi.Input

	ToAccountAuthenticationPolicyAttachmentOutput() AccountAuthenticationPolicyAttachmentOutput
	ToAccountAuthenticationPolicyAttachmentOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentOutput
}

func (*AccountAuthenticationPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (i *AccountAuthenticationPolicyAttachment) ToAccountAuthenticationPolicyAttachmentOutput() AccountAuthenticationPolicyAttachmentOutput {
	return i.ToAccountAuthenticationPolicyAttachmentOutputWithContext(context.Background())
}

func (i *AccountAuthenticationPolicyAttachment) ToAccountAuthenticationPolicyAttachmentOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationPolicyAttachmentOutput)
}

// AccountAuthenticationPolicyAttachmentArrayInput is an input type that accepts AccountAuthenticationPolicyAttachmentArray and AccountAuthenticationPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `AccountAuthenticationPolicyAttachmentArrayInput` via:
//
//	AccountAuthenticationPolicyAttachmentArray{ AccountAuthenticationPolicyAttachmentArgs{...} }
type AccountAuthenticationPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToAccountAuthenticationPolicyAttachmentArrayOutput() AccountAuthenticationPolicyAttachmentArrayOutput
	ToAccountAuthenticationPolicyAttachmentArrayOutputWithContext(context.Context) AccountAuthenticationPolicyAttachmentArrayOutput
}

type AccountAuthenticationPolicyAttachmentArray []AccountAuthenticationPolicyAttachmentInput

func (AccountAuthenticationPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (i AccountAuthenticationPolicyAttachmentArray) ToAccountAuthenticationPolicyAttachmentArrayOutput() AccountAuthenticationPolicyAttachmentArrayOutput {
	return i.ToAccountAuthenticationPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i AccountAuthenticationPolicyAttachmentArray) ToAccountAuthenticationPolicyAttachmentArrayOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationPolicyAttachmentArrayOutput)
}

// AccountAuthenticationPolicyAttachmentMapInput is an input type that accepts AccountAuthenticationPolicyAttachmentMap and AccountAuthenticationPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `AccountAuthenticationPolicyAttachmentMapInput` via:
//
//	AccountAuthenticationPolicyAttachmentMap{ "key": AccountAuthenticationPolicyAttachmentArgs{...} }
type AccountAuthenticationPolicyAttachmentMapInput interface {
	pulumi.Input

	ToAccountAuthenticationPolicyAttachmentMapOutput() AccountAuthenticationPolicyAttachmentMapOutput
	ToAccountAuthenticationPolicyAttachmentMapOutputWithContext(context.Context) AccountAuthenticationPolicyAttachmentMapOutput
}

type AccountAuthenticationPolicyAttachmentMap map[string]AccountAuthenticationPolicyAttachmentInput

func (AccountAuthenticationPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (i AccountAuthenticationPolicyAttachmentMap) ToAccountAuthenticationPolicyAttachmentMapOutput() AccountAuthenticationPolicyAttachmentMapOutput {
	return i.ToAccountAuthenticationPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i AccountAuthenticationPolicyAttachmentMap) ToAccountAuthenticationPolicyAttachmentMapOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAuthenticationPolicyAttachmentMapOutput)
}

type AccountAuthenticationPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (o AccountAuthenticationPolicyAttachmentOutput) ToAccountAuthenticationPolicyAttachmentOutput() AccountAuthenticationPolicyAttachmentOutput {
	return o
}

func (o AccountAuthenticationPolicyAttachmentOutput) ToAccountAuthenticationPolicyAttachmentOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentOutput {
	return o
}

// Qualified name (`"db"."schema"."policyName"`) of the authentication policy to apply to the current account.
func (o AccountAuthenticationPolicyAttachmentOutput) AuthenticationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountAuthenticationPolicyAttachment) pulumi.StringOutput { return v.AuthenticationPolicy }).(pulumi.StringOutput)
}

type AccountAuthenticationPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (o AccountAuthenticationPolicyAttachmentArrayOutput) ToAccountAuthenticationPolicyAttachmentArrayOutput() AccountAuthenticationPolicyAttachmentArrayOutput {
	return o
}

func (o AccountAuthenticationPolicyAttachmentArrayOutput) ToAccountAuthenticationPolicyAttachmentArrayOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentArrayOutput {
	return o
}

func (o AccountAuthenticationPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) AccountAuthenticationPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountAuthenticationPolicyAttachment {
		return vs[0].([]*AccountAuthenticationPolicyAttachment)[vs[1].(int)]
	}).(AccountAuthenticationPolicyAttachmentOutput)
}

type AccountAuthenticationPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (AccountAuthenticationPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountAuthenticationPolicyAttachment)(nil)).Elem()
}

func (o AccountAuthenticationPolicyAttachmentMapOutput) ToAccountAuthenticationPolicyAttachmentMapOutput() AccountAuthenticationPolicyAttachmentMapOutput {
	return o
}

func (o AccountAuthenticationPolicyAttachmentMapOutput) ToAccountAuthenticationPolicyAttachmentMapOutputWithContext(ctx context.Context) AccountAuthenticationPolicyAttachmentMapOutput {
	return o
}

func (o AccountAuthenticationPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) AccountAuthenticationPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountAuthenticationPolicyAttachment {
		return vs[0].(map[string]*AccountAuthenticationPolicyAttachment)[vs[1].(string)]
	}).(AccountAuthenticationPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationPolicyAttachmentInput)(nil)).Elem(), &AccountAuthenticationPolicyAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationPolicyAttachmentArrayInput)(nil)).Elem(), AccountAuthenticationPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAuthenticationPolicyAttachmentMapInput)(nil)).Elem(), AccountAuthenticationPolicyAttachmentMap{})
	pulumi.RegisterOutputType(AccountAuthenticationPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AccountAuthenticationPolicyAttachmentMapOutput{})
}
