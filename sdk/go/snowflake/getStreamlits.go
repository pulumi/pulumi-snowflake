// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetStreamlits(ctx *pulumi.Context, args *GetStreamlitsArgs, opts ...pulumi.InvokeOption) (*GetStreamlitsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamlitsResult
	err := ctx.Invoke("snowflake:index/getStreamlits:getStreamlits", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamlits.
type GetStreamlitsArgs struct {
	In           *GetStreamlitsIn    `pulumi:"in"`
	Like         *string             `pulumi:"like"`
	Limit        *GetStreamlitsLimit `pulumi:"limit"`
	WithDescribe *bool               `pulumi:"withDescribe"`
}

// A collection of values returned by getStreamlits.
type GetStreamlitsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string                   `pulumi:"id"`
	In           *GetStreamlitsIn         `pulumi:"in"`
	Like         *string                  `pulumi:"like"`
	Limit        *GetStreamlitsLimit      `pulumi:"limit"`
	Streamlits   []GetStreamlitsStreamlit `pulumi:"streamlits"`
	WithDescribe *bool                    `pulumi:"withDescribe"`
}

func GetStreamlitsOutput(ctx *pulumi.Context, args GetStreamlitsOutputArgs, opts ...pulumi.InvokeOption) GetStreamlitsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamlitsResultOutput, error) {
			args := v.(GetStreamlitsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getStreamlits:getStreamlits", args, GetStreamlitsResultOutput{}, options).(GetStreamlitsResultOutput), nil
		}).(GetStreamlitsResultOutput)
}

// A collection of arguments for invoking getStreamlits.
type GetStreamlitsOutputArgs struct {
	In           GetStreamlitsInPtrInput    `pulumi:"in"`
	Like         pulumi.StringPtrInput      `pulumi:"like"`
	Limit        GetStreamlitsLimitPtrInput `pulumi:"limit"`
	WithDescribe pulumi.BoolPtrInput        `pulumi:"withDescribe"`
}

func (GetStreamlitsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamlitsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamlits.
type GetStreamlitsResultOutput struct{ *pulumi.OutputState }

func (GetStreamlitsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamlitsResult)(nil)).Elem()
}

func (o GetStreamlitsResultOutput) ToGetStreamlitsResultOutput() GetStreamlitsResultOutput {
	return o
}

func (o GetStreamlitsResultOutput) ToGetStreamlitsResultOutputWithContext(ctx context.Context) GetStreamlitsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetStreamlitsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamlitsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStreamlitsResultOutput) In() GetStreamlitsInPtrOutput {
	return o.ApplyT(func(v GetStreamlitsResult) *GetStreamlitsIn { return v.In }).(GetStreamlitsInPtrOutput)
}

func (o GetStreamlitsResultOutput) Like() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStreamlitsResult) *string { return v.Like }).(pulumi.StringPtrOutput)
}

func (o GetStreamlitsResultOutput) Limit() GetStreamlitsLimitPtrOutput {
	return o.ApplyT(func(v GetStreamlitsResult) *GetStreamlitsLimit { return v.Limit }).(GetStreamlitsLimitPtrOutput)
}

func (o GetStreamlitsResultOutput) Streamlits() GetStreamlitsStreamlitArrayOutput {
	return o.ApplyT(func(v GetStreamlitsResult) []GetStreamlitsStreamlit { return v.Streamlits }).(GetStreamlitsStreamlitArrayOutput)
}

func (o GetStreamlitsResultOutput) WithDescribe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStreamlitsResult) *bool { return v.WithDescribe }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamlitsResultOutput{})
}
