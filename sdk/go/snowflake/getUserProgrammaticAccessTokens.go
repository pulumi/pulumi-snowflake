// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source used to get details of filtered user programmatic access tokens. Filtering is aligned with the current possibilities for [SHOW USER PROGRAMMATIC ACCESS TOKENS](https://docs.snowflake.com/en/sql-reference/sql/show-user-programmatic-access-tokens) query. The results of SHOW are encapsulated in one output collection `userProgrammaticAccessTokens`.
func GetUserProgrammaticAccessTokens(ctx *pulumi.Context, args *GetUserProgrammaticAccessTokensArgs, opts ...pulumi.InvokeOption) (*GetUserProgrammaticAccessTokensResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserProgrammaticAccessTokensResult
	err := ctx.Invoke("snowflake:index/getUserProgrammaticAccessTokens:getUserProgrammaticAccessTokens", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserProgrammaticAccessTokens.
type GetUserProgrammaticAccessTokensArgs struct {
	// Returns programmatic access tokens for the specified user.
	ForUser string `pulumi:"forUser"`
}

// A collection of values returned by getUserProgrammaticAccessTokens.
type GetUserProgrammaticAccessTokensResult struct {
	// Returns programmatic access tokens for the specified user.
	ForUser string `pulumi:"forUser"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Holds the aggregated output of all user programmatic access tokens details queries.
	UserProgrammaticAccessTokens []GetUserProgrammaticAccessTokensUserProgrammaticAccessToken `pulumi:"userProgrammaticAccessTokens"`
}

func GetUserProgrammaticAccessTokensOutput(ctx *pulumi.Context, args GetUserProgrammaticAccessTokensOutputArgs, opts ...pulumi.InvokeOption) GetUserProgrammaticAccessTokensResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserProgrammaticAccessTokensResultOutput, error) {
			args := v.(GetUserProgrammaticAccessTokensArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getUserProgrammaticAccessTokens:getUserProgrammaticAccessTokens", args, GetUserProgrammaticAccessTokensResultOutput{}, options).(GetUserProgrammaticAccessTokensResultOutput), nil
		}).(GetUserProgrammaticAccessTokensResultOutput)
}

// A collection of arguments for invoking getUserProgrammaticAccessTokens.
type GetUserProgrammaticAccessTokensOutputArgs struct {
	// Returns programmatic access tokens for the specified user.
	ForUser pulumi.StringInput `pulumi:"forUser"`
}

func (GetUserProgrammaticAccessTokensOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserProgrammaticAccessTokensArgs)(nil)).Elem()
}

// A collection of values returned by getUserProgrammaticAccessTokens.
type GetUserProgrammaticAccessTokensResultOutput struct{ *pulumi.OutputState }

func (GetUserProgrammaticAccessTokensResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserProgrammaticAccessTokensResult)(nil)).Elem()
}

func (o GetUserProgrammaticAccessTokensResultOutput) ToGetUserProgrammaticAccessTokensResultOutput() GetUserProgrammaticAccessTokensResultOutput {
	return o
}

func (o GetUserProgrammaticAccessTokensResultOutput) ToGetUserProgrammaticAccessTokensResultOutputWithContext(ctx context.Context) GetUserProgrammaticAccessTokensResultOutput {
	return o
}

// Returns programmatic access tokens for the specified user.
func (o GetUserProgrammaticAccessTokensResultOutput) ForUser() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserProgrammaticAccessTokensResult) string { return v.ForUser }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserProgrammaticAccessTokensResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserProgrammaticAccessTokensResult) string { return v.Id }).(pulumi.StringOutput)
}

// Holds the aggregated output of all user programmatic access tokens details queries.
func (o GetUserProgrammaticAccessTokensResultOutput) UserProgrammaticAccessTokens() GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenArrayOutput {
	return o.ApplyT(func(v GetUserProgrammaticAccessTokensResult) []GetUserProgrammaticAccessTokensUserProgrammaticAccessToken {
		return v.UserProgrammaticAccessTokens
	}).(GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserProgrammaticAccessTokensResultOutput{})
}
