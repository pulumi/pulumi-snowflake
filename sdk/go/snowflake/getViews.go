// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetViews(ctx *pulumi.Context, args *GetViewsArgs, opts ...pulumi.InvokeOption) (*GetViewsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetViewsResult
	err := ctx.Invoke("snowflake:index/getViews:getViews", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getViews.
type GetViewsArgs struct {
	In           *GetViewsIn    `pulumi:"in"`
	Like         *string        `pulumi:"like"`
	Limit        *GetViewsLimit `pulumi:"limit"`
	StartsWith   *string        `pulumi:"startsWith"`
	WithDescribe *bool          `pulumi:"withDescribe"`
}

// A collection of values returned by getViews.
type GetViewsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string         `pulumi:"id"`
	In           *GetViewsIn    `pulumi:"in"`
	Like         *string        `pulumi:"like"`
	Limit        *GetViewsLimit `pulumi:"limit"`
	StartsWith   *string        `pulumi:"startsWith"`
	Views        []GetViewsView `pulumi:"views"`
	WithDescribe *bool          `pulumi:"withDescribe"`
}

func GetViewsOutput(ctx *pulumi.Context, args GetViewsOutputArgs, opts ...pulumi.InvokeOption) GetViewsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetViewsResultOutput, error) {
			args := v.(GetViewsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getViews:getViews", args, GetViewsResultOutput{}, options).(GetViewsResultOutput), nil
		}).(GetViewsResultOutput)
}

// A collection of arguments for invoking getViews.
type GetViewsOutputArgs struct {
	In           GetViewsInPtrInput    `pulumi:"in"`
	Like         pulumi.StringPtrInput `pulumi:"like"`
	Limit        GetViewsLimitPtrInput `pulumi:"limit"`
	StartsWith   pulumi.StringPtrInput `pulumi:"startsWith"`
	WithDescribe pulumi.BoolPtrInput   `pulumi:"withDescribe"`
}

func (GetViewsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsArgs)(nil)).Elem()
}

// A collection of values returned by getViews.
type GetViewsResultOutput struct{ *pulumi.OutputState }

func (GetViewsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetViewsResult)(nil)).Elem()
}

func (o GetViewsResultOutput) ToGetViewsResultOutput() GetViewsResultOutput {
	return o
}

func (o GetViewsResultOutput) ToGetViewsResultOutputWithContext(ctx context.Context) GetViewsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetViewsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetViewsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetViewsResultOutput) In() GetViewsInPtrOutput {
	return o.ApplyT(func(v GetViewsResult) *GetViewsIn { return v.In }).(GetViewsInPtrOutput)
}

func (o GetViewsResultOutput) Like() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetViewsResult) *string { return v.Like }).(pulumi.StringPtrOutput)
}

func (o GetViewsResultOutput) Limit() GetViewsLimitPtrOutput {
	return o.ApplyT(func(v GetViewsResult) *GetViewsLimit { return v.Limit }).(GetViewsLimitPtrOutput)
}

func (o GetViewsResultOutput) StartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetViewsResult) *string { return v.StartsWith }).(pulumi.StringPtrOutput)
}

func (o GetViewsResultOutput) Views() GetViewsViewArrayOutput {
	return o.ApplyT(func(v GetViewsResult) []GetViewsView { return v.Views }).(GetViewsViewArrayOutput)
}

func (o GetViewsResultOutput) WithDescribe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetViewsResult) *bool { return v.WithDescribe }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetViewsResultOutput{})
}
