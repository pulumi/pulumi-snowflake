// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source used to get details of filtered compute pools. Filtering is aligned with the current possibilities for [SHOW COMPUTE POOLS](https://docs.snowflake.com/en/sql-reference/sql/show-compute-pools) query. The results of SHOW and DESCRIBE are encapsulated in one output collection `computePools`.
func GetComputePools(ctx *pulumi.Context, args *GetComputePoolsArgs, opts ...pulumi.InvokeOption) (*GetComputePoolsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetComputePoolsResult
	err := ctx.Invoke("snowflake:index/getComputePools:getComputePools", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputePools.
type GetComputePoolsArgs struct {
	// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
	Like *string `pulumi:"like"`
	// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
	Limit *GetComputePoolsLimit `pulumi:"limit"`
	// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
	StartsWith *string `pulumi:"startsWith"`
	// (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
	WithDescribe *bool `pulumi:"withDescribe"`
}

// A collection of values returned by getComputePools.
type GetComputePoolsResult struct {
	// Holds the aggregated output of all compute pools details queries.
	ComputePools []GetComputePoolsComputePool `pulumi:"computePools"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
	Like *string `pulumi:"like"`
	// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
	Limit *GetComputePoolsLimit `pulumi:"limit"`
	// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
	StartsWith *string `pulumi:"startsWith"`
	// (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
	WithDescribe *bool `pulumi:"withDescribe"`
}

func GetComputePoolsOutput(ctx *pulumi.Context, args GetComputePoolsOutputArgs, opts ...pulumi.InvokeOption) GetComputePoolsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputePoolsResultOutput, error) {
			args := v.(GetComputePoolsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getComputePools:getComputePools", args, GetComputePoolsResultOutput{}, options).(GetComputePoolsResultOutput), nil
		}).(GetComputePoolsResultOutput)
}

// A collection of arguments for invoking getComputePools.
type GetComputePoolsOutputArgs struct {
	// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
	Like pulumi.StringPtrInput `pulumi:"like"`
	// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
	Limit GetComputePoolsLimitPtrInput `pulumi:"limit"`
	// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
	StartsWith pulumi.StringPtrInput `pulumi:"startsWith"`
	// (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
	WithDescribe pulumi.BoolPtrInput `pulumi:"withDescribe"`
}

func (GetComputePoolsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputePoolsArgs)(nil)).Elem()
}

// A collection of values returned by getComputePools.
type GetComputePoolsResultOutput struct{ *pulumi.OutputState }

func (GetComputePoolsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputePoolsResult)(nil)).Elem()
}

func (o GetComputePoolsResultOutput) ToGetComputePoolsResultOutput() GetComputePoolsResultOutput {
	return o
}

func (o GetComputePoolsResultOutput) ToGetComputePoolsResultOutputWithContext(ctx context.Context) GetComputePoolsResultOutput {
	return o
}

// Holds the aggregated output of all compute pools details queries.
func (o GetComputePoolsResultOutput) ComputePools() GetComputePoolsComputePoolArrayOutput {
	return o.ApplyT(func(v GetComputePoolsResult) []GetComputePoolsComputePool { return v.ComputePools }).(GetComputePoolsComputePoolArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetComputePoolsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputePoolsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
func (o GetComputePoolsResultOutput) Like() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputePoolsResult) *string { return v.Like }).(pulumi.StringPtrOutput)
}

// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
func (o GetComputePoolsResultOutput) Limit() GetComputePoolsLimitPtrOutput {
	return o.ApplyT(func(v GetComputePoolsResult) *GetComputePoolsLimit { return v.Limit }).(GetComputePoolsLimitPtrOutput)
}

// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
func (o GetComputePoolsResultOutput) StartsWith() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputePoolsResult) *string { return v.StartsWith }).(pulumi.StringPtrOutput)
}

// (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
func (o GetComputePoolsResultOutput) WithDescribe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetComputePoolsResult) *bool { return v.WithDescribe }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputePoolsResultOutput{})
}
