// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `previewFeaturesEnabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := snowflake.GetStorageIntegrations(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// > **Note** If a field has a default value, it is shown next to the type in the schema.
func GetStorageIntegrations(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetStorageIntegrationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStorageIntegrationsResult
	err := ctx.Invoke("snowflake:index/getStorageIntegrations:getStorageIntegrations", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getStorageIntegrations.
type GetStorageIntegrationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The storage integrations in the database
	StorageIntegrations []GetStorageIntegrationsStorageIntegration `pulumi:"storageIntegrations"`
}

func GetStorageIntegrationsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetStorageIntegrationsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetStorageIntegrationsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("snowflake:index/getStorageIntegrations:getStorageIntegrations", nil, GetStorageIntegrationsResultOutput{}, options).(GetStorageIntegrationsResultOutput), nil
	}).(GetStorageIntegrationsResultOutput)
}

// A collection of values returned by getStorageIntegrations.
type GetStorageIntegrationsResultOutput struct{ *pulumi.OutputState }

func (GetStorageIntegrationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageIntegrationsResult)(nil)).Elem()
}

func (o GetStorageIntegrationsResultOutput) ToGetStorageIntegrationsResultOutput() GetStorageIntegrationsResultOutput {
	return o
}

func (o GetStorageIntegrationsResultOutput) ToGetStorageIntegrationsResultOutputWithContext(ctx context.Context) GetStorageIntegrationsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetStorageIntegrationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageIntegrationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The storage integrations in the database
func (o GetStorageIntegrationsResultOutput) StorageIntegrations() GetStorageIntegrationsStorageIntegrationArrayOutput {
	return o.ApplyT(func(v GetStorageIntegrationsResult) []GetStorageIntegrationsStorageIntegration {
		return v.StorageIntegrations
	}).(GetStorageIntegrationsStorageIntegrationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStorageIntegrationsResultOutput{})
}
