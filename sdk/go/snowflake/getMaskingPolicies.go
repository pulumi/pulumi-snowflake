// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := snowflake.GetMaskingPolicies(ctx, &GetMaskingPoliciesArgs{
//				Database: "MYDB",
//				Schema:   "MYSCHEMA",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetMaskingPolicies(ctx *pulumi.Context, args *GetMaskingPoliciesArgs, opts ...pulumi.InvokeOption) (*GetMaskingPoliciesResult, error) {
	var rv GetMaskingPoliciesResult
	err := ctx.Invoke("snowflake:index/getMaskingPolicies:getMaskingPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMaskingPolicies.
type GetMaskingPoliciesArgs struct {
	// The database from which to return the schemas from.
	Database string `pulumi:"database"`
	// The schema from which to return the maskingPolicies from.
	Schema string `pulumi:"schema"`
}

// A collection of values returned by getMaskingPolicies.
type GetMaskingPoliciesResult struct {
	// The database from which to return the schemas from.
	Database string `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The maskingPolicies in the schema
	MaskingPolicies []GetMaskingPoliciesMaskingPolicy `pulumi:"maskingPolicies"`
	// The schema from which to return the maskingPolicies from.
	Schema string `pulumi:"schema"`
}

func GetMaskingPoliciesOutput(ctx *pulumi.Context, args GetMaskingPoliciesOutputArgs, opts ...pulumi.InvokeOption) GetMaskingPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMaskingPoliciesResult, error) {
			args := v.(GetMaskingPoliciesArgs)
			r, err := GetMaskingPolicies(ctx, &args, opts...)
			var s GetMaskingPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMaskingPoliciesResultOutput)
}

// A collection of arguments for invoking getMaskingPolicies.
type GetMaskingPoliciesOutputArgs struct {
	// The database from which to return the schemas from.
	Database pulumi.StringInput `pulumi:"database"`
	// The schema from which to return the maskingPolicies from.
	Schema pulumi.StringInput `pulumi:"schema"`
}

func (GetMaskingPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getMaskingPolicies.
type GetMaskingPoliciesResultOutput struct{ *pulumi.OutputState }

func (GetMaskingPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMaskingPoliciesResult)(nil)).Elem()
}

func (o GetMaskingPoliciesResultOutput) ToGetMaskingPoliciesResultOutput() GetMaskingPoliciesResultOutput {
	return o
}

func (o GetMaskingPoliciesResultOutput) ToGetMaskingPoliciesResultOutputWithContext(ctx context.Context) GetMaskingPoliciesResultOutput {
	return o
}

// The database from which to return the schemas from.
func (o GetMaskingPoliciesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPoliciesResult) string { return v.Database }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMaskingPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The maskingPolicies in the schema
func (o GetMaskingPoliciesResultOutput) MaskingPolicies() GetMaskingPoliciesMaskingPolicyArrayOutput {
	return o.ApplyT(func(v GetMaskingPoliciesResult) []GetMaskingPoliciesMaskingPolicy { return v.MaskingPolicies }).(GetMaskingPoliciesMaskingPolicyArrayOutput)
}

// The schema from which to return the maskingPolicies from.
func (o GetMaskingPoliciesResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetMaskingPoliciesResult) string { return v.Schema }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMaskingPoliciesResultOutput{})
}
