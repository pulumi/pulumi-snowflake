// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type TokenAccessor struct {
	ClientId      string `pulumi:"clientId"`
	ClientSecret  string `pulumi:"clientSecret"`
	RedirectUri   string `pulumi:"redirectUri"`
	RefreshToken  string `pulumi:"refreshToken"`
	TokenEndpoint string `pulumi:"tokenEndpoint"`
}

// TokenAccessorInput is an input type that accepts TokenAccessorArgs and TokenAccessorOutput values.
// You can construct a concrete instance of `TokenAccessorInput` via:
//
//	TokenAccessorArgs{...}
type TokenAccessorInput interface {
	pulumi.Input

	ToTokenAccessorOutput() TokenAccessorOutput
	ToTokenAccessorOutputWithContext(context.Context) TokenAccessorOutput
}

type TokenAccessorArgs struct {
	ClientId      pulumi.StringInput `pulumi:"clientId"`
	ClientSecret  pulumi.StringInput `pulumi:"clientSecret"`
	RedirectUri   pulumi.StringInput `pulumi:"redirectUri"`
	RefreshToken  pulumi.StringInput `pulumi:"refreshToken"`
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
}

func (TokenAccessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenAccessor)(nil)).Elem()
}

func (i TokenAccessorArgs) ToTokenAccessorOutput() TokenAccessorOutput {
	return i.ToTokenAccessorOutputWithContext(context.Background())
}

func (i TokenAccessorArgs) ToTokenAccessorOutputWithContext(ctx context.Context) TokenAccessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TokenAccessorOutput)
}

func (i TokenAccessorArgs) ToOutput(ctx context.Context) pulumix.Output[TokenAccessor] {
	return pulumix.Output[TokenAccessor]{
		OutputState: i.ToTokenAccessorOutputWithContext(ctx).OutputState,
	}
}

type TokenAccessorOutput struct{ *pulumi.OutputState }

func (TokenAccessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TokenAccessor)(nil)).Elem()
}

func (o TokenAccessorOutput) ToTokenAccessorOutput() TokenAccessorOutput {
	return o
}

func (o TokenAccessorOutput) ToTokenAccessorOutputWithContext(ctx context.Context) TokenAccessorOutput {
	return o
}

func (o TokenAccessorOutput) ToOutput(ctx context.Context) pulumix.Output[TokenAccessor] {
	return pulumix.Output[TokenAccessor]{
		OutputState: o.OutputState,
	}
}

func (o TokenAccessorOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v TokenAccessor) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o TokenAccessorOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v TokenAccessor) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o TokenAccessorOutput) RedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v TokenAccessor) string { return v.RedirectUri }).(pulumi.StringOutput)
}

func (o TokenAccessorOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v TokenAccessor) string { return v.RefreshToken }).(pulumi.StringOutput)
}

func (o TokenAccessorOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TokenAccessor) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TokenAccessorInput)(nil)).Elem(), TokenAccessorArgs{})
	pulumi.RegisterOutputType(TokenAccessorOutput{})
}
