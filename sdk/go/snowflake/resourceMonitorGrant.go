// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// ```sh
//  $ pulumi import snowflake:index/resourceMonitorGrant:ResourceMonitorGrant example name
// ```
type ResourceMonitorGrant struct {
	pulumi.CustomResourceState

	// Identifier for the resource monitor; must be unique for your account.
	MonitorName pulumi.StringOutput `pulumi:"monitorName"`
	// The privilege to grant on the resource monitor.
	Privilege pulumi.StringPtrOutput `pulumi:"privilege"`
	// Grants privilege to these roles.
	Roles pulumi.StringArrayOutput `pulumi:"roles"`
	// When this is set to true, allows the recipient role to grant the privileges to other roles.
	WithGrantOption pulumi.BoolPtrOutput `pulumi:"withGrantOption"`
}

// NewResourceMonitorGrant registers a new resource with the given unique name, arguments, and options.
func NewResourceMonitorGrant(ctx *pulumi.Context,
	name string, args *ResourceMonitorGrantArgs, opts ...pulumi.ResourceOption) (*ResourceMonitorGrant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MonitorName == nil {
		return nil, errors.New("invalid value for required argument 'MonitorName'")
	}
	var resource ResourceMonitorGrant
	err := ctx.RegisterResource("snowflake:index/resourceMonitorGrant:ResourceMonitorGrant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceMonitorGrant gets an existing ResourceMonitorGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceMonitorGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceMonitorGrantState, opts ...pulumi.ResourceOption) (*ResourceMonitorGrant, error) {
	var resource ResourceMonitorGrant
	err := ctx.ReadResource("snowflake:index/resourceMonitorGrant:ResourceMonitorGrant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceMonitorGrant resources.
type resourceMonitorGrantState struct {
	// Identifier for the resource monitor; must be unique for your account.
	MonitorName *string `pulumi:"monitorName"`
	// The privilege to grant on the resource monitor.
	Privilege *string `pulumi:"privilege"`
	// Grants privilege to these roles.
	Roles []string `pulumi:"roles"`
	// When this is set to true, allows the recipient role to grant the privileges to other roles.
	WithGrantOption *bool `pulumi:"withGrantOption"`
}

type ResourceMonitorGrantState struct {
	// Identifier for the resource monitor; must be unique for your account.
	MonitorName pulumi.StringPtrInput
	// The privilege to grant on the resource monitor.
	Privilege pulumi.StringPtrInput
	// Grants privilege to these roles.
	Roles pulumi.StringArrayInput
	// When this is set to true, allows the recipient role to grant the privileges to other roles.
	WithGrantOption pulumi.BoolPtrInput
}

func (ResourceMonitorGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceMonitorGrantState)(nil)).Elem()
}

type resourceMonitorGrantArgs struct {
	// Identifier for the resource monitor; must be unique for your account.
	MonitorName string `pulumi:"monitorName"`
	// The privilege to grant on the resource monitor.
	Privilege *string `pulumi:"privilege"`
	// Grants privilege to these roles.
	Roles []string `pulumi:"roles"`
	// When this is set to true, allows the recipient role to grant the privileges to other roles.
	WithGrantOption *bool `pulumi:"withGrantOption"`
}

// The set of arguments for constructing a ResourceMonitorGrant resource.
type ResourceMonitorGrantArgs struct {
	// Identifier for the resource monitor; must be unique for your account.
	MonitorName pulumi.StringInput
	// The privilege to grant on the resource monitor.
	Privilege pulumi.StringPtrInput
	// Grants privilege to these roles.
	Roles pulumi.StringArrayInput
	// When this is set to true, allows the recipient role to grant the privileges to other roles.
	WithGrantOption pulumi.BoolPtrInput
}

func (ResourceMonitorGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceMonitorGrantArgs)(nil)).Elem()
}

type ResourceMonitorGrantInput interface {
	pulumi.Input

	ToResourceMonitorGrantOutput() ResourceMonitorGrantOutput
	ToResourceMonitorGrantOutputWithContext(ctx context.Context) ResourceMonitorGrantOutput
}

func (*ResourceMonitorGrant) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMonitorGrant)(nil)).Elem()
}

func (i *ResourceMonitorGrant) ToResourceMonitorGrantOutput() ResourceMonitorGrantOutput {
	return i.ToResourceMonitorGrantOutputWithContext(context.Background())
}

func (i *ResourceMonitorGrant) ToResourceMonitorGrantOutputWithContext(ctx context.Context) ResourceMonitorGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMonitorGrantOutput)
}

// ResourceMonitorGrantArrayInput is an input type that accepts ResourceMonitorGrantArray and ResourceMonitorGrantArrayOutput values.
// You can construct a concrete instance of `ResourceMonitorGrantArrayInput` via:
//
//          ResourceMonitorGrantArray{ ResourceMonitorGrantArgs{...} }
type ResourceMonitorGrantArrayInput interface {
	pulumi.Input

	ToResourceMonitorGrantArrayOutput() ResourceMonitorGrantArrayOutput
	ToResourceMonitorGrantArrayOutputWithContext(context.Context) ResourceMonitorGrantArrayOutput
}

type ResourceMonitorGrantArray []ResourceMonitorGrantInput

func (ResourceMonitorGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceMonitorGrant)(nil)).Elem()
}

func (i ResourceMonitorGrantArray) ToResourceMonitorGrantArrayOutput() ResourceMonitorGrantArrayOutput {
	return i.ToResourceMonitorGrantArrayOutputWithContext(context.Background())
}

func (i ResourceMonitorGrantArray) ToResourceMonitorGrantArrayOutputWithContext(ctx context.Context) ResourceMonitorGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMonitorGrantArrayOutput)
}

// ResourceMonitorGrantMapInput is an input type that accepts ResourceMonitorGrantMap and ResourceMonitorGrantMapOutput values.
// You can construct a concrete instance of `ResourceMonitorGrantMapInput` via:
//
//          ResourceMonitorGrantMap{ "key": ResourceMonitorGrantArgs{...} }
type ResourceMonitorGrantMapInput interface {
	pulumi.Input

	ToResourceMonitorGrantMapOutput() ResourceMonitorGrantMapOutput
	ToResourceMonitorGrantMapOutputWithContext(context.Context) ResourceMonitorGrantMapOutput
}

type ResourceMonitorGrantMap map[string]ResourceMonitorGrantInput

func (ResourceMonitorGrantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceMonitorGrant)(nil)).Elem()
}

func (i ResourceMonitorGrantMap) ToResourceMonitorGrantMapOutput() ResourceMonitorGrantMapOutput {
	return i.ToResourceMonitorGrantMapOutputWithContext(context.Background())
}

func (i ResourceMonitorGrantMap) ToResourceMonitorGrantMapOutputWithContext(ctx context.Context) ResourceMonitorGrantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceMonitorGrantMapOutput)
}

type ResourceMonitorGrantOutput struct{ *pulumi.OutputState }

func (ResourceMonitorGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceMonitorGrant)(nil)).Elem()
}

func (o ResourceMonitorGrantOutput) ToResourceMonitorGrantOutput() ResourceMonitorGrantOutput {
	return o
}

func (o ResourceMonitorGrantOutput) ToResourceMonitorGrantOutputWithContext(ctx context.Context) ResourceMonitorGrantOutput {
	return o
}

type ResourceMonitorGrantArrayOutput struct{ *pulumi.OutputState }

func (ResourceMonitorGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceMonitorGrant)(nil)).Elem()
}

func (o ResourceMonitorGrantArrayOutput) ToResourceMonitorGrantArrayOutput() ResourceMonitorGrantArrayOutput {
	return o
}

func (o ResourceMonitorGrantArrayOutput) ToResourceMonitorGrantArrayOutputWithContext(ctx context.Context) ResourceMonitorGrantArrayOutput {
	return o
}

func (o ResourceMonitorGrantArrayOutput) Index(i pulumi.IntInput) ResourceMonitorGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceMonitorGrant {
		return vs[0].([]*ResourceMonitorGrant)[vs[1].(int)]
	}).(ResourceMonitorGrantOutput)
}

type ResourceMonitorGrantMapOutput struct{ *pulumi.OutputState }

func (ResourceMonitorGrantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceMonitorGrant)(nil)).Elem()
}

func (o ResourceMonitorGrantMapOutput) ToResourceMonitorGrantMapOutput() ResourceMonitorGrantMapOutput {
	return o
}

func (o ResourceMonitorGrantMapOutput) ToResourceMonitorGrantMapOutputWithContext(ctx context.Context) ResourceMonitorGrantMapOutput {
	return o
}

func (o ResourceMonitorGrantMapOutput) MapIndex(k pulumi.StringInput) ResourceMonitorGrantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceMonitorGrant {
		return vs[0].(map[string]*ResourceMonitorGrant)[vs[1].(string)]
	}).(ResourceMonitorGrantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceMonitorGrantInput)(nil)).Elem(), &ResourceMonitorGrant{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceMonitorGrantArrayInput)(nil)).Elem(), ResourceMonitorGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceMonitorGrantMapInput)(nil)).Elem(), ResourceMonitorGrantMap{})
	pulumi.RegisterOutputType(ResourceMonitorGrantOutput{})
	pulumi.RegisterOutputType(ResourceMonitorGrantArrayOutput{})
	pulumi.RegisterOutputType(ResourceMonitorGrantMapOutput{})
}
