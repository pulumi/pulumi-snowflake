// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/v2/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// !> **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `previewFeaturesEnabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
//
// > **Note** If a field has a default value, it is shown next to the type in the schema.
func GetFailoverGroups(ctx *pulumi.Context, args *GetFailoverGroupsArgs, opts ...pulumi.InvokeOption) (*GetFailoverGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFailoverGroupsResult
	err := ctx.Invoke("snowflake:index/getFailoverGroups:getFailoverGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFailoverGroups.
type GetFailoverGroupsArgs struct {
	// Specifies the identifier for the account
	InAccount *string `pulumi:"inAccount"`
}

// A collection of values returned by getFailoverGroups.
type GetFailoverGroupsResult struct {
	// List of all the failover groups available in the system.
	FailoverGroups []GetFailoverGroupsFailoverGroup `pulumi:"failoverGroups"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Specifies the identifier for the account
	InAccount *string `pulumi:"inAccount"`
}

func GetFailoverGroupsOutput(ctx *pulumi.Context, args GetFailoverGroupsOutputArgs, opts ...pulumi.InvokeOption) GetFailoverGroupsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFailoverGroupsResultOutput, error) {
			args := v.(GetFailoverGroupsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("snowflake:index/getFailoverGroups:getFailoverGroups", args, GetFailoverGroupsResultOutput{}, options).(GetFailoverGroupsResultOutput), nil
		}).(GetFailoverGroupsResultOutput)
}

// A collection of arguments for invoking getFailoverGroups.
type GetFailoverGroupsOutputArgs struct {
	// Specifies the identifier for the account
	InAccount pulumi.StringPtrInput `pulumi:"inAccount"`
}

func (GetFailoverGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFailoverGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getFailoverGroups.
type GetFailoverGroupsResultOutput struct{ *pulumi.OutputState }

func (GetFailoverGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFailoverGroupsResult)(nil)).Elem()
}

func (o GetFailoverGroupsResultOutput) ToGetFailoverGroupsResultOutput() GetFailoverGroupsResultOutput {
	return o
}

func (o GetFailoverGroupsResultOutput) ToGetFailoverGroupsResultOutputWithContext(ctx context.Context) GetFailoverGroupsResultOutput {
	return o
}

// List of all the failover groups available in the system.
func (o GetFailoverGroupsResultOutput) FailoverGroups() GetFailoverGroupsFailoverGroupArrayOutput {
	return o.ApplyT(func(v GetFailoverGroupsResult) []GetFailoverGroupsFailoverGroup { return v.FailoverGroups }).(GetFailoverGroupsFailoverGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFailoverGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFailoverGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the identifier for the account
func (o GetFailoverGroupsResultOutput) InAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFailoverGroupsResult) *string { return v.InAccount }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFailoverGroupsResultOutput{})
}
