// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package snowflake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-snowflake/sdk/go/snowflake"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := snowflake.GetResourceMonitors(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetResourceMonitors(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetResourceMonitorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourceMonitorsResult
	err := ctx.Invoke("snowflake:index/getResourceMonitors:getResourceMonitors", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getResourceMonitors.
type GetResourceMonitorsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The resource monitors in the database
	ResourceMonitors []GetResourceMonitorsResourceMonitor `pulumi:"resourceMonitors"`
}

func GetResourceMonitorsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetResourceMonitorsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetResourceMonitorsResult, error) {
		r, err := GetResourceMonitors(ctx, opts...)
		var s GetResourceMonitorsResult
		if r != nil {
			s = *r
		}
		return s, err
	}).(GetResourceMonitorsResultOutput)
}

// A collection of values returned by getResourceMonitors.
type GetResourceMonitorsResultOutput struct{ *pulumi.OutputState }

func (GetResourceMonitorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceMonitorsResult)(nil)).Elem()
}

func (o GetResourceMonitorsResultOutput) ToGetResourceMonitorsResultOutput() GetResourceMonitorsResultOutput {
	return o
}

func (o GetResourceMonitorsResultOutput) ToGetResourceMonitorsResultOutputWithContext(ctx context.Context) GetResourceMonitorsResultOutput {
	return o
}

func (o GetResourceMonitorsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetResourceMonitorsResult] {
	return pulumix.Output[GetResourceMonitorsResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetResourceMonitorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceMonitorsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The resource monitors in the database
func (o GetResourceMonitorsResultOutput) ResourceMonitors() GetResourceMonitorsResourceMonitorArrayOutput {
	return o.ApplyT(func(v GetResourceMonitorsResult) []GetResourceMonitorsResourceMonitor { return v.ResourceMonitors }).(GetResourceMonitorsResourceMonitorArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourceMonitorsResultOutput{})
}
