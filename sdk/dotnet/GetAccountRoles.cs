// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetAccountRoles
    {
        public static Task<GetAccountRolesResult> InvokeAsync(GetAccountRolesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountRolesResult>("snowflake:index/getAccountRoles:getAccountRoles", args ?? new GetAccountRolesArgs(), options.WithDefaults());

        public static Output<GetAccountRolesResult> Invoke(GetAccountRolesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountRolesResult>("snowflake:index/getAccountRoles:getAccountRoles", args ?? new GetAccountRolesInvokeArgs(), options.WithDefaults());

        public static Output<GetAccountRolesResult> Invoke(GetAccountRolesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountRolesResult>("snowflake:index/getAccountRoles:getAccountRoles", args ?? new GetAccountRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountRolesArgs : global::Pulumi.InvokeArgs
    {
        [Input("inClass")]
        public string? InClass { get; set; }

        [Input("like")]
        public string? Like { get; set; }

        public GetAccountRolesArgs()
        {
        }
        public static new GetAccountRolesArgs Empty => new GetAccountRolesArgs();
    }

    public sealed class GetAccountRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("inClass")]
        public Input<string>? InClass { get; set; }

        [Input("like")]
        public Input<string>? Like { get; set; }

        public GetAccountRolesInvokeArgs()
        {
        }
        public static new GetAccountRolesInvokeArgs Empty => new GetAccountRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountRolesResult
    {
        public readonly ImmutableArray<Outputs.GetAccountRolesAccountRoleResult> AccountRoles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InClass;
        public readonly string? Like;

        [OutputConstructor]
        private GetAccountRolesResult(
            ImmutableArray<Outputs.GetAccountRolesAccountRoleResult> accountRoles,

            string id,

            string? inClass,

            string? like)
        {
            AccountRoles = accountRoles;
            Id = id;
            InClass = inClass;
            Like = like;
        }
    }
}
