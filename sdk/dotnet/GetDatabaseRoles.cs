// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetDatabaseRoles
    {
        public static Task<GetDatabaseRolesResult> InvokeAsync(GetDatabaseRolesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseRolesResult>("snowflake:index/getDatabaseRoles:getDatabaseRoles", args ?? new GetDatabaseRolesArgs(), options.WithDefaults());

        public static Output<GetDatabaseRolesResult> Invoke(GetDatabaseRolesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRolesResult>("snowflake:index/getDatabaseRoles:getDatabaseRoles", args ?? new GetDatabaseRolesInvokeArgs(), options.WithDefaults());

        public static Output<GetDatabaseRolesResult> Invoke(GetDatabaseRolesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRolesResult>("snowflake:index/getDatabaseRoles:getDatabaseRoles", args ?? new GetDatabaseRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseRolesArgs : global::Pulumi.InvokeArgs
    {
        [Input("inDatabase", required: true)]
        public string InDatabase { get; set; } = null!;

        [Input("like")]
        public string? Like { get; set; }

        [Input("limit")]
        public Inputs.GetDatabaseRolesLimitArgs? Limit { get; set; }

        public GetDatabaseRolesArgs()
        {
        }
        public static new GetDatabaseRolesArgs Empty => new GetDatabaseRolesArgs();
    }

    public sealed class GetDatabaseRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("inDatabase", required: true)]
        public Input<string> InDatabase { get; set; } = null!;

        [Input("like")]
        public Input<string>? Like { get; set; }

        [Input("limit")]
        public Input<Inputs.GetDatabaseRolesLimitInputArgs>? Limit { get; set; }

        public GetDatabaseRolesInvokeArgs()
        {
        }
        public static new GetDatabaseRolesInvokeArgs Empty => new GetDatabaseRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseRolesResult
    {
        public readonly ImmutableArray<Outputs.GetDatabaseRolesDatabaseRoleResult> DatabaseRoles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InDatabase;
        public readonly string? Like;
        public readonly Outputs.GetDatabaseRolesLimitResult? Limit;

        [OutputConstructor]
        private GetDatabaseRolesResult(
            ImmutableArray<Outputs.GetDatabaseRolesDatabaseRoleResult> databaseRoles,

            string id,

            string inDatabase,

            string? like,

            Outputs.GetDatabaseRolesLimitResult? limit)
        {
            DatabaseRoles = databaseRoles;
            Id = id;
            InDatabase = inDatabase;
            Like = like;
            Limit = limit;
        }
    }
}
