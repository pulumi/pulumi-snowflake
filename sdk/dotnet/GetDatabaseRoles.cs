// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetDatabaseRoles
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dbRoles = Snowflake.GetDatabaseRoles.Invoke(new()
        ///     {
        ///         Database = "MYDB",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetDatabaseRolesResult> InvokeAsync(GetDatabaseRolesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseRolesResult>("snowflake:index/getDatabaseRoles:getDatabaseRoles", args ?? new GetDatabaseRolesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dbRoles = Snowflake.GetDatabaseRoles.Invoke(new()
        ///     {
        ///         Database = "MYDB",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetDatabaseRolesResult> Invoke(GetDatabaseRolesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRolesResult>("snowflake:index/getDatabaseRoles:getDatabaseRoles", args ?? new GetDatabaseRolesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseRolesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database from which to return the database roles from.
        /// </summary>
        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        public GetDatabaseRolesArgs()
        {
        }
        public static new GetDatabaseRolesArgs Empty => new GetDatabaseRolesArgs();
    }

    public sealed class GetDatabaseRolesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database from which to return the database roles from.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        public GetDatabaseRolesInvokeArgs()
        {
        }
        public static new GetDatabaseRolesInvokeArgs Empty => new GetDatabaseRolesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseRolesResult
    {
        /// <summary>
        /// The database from which to return the database roles from.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Lists all the database roles in a specified database.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseRolesDatabaseRoleResult> DatabaseRoles;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDatabaseRolesResult(
            string database,

            ImmutableArray<Outputs.GetDatabaseRolesDatabaseRoleResult> databaseRoles,

            string id)
        {
            Database = database;
            DatabaseRoles = databaseRoles;
            Id = id;
        }
    }
}
