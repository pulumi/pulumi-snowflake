// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Import
    /// 
    /// format is database name | schema name | policy name
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/rowAccessPolicy:RowAccessPolicy example 'dbName|schemaName|policyName'
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/rowAccessPolicy:RowAccessPolicy")]
    public partial class RowAccessPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a comment for the row access policy.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The database in which to create the row access policy.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Output("fullyQualifiedName")]
        public Output<string> FullyQualifiedName { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for the row access policy; must be unique for the database and schema in which the row access policy is created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the SQL expression. The expression can be any boolean-valued SQL expression.
        /// </summary>
        [Output("rowAccessExpression")]
        public Output<string> RowAccessExpression { get; private set; } = null!;

        /// <summary>
        /// The schema in which to create the row access policy.
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        /// <summary>
        /// Specifies signature (arguments) for the row access policy (uppercase and sorted to avoid recreation of resource). A signature specifies a set of attributes that must be considered to determine whether the row is accessible. The attribute values come from the database object (e.g. table or view) to be protected by the row access policy.
        /// </summary>
        [Output("signature")]
        public Output<ImmutableDictionary<string, string>> Signature { get; private set; } = null!;


        /// <summary>
        /// Create a RowAccessPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RowAccessPolicy(string name, RowAccessPolicyArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/rowAccessPolicy:RowAccessPolicy", name, args ?? new RowAccessPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RowAccessPolicy(string name, Input<string> id, RowAccessPolicyState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/rowAccessPolicy:RowAccessPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RowAccessPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RowAccessPolicy Get(string name, Input<string> id, RowAccessPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new RowAccessPolicy(name, id, state, options);
        }
    }

    public sealed class RowAccessPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the row access policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The database in which to create the row access policy.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier for the row access policy; must be unique for the database and schema in which the row access policy is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the SQL expression. The expression can be any boolean-valued SQL expression.
        /// </summary>
        [Input("rowAccessExpression", required: true)]
        public Input<string> RowAccessExpression { get; set; } = null!;

        /// <summary>
        /// The schema in which to create the row access policy.
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        [Input("signature", required: true)]
        private InputMap<string>? _signature;

        /// <summary>
        /// Specifies signature (arguments) for the row access policy (uppercase and sorted to avoid recreation of resource). A signature specifies a set of attributes that must be considered to determine whether the row is accessible. The attribute values come from the database object (e.g. table or view) to be protected by the row access policy.
        /// </summary>
        public InputMap<string> Signature
        {
            get => _signature ?? (_signature = new InputMap<string>());
            set => _signature = value;
        }

        public RowAccessPolicyArgs()
        {
        }
        public static new RowAccessPolicyArgs Empty => new RowAccessPolicyArgs();
    }

    public sealed class RowAccessPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the row access policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The database in which to create the row access policy.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Input("fullyQualifiedName")]
        public Input<string>? FullyQualifiedName { get; set; }

        /// <summary>
        /// Specifies the identifier for the row access policy; must be unique for the database and schema in which the row access policy is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the SQL expression. The expression can be any boolean-valued SQL expression.
        /// </summary>
        [Input("rowAccessExpression")]
        public Input<string>? RowAccessExpression { get; set; }

        /// <summary>
        /// The schema in which to create the row access policy.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        [Input("signature")]
        private InputMap<string>? _signature;

        /// <summary>
        /// Specifies signature (arguments) for the row access policy (uppercase and sorted to avoid recreation of resource). A signature specifies a set of attributes that must be considered to determine whether the row is accessible. The attribute values come from the database object (e.g. table or view) to be protected by the row access policy.
        /// </summary>
        public InputMap<string> Signature
        {
            get => _signature ?? (_signature = new InputMap<string>());
            set => _signature = value;
        }

        public RowAccessPolicyState()
        {
        }
        public static new RowAccessPolicyState Empty => new RowAccessPolicyState();
    }
}
