// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    [SnowflakeResourceType("snowflake:index/roleOwnershipGrant:RoleOwnershipGrant")]
    public partial class RoleOwnershipGrant : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to
        /// a new role.
        /// </summary>
        [Output("currentGrants")]
        public Output<string?> CurrentGrants { get; private set; } = null!;

        /// <summary>
        /// The name of the role ownership is granted on.
        /// </summary>
        [Output("onRoleName")]
        public Output<string> OnRoleName { get; private set; } = null!;

        /// <summary>
        /// The name of the role to grant ownership. Please ensure that the role that terraform is using is granted access.
        /// </summary>
        [Output("toRoleName")]
        public Output<string> ToRoleName { get; private set; } = null!;


        /// <summary>
        /// Create a RoleOwnershipGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoleOwnershipGrant(string name, RoleOwnershipGrantArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/roleOwnershipGrant:RoleOwnershipGrant", name, args ?? new RoleOwnershipGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RoleOwnershipGrant(string name, Input<string> id, RoleOwnershipGrantState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/roleOwnershipGrant:RoleOwnershipGrant", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoleOwnershipGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoleOwnershipGrant Get(string name, Input<string> id, RoleOwnershipGrantState? state = null, CustomResourceOptions? options = null)
        {
            return new RoleOwnershipGrant(name, id, state, options);
        }
    }

    public sealed class RoleOwnershipGrantArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to
        /// a new role.
        /// </summary>
        [Input("currentGrants")]
        public Input<string>? CurrentGrants { get; set; }

        /// <summary>
        /// The name of the role ownership is granted on.
        /// </summary>
        [Input("onRoleName", required: true)]
        public Input<string> OnRoleName { get; set; } = null!;

        /// <summary>
        /// The name of the role to grant ownership. Please ensure that the role that terraform is using is granted access.
        /// </summary>
        [Input("toRoleName", required: true)]
        public Input<string> ToRoleName { get; set; } = null!;

        public RoleOwnershipGrantArgs()
        {
        }
    }

    public sealed class RoleOwnershipGrantState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to remove or transfer all existing outbound privileges on the object when ownership is transferred to
        /// a new role.
        /// </summary>
        [Input("currentGrants")]
        public Input<string>? CurrentGrants { get; set; }

        /// <summary>
        /// The name of the role ownership is granted on.
        /// </summary>
        [Input("onRoleName")]
        public Input<string>? OnRoleName { get; set; }

        /// <summary>
        /// The name of the role to grant ownership. Please ensure that the role that terraform is using is granted access.
        /// </summary>
        [Input("toRoleName")]
        public Input<string>? ToRoleName { get; set; }

        public RoleOwnershipGrantState()
        {
        }
    }
}
