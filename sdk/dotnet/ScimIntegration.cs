// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Snowflake = Pulumi.Snowflake;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var aad = new Snowflake.ScimIntegration("aad", new()
    ///     {
    ///         NetworkPolicy = "AAD_NETWORK_POLICY",
    ///         ProvisionerRole = "AAD_PROVISIONER",
    ///         ScimClient = "AZURE",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/scimIntegration:ScimIntegration example name
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/scimIntegration:ScimIntegration")]
    public partial class ScimIntegration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Date and time when the SCIM integration was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the SCIM integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies an existing network policy active for your account. The network policy restricts the list of user IP addresses when exchanging an authorization code for an access or refresh token and when using a refresh token to obtain a new access token. If this parameter is not set, the network policy for the account (if any) is used instead.
        /// </summary>
        [Output("networkPolicy")]
        public Output<string?> NetworkPolicy { get; private set; } = null!;

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM.
        /// </summary>
        [Output("provisionerRole")]
        public Output<string> ProvisionerRole { get; private set; } = null!;

        /// <summary>
        /// Specifies the client type for the scim integration
        /// </summary>
        [Output("scimClient")]
        public Output<string> ScimClient { get; private set; } = null!;


        /// <summary>
        /// Create a ScimIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScimIntegration(string name, ScimIntegrationArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/scimIntegration:ScimIntegration", name, args ?? new ScimIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScimIntegration(string name, Input<string> id, ScimIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/scimIntegration:ScimIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScimIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScimIntegration Get(string name, Input<string> id, ScimIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new ScimIntegration(name, id, state, options);
        }
    }

    public sealed class ScimIntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the name of the SCIM integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies an existing network policy active for your account. The network policy restricts the list of user IP addresses when exchanging an authorization code for an access or refresh token and when using a refresh token to obtain a new access token. If this parameter is not set, the network policy for the account (if any) is used instead.
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM.
        /// </summary>
        [Input("provisionerRole", required: true)]
        public Input<string> ProvisionerRole { get; set; } = null!;

        /// <summary>
        /// Specifies the client type for the scim integration
        /// </summary>
        [Input("scimClient", required: true)]
        public Input<string> ScimClient { get; set; } = null!;

        public ScimIntegrationArgs()
        {
        }
        public static new ScimIntegrationArgs Empty => new ScimIntegrationArgs();
    }

    public sealed class ScimIntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Date and time when the SCIM integration was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Specifies the name of the SCIM integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies an existing network policy active for your account. The network policy restricts the list of user IP addresses when exchanging an authorization code for an access or refresh token and when using a refresh token to obtain a new access token. If this parameter is not set, the network policy for the account (if any) is used instead.
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM.
        /// </summary>
        [Input("provisionerRole")]
        public Input<string>? ProvisionerRole { get; set; }

        /// <summary>
        /// Specifies the client type for the scim integration
        /// </summary>
        [Input("scimClient")]
        public Input<string>? ScimClient { get; set; }

        public ScimIntegrationState()
        {
        }
        public static new ScimIntegrationState Empty => new ScimIntegrationState();
    }
}
