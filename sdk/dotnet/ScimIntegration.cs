// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/scimIntegration:ScimIntegration example '"&lt;integration_name&gt;"'
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/scimIntegration:ScimIntegration")]
    public partial class ScimIntegration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a comment for the integration.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
        /// </summary>
        [Output("describeOutputs")]
        public Output<ImmutableArray<Outputs.ScimIntegrationDescribeOutput>> DescribeOutputs { get; private set; } = null!;

        /// <summary>
        /// Specify whether the security integration is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Output("fullyQualifiedName")]
        public Output<string> FullyQualifiedName { get; private set; } = null!;

        /// <summary>
        /// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
        /// </summary>
        [Output("networkPolicy")]
        public Output<string?> NetworkPolicy { get; private set; } = null!;

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
        /// </summary>
        [Output("runAsRole")]
        public Output<string> RunAsRole { get; private set; } = null!;

        /// <summary>
        /// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
        /// </summary>
        [Output("scimClient")]
        public Output<string> ScimClient { get; private set; } = null!;

        /// <summary>
        /// Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
        /// </summary>
        [Output("showOutputs")]
        public Output<ImmutableArray<Outputs.ScimIntegrationShowOutput>> ShowOutputs { get; private set; } = null!;

        /// <summary>
        /// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
        /// </summary>
        [Output("syncPassword")]
        public Output<string?> SyncPassword { get; private set; } = null!;


        /// <summary>
        /// Create a ScimIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScimIntegration(string name, ScimIntegrationArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/scimIntegration:ScimIntegration", name, args ?? new ScimIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScimIntegration(string name, Input<string> id, ScimIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/scimIntegration:ScimIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScimIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScimIntegration Get(string name, Input<string> id, ScimIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new ScimIntegration(name, id, state, options);
        }
    }

    public sealed class ScimIntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the integration.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Specify whether the security integration is enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
        /// </summary>
        [Input("runAsRole", required: true)]
        public Input<string> RunAsRole { get; set; } = null!;

        /// <summary>
        /// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
        /// </summary>
        [Input("scimClient", required: true)]
        public Input<string> ScimClient { get; set; } = null!;

        /// <summary>
        /// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
        /// </summary>
        [Input("syncPassword")]
        public Input<string>? SyncPassword { get; set; }

        public ScimIntegrationArgs()
        {
        }
        public static new ScimIntegrationArgs Empty => new ScimIntegrationArgs();
    }

    public sealed class ScimIntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the integration.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("describeOutputs")]
        private InputList<Inputs.ScimIntegrationDescribeOutputGetArgs>? _describeOutputs;

        /// <summary>
        /// Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
        /// </summary>
        public InputList<Inputs.ScimIntegrationDescribeOutputGetArgs> DescribeOutputs
        {
            get => _describeOutputs ?? (_describeOutputs = new InputList<Inputs.ScimIntegrationDescribeOutputGetArgs>());
            set => _describeOutputs = value;
        }

        /// <summary>
        /// Specify whether the security integration is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Input("fullyQualifiedName")]
        public Input<string>? FullyQualifiedName { get; set; }

        /// <summary>
        /// String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see docs.
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
        /// </summary>
        [Input("runAsRole")]
        public Input<string>? RunAsRole { get; set; }

        /// <summary>
        /// Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
        /// </summary>
        [Input("scimClient")]
        public Input<string>? ScimClient { get; set; }

        [Input("showOutputs")]
        private InputList<Inputs.ScimIntegrationShowOutputGetArgs>? _showOutputs;

        /// <summary>
        /// Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
        /// </summary>
        public InputList<Inputs.ScimIntegrationShowOutputGetArgs> ShowOutputs
        {
            get => _showOutputs ?? (_showOutputs = new InputList<Inputs.ScimIntegrationShowOutputGetArgs>());
            set => _showOutputs = value;
        }

        /// <summary>
        /// (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: "true" or "false". When the value is not set in the configuration the provider will put "default" there which means to use the Snowflake default for this value.
        /// </summary>
        [Input("syncPassword")]
        public Input<string>? SyncPassword { get; set; }

        public ScimIntegrationState()
        {
        }
        public static new ScimIntegrationState Empty => new ScimIntegrationState();
    }
}
