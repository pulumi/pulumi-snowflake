// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetComputePools
    {
        /// <summary>
        /// Data source used to get details of filtered compute pools. Filtering is aligned with the current possibilities for [SHOW COMPUTE POOLS](https://docs.snowflake.com/en/sql-reference/sql/show-compute-pools) query. The results of SHOW and DESCRIBE are encapsulated in one output collection `ComputePools`.
        /// </summary>
        public static Task<GetComputePoolsResult> InvokeAsync(GetComputePoolsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputePoolsResult>("snowflake:index/getComputePools:getComputePools", args ?? new GetComputePoolsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source used to get details of filtered compute pools. Filtering is aligned with the current possibilities for [SHOW COMPUTE POOLS](https://docs.snowflake.com/en/sql-reference/sql/show-compute-pools) query. The results of SHOW and DESCRIBE are encapsulated in one output collection `ComputePools`.
        /// </summary>
        public static Output<GetComputePoolsResult> Invoke(GetComputePoolsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputePoolsResult>("snowflake:index/getComputePools:getComputePools", args ?? new GetComputePoolsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source used to get details of filtered compute pools. Filtering is aligned with the current possibilities for [SHOW COMPUTE POOLS](https://docs.snowflake.com/en/sql-reference/sql/show-compute-pools) query. The results of SHOW and DESCRIBE are encapsulated in one output collection `ComputePools`.
        /// </summary>
        public static Output<GetComputePoolsResult> Invoke(GetComputePoolsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputePoolsResult>("snowflake:index/getComputePools:getComputePools", args ?? new GetComputePoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputePoolsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        [Input("like")]
        public string? Like { get; set; }

        /// <summary>
        /// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `StartsWith` or `Like`.
        /// </summary>
        [Input("limit")]
        public Inputs.GetComputePoolsLimitArgs? Limit { get; set; }

        /// <summary>
        /// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
        /// </summary>
        [Input("startsWith")]
        public string? StartsWith { get; set; }

        /// <summary>
        /// (Default: `True`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
        /// </summary>
        [Input("withDescribe")]
        public bool? WithDescribe { get; set; }

        public GetComputePoolsArgs()
        {
        }
        public static new GetComputePoolsArgs Empty => new GetComputePoolsArgs();
    }

    public sealed class GetComputePoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        [Input("like")]
        public Input<string>? Like { get; set; }

        /// <summary>
        /// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `StartsWith` or `Like`.
        /// </summary>
        [Input("limit")]
        public Input<Inputs.GetComputePoolsLimitInputArgs>? Limit { get; set; }

        /// <summary>
        /// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
        /// </summary>
        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        /// <summary>
        /// (Default: `True`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
        /// </summary>
        [Input("withDescribe")]
        public Input<bool>? WithDescribe { get; set; }

        public GetComputePoolsInvokeArgs()
        {
        }
        public static new GetComputePoolsInvokeArgs Empty => new GetComputePoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputePoolsResult
    {
        /// <summary>
        /// Holds the aggregated output of all compute pools details queries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetComputePoolsComputePoolResult> ComputePools;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        public readonly string? Like;
        /// <summary>
        /// Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `StartsWith` or `Like`.
        /// </summary>
        public readonly Outputs.GetComputePoolsLimitResult? Limit;
        /// <summary>
        /// Filters the output with **case-sensitive** characters indicating the beginning of the object name.
        /// </summary>
        public readonly string? StartsWith;
        /// <summary>
        /// (Default: `True`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
        /// </summary>
        public readonly bool? WithDescribe;

        [OutputConstructor]
        private GetComputePoolsResult(
            ImmutableArray<Outputs.GetComputePoolsComputePoolResult> computePools,

            string id,

            string? like,

            Outputs.GetComputePoolsLimitResult? limit,

            string? startsWith,

            bool? withDescribe)
        {
            ComputePools = computePools;
            Id = id;
            Like = like;
            Limit = limit;
            StartsWith = startsWith;
            WithDescribe = withDescribe;
        }
    }
}
