// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetDatabaseRole
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dbRole = Snowflake.GetDatabaseRole.Invoke(new()
        ///     {
        ///         Database = "MYDB",
        ///         Name = "DBROLE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseRoleResult> InvokeAsync(GetDatabaseRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseRoleResult>("snowflake:index/getDatabaseRole:getDatabaseRole", args ?? new GetDatabaseRoleArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dbRole = Snowflake.GetDatabaseRole.Invoke(new()
        ///     {
        ///         Database = "MYDB",
        ///         Name = "DBROLE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseRoleResult> Invoke(GetDatabaseRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRoleResult>("snowflake:index/getDatabaseRole:getDatabaseRole", args ?? new GetDatabaseRoleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dbRole = Snowflake.GetDatabaseRole.Invoke(new()
        ///     {
        ///         Database = "MYDB",
        ///         Name = "DBROLE",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseRoleResult> Invoke(GetDatabaseRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseRoleResult>("snowflake:index/getDatabaseRole:getDatabaseRole", args ?? new GetDatabaseRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database from which to return the database role from.
        /// </summary>
        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        /// <summary>
        /// Database role name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDatabaseRoleArgs()
        {
        }
        public static new GetDatabaseRoleArgs Empty => new GetDatabaseRoleArgs();
    }

    public sealed class GetDatabaseRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The database from which to return the database role from.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Database role name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDatabaseRoleInvokeArgs()
        {
        }
        public static new GetDatabaseRoleInvokeArgs Empty => new GetDatabaseRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseRoleResult
    {
        /// <summary>
        /// The comment on the role
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// The database from which to return the database role from.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Database role name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The owner of the role
        /// </summary>
        public readonly string Owner;

        [OutputConstructor]
        private GetDatabaseRoleResult(
            string comment,

            string database,

            string id,

            string name,

            string owner)
        {
            Comment = comment;
            Database = database;
            Id = id;
            Name = name;
            Owner = owner;
        }
    }
}
