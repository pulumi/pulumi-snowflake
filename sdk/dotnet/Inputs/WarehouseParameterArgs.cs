// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Inputs
{

    public sealed class WarehouseParameterArgs : global::Pulumi.ResourceArgs
    {
        [Input("maxConcurrencyLevels")]
        private InputList<Inputs.WarehouseParameterMaxConcurrencyLevelArgs>? _maxConcurrencyLevels;
        public InputList<Inputs.WarehouseParameterMaxConcurrencyLevelArgs> MaxConcurrencyLevels
        {
            get => _maxConcurrencyLevels ?? (_maxConcurrencyLevels = new InputList<Inputs.WarehouseParameterMaxConcurrencyLevelArgs>());
            set => _maxConcurrencyLevels = value;
        }

        [Input("statementQueuedTimeoutInSeconds")]
        private InputList<Inputs.WarehouseParameterStatementQueuedTimeoutInSecondArgs>? _statementQueuedTimeoutInSeconds;
        public InputList<Inputs.WarehouseParameterStatementQueuedTimeoutInSecondArgs> StatementQueuedTimeoutInSeconds
        {
            get => _statementQueuedTimeoutInSeconds ?? (_statementQueuedTimeoutInSeconds = new InputList<Inputs.WarehouseParameterStatementQueuedTimeoutInSecondArgs>());
            set => _statementQueuedTimeoutInSeconds = value;
        }

        [Input("statementTimeoutInSeconds")]
        private InputList<Inputs.WarehouseParameterStatementTimeoutInSecondArgs>? _statementTimeoutInSeconds;
        public InputList<Inputs.WarehouseParameterStatementTimeoutInSecondArgs> StatementTimeoutInSeconds
        {
            get => _statementTimeoutInSeconds ?? (_statementTimeoutInSeconds = new InputList<Inputs.WarehouseParameterStatementTimeoutInSecondArgs>());
            set => _statementTimeoutInSeconds = value;
        }

        public WarehouseParameterArgs()
        {
        }
        public static new WarehouseParameterArgs Empty => new WarehouseParameterArgs();
    }
}
