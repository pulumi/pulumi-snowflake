// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Inputs
{

    public sealed class ProviderTokenAccessorArgs : global::Pulumi.ResourceArgs
    {
        [Input("clientId", required: true)]
        private Input<string>? _clientId;
        public Input<string>? ClientId
        {
            get => _clientId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientSecret", required: true)]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("redirectUri", required: true)]
        private Input<string>? _redirectUri;
        public Input<string>? RedirectUri
        {
            get => _redirectUri;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _redirectUri = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("refreshToken", required: true)]
        private Input<string>? _refreshToken;
        public Input<string>? RefreshToken
        {
            get => _refreshToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _refreshToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tokenEndpoint", required: true)]
        private Input<string>? _tokenEndpoint;
        public Input<string>? TokenEndpoint
        {
            get => _tokenEndpoint;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tokenEndpoint = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ProviderTokenAccessorArgs()
        {
        }
        public static new ProviderTokenAccessorArgs Empty => new ProviderTokenAccessorArgs();
    }
}
