// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Inputs
{

    public sealed class TaskParameterGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("abortDetachedQueries")]
        private InputList<Inputs.TaskParameterAbortDetachedQueryGetArgs>? _abortDetachedQueries;
        public InputList<Inputs.TaskParameterAbortDetachedQueryGetArgs> AbortDetachedQueries
        {
            get => _abortDetachedQueries ?? (_abortDetachedQueries = new InputList<Inputs.TaskParameterAbortDetachedQueryGetArgs>());
            set => _abortDetachedQueries = value;
        }

        [Input("autocommits")]
        private InputList<Inputs.TaskParameterAutocommitGetArgs>? _autocommits;
        public InputList<Inputs.TaskParameterAutocommitGetArgs> Autocommits
        {
            get => _autocommits ?? (_autocommits = new InputList<Inputs.TaskParameterAutocommitGetArgs>());
            set => _autocommits = value;
        }

        [Input("binaryInputFormats")]
        private InputList<Inputs.TaskParameterBinaryInputFormatGetArgs>? _binaryInputFormats;
        public InputList<Inputs.TaskParameterBinaryInputFormatGetArgs> BinaryInputFormats
        {
            get => _binaryInputFormats ?? (_binaryInputFormats = new InputList<Inputs.TaskParameterBinaryInputFormatGetArgs>());
            set => _binaryInputFormats = value;
        }

        [Input("binaryOutputFormats")]
        private InputList<Inputs.TaskParameterBinaryOutputFormatGetArgs>? _binaryOutputFormats;
        public InputList<Inputs.TaskParameterBinaryOutputFormatGetArgs> BinaryOutputFormats
        {
            get => _binaryOutputFormats ?? (_binaryOutputFormats = new InputList<Inputs.TaskParameterBinaryOutputFormatGetArgs>());
            set => _binaryOutputFormats = value;
        }

        [Input("clientMemoryLimits")]
        private InputList<Inputs.TaskParameterClientMemoryLimitGetArgs>? _clientMemoryLimits;
        public InputList<Inputs.TaskParameterClientMemoryLimitGetArgs> ClientMemoryLimits
        {
            get => _clientMemoryLimits ?? (_clientMemoryLimits = new InputList<Inputs.TaskParameterClientMemoryLimitGetArgs>());
            set => _clientMemoryLimits = value;
        }

        [Input("clientMetadataRequestUseConnectionCtxes")]
        private InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxGetArgs>? _clientMetadataRequestUseConnectionCtxes;
        public InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxGetArgs> ClientMetadataRequestUseConnectionCtxes
        {
            get => _clientMetadataRequestUseConnectionCtxes ?? (_clientMetadataRequestUseConnectionCtxes = new InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxGetArgs>());
            set => _clientMetadataRequestUseConnectionCtxes = value;
        }

        [Input("clientPrefetchThreads")]
        private InputList<Inputs.TaskParameterClientPrefetchThreadGetArgs>? _clientPrefetchThreads;
        public InputList<Inputs.TaskParameterClientPrefetchThreadGetArgs> ClientPrefetchThreads
        {
            get => _clientPrefetchThreads ?? (_clientPrefetchThreads = new InputList<Inputs.TaskParameterClientPrefetchThreadGetArgs>());
            set => _clientPrefetchThreads = value;
        }

        [Input("clientResultChunkSizes")]
        private InputList<Inputs.TaskParameterClientResultChunkSizeGetArgs>? _clientResultChunkSizes;
        public InputList<Inputs.TaskParameterClientResultChunkSizeGetArgs> ClientResultChunkSizes
        {
            get => _clientResultChunkSizes ?? (_clientResultChunkSizes = new InputList<Inputs.TaskParameterClientResultChunkSizeGetArgs>());
            set => _clientResultChunkSizes = value;
        }

        [Input("clientResultColumnCaseInsensitives")]
        private InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveGetArgs>? _clientResultColumnCaseInsensitives;
        public InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveGetArgs> ClientResultColumnCaseInsensitives
        {
            get => _clientResultColumnCaseInsensitives ?? (_clientResultColumnCaseInsensitives = new InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveGetArgs>());
            set => _clientResultColumnCaseInsensitives = value;
        }

        [Input("clientSessionKeepAliveHeartbeatFrequencies")]
        private InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyGetArgs>? _clientSessionKeepAliveHeartbeatFrequencies;
        public InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyGetArgs> ClientSessionKeepAliveHeartbeatFrequencies
        {
            get => _clientSessionKeepAliveHeartbeatFrequencies ?? (_clientSessionKeepAliveHeartbeatFrequencies = new InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyGetArgs>());
            set => _clientSessionKeepAliveHeartbeatFrequencies = value;
        }

        [Input("clientSessionKeepAlives")]
        private InputList<Inputs.TaskParameterClientSessionKeepAlifeGetArgs>? _clientSessionKeepAlives;
        public InputList<Inputs.TaskParameterClientSessionKeepAlifeGetArgs> ClientSessionKeepAlives
        {
            get => _clientSessionKeepAlives ?? (_clientSessionKeepAlives = new InputList<Inputs.TaskParameterClientSessionKeepAlifeGetArgs>());
            set => _clientSessionKeepAlives = value;
        }

        [Input("clientTimestampTypeMappings")]
        private InputList<Inputs.TaskParameterClientTimestampTypeMappingGetArgs>? _clientTimestampTypeMappings;
        public InputList<Inputs.TaskParameterClientTimestampTypeMappingGetArgs> ClientTimestampTypeMappings
        {
            get => _clientTimestampTypeMappings ?? (_clientTimestampTypeMappings = new InputList<Inputs.TaskParameterClientTimestampTypeMappingGetArgs>());
            set => _clientTimestampTypeMappings = value;
        }

        [Input("dateInputFormats")]
        private InputList<Inputs.TaskParameterDateInputFormatGetArgs>? _dateInputFormats;
        public InputList<Inputs.TaskParameterDateInputFormatGetArgs> DateInputFormats
        {
            get => _dateInputFormats ?? (_dateInputFormats = new InputList<Inputs.TaskParameterDateInputFormatGetArgs>());
            set => _dateInputFormats = value;
        }

        [Input("dateOutputFormats")]
        private InputList<Inputs.TaskParameterDateOutputFormatGetArgs>? _dateOutputFormats;
        public InputList<Inputs.TaskParameterDateOutputFormatGetArgs> DateOutputFormats
        {
            get => _dateOutputFormats ?? (_dateOutputFormats = new InputList<Inputs.TaskParameterDateOutputFormatGetArgs>());
            set => _dateOutputFormats = value;
        }

        [Input("enableUnloadPhysicalTypeOptimizations")]
        private InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationGetArgs>? _enableUnloadPhysicalTypeOptimizations;
        public InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationGetArgs> EnableUnloadPhysicalTypeOptimizations
        {
            get => _enableUnloadPhysicalTypeOptimizations ?? (_enableUnloadPhysicalTypeOptimizations = new InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationGetArgs>());
            set => _enableUnloadPhysicalTypeOptimizations = value;
        }

        [Input("errorOnNondeterministicMerges")]
        private InputList<Inputs.TaskParameterErrorOnNondeterministicMergeGetArgs>? _errorOnNondeterministicMerges;
        public InputList<Inputs.TaskParameterErrorOnNondeterministicMergeGetArgs> ErrorOnNondeterministicMerges
        {
            get => _errorOnNondeterministicMerges ?? (_errorOnNondeterministicMerges = new InputList<Inputs.TaskParameterErrorOnNondeterministicMergeGetArgs>());
            set => _errorOnNondeterministicMerges = value;
        }

        [Input("errorOnNondeterministicUpdates")]
        private InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateGetArgs>? _errorOnNondeterministicUpdates;
        public InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateGetArgs> ErrorOnNondeterministicUpdates
        {
            get => _errorOnNondeterministicUpdates ?? (_errorOnNondeterministicUpdates = new InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateGetArgs>());
            set => _errorOnNondeterministicUpdates = value;
        }

        [Input("geographyOutputFormats")]
        private InputList<Inputs.TaskParameterGeographyOutputFormatGetArgs>? _geographyOutputFormats;
        public InputList<Inputs.TaskParameterGeographyOutputFormatGetArgs> GeographyOutputFormats
        {
            get => _geographyOutputFormats ?? (_geographyOutputFormats = new InputList<Inputs.TaskParameterGeographyOutputFormatGetArgs>());
            set => _geographyOutputFormats = value;
        }

        [Input("geometryOutputFormats")]
        private InputList<Inputs.TaskParameterGeometryOutputFormatGetArgs>? _geometryOutputFormats;
        public InputList<Inputs.TaskParameterGeometryOutputFormatGetArgs> GeometryOutputFormats
        {
            get => _geometryOutputFormats ?? (_geometryOutputFormats = new InputList<Inputs.TaskParameterGeometryOutputFormatGetArgs>());
            set => _geometryOutputFormats = value;
        }

        [Input("jdbcTreatTimestampNtzAsUtcs")]
        private InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcGetArgs>? _jdbcTreatTimestampNtzAsUtcs;
        public InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcGetArgs> JdbcTreatTimestampNtzAsUtcs
        {
            get => _jdbcTreatTimestampNtzAsUtcs ?? (_jdbcTreatTimestampNtzAsUtcs = new InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcGetArgs>());
            set => _jdbcTreatTimestampNtzAsUtcs = value;
        }

        [Input("jdbcUseSessionTimezones")]
        private InputList<Inputs.TaskParameterJdbcUseSessionTimezoneGetArgs>? _jdbcUseSessionTimezones;
        public InputList<Inputs.TaskParameterJdbcUseSessionTimezoneGetArgs> JdbcUseSessionTimezones
        {
            get => _jdbcUseSessionTimezones ?? (_jdbcUseSessionTimezones = new InputList<Inputs.TaskParameterJdbcUseSessionTimezoneGetArgs>());
            set => _jdbcUseSessionTimezones = value;
        }

        [Input("jsonIndents")]
        private InputList<Inputs.TaskParameterJsonIndentGetArgs>? _jsonIndents;
        public InputList<Inputs.TaskParameterJsonIndentGetArgs> JsonIndents
        {
            get => _jsonIndents ?? (_jsonIndents = new InputList<Inputs.TaskParameterJsonIndentGetArgs>());
            set => _jsonIndents = value;
        }

        [Input("lockTimeouts")]
        private InputList<Inputs.TaskParameterLockTimeoutGetArgs>? _lockTimeouts;
        public InputList<Inputs.TaskParameterLockTimeoutGetArgs> LockTimeouts
        {
            get => _lockTimeouts ?? (_lockTimeouts = new InputList<Inputs.TaskParameterLockTimeoutGetArgs>());
            set => _lockTimeouts = value;
        }

        [Input("logLevels")]
        private InputList<Inputs.TaskParameterLogLevelGetArgs>? _logLevels;
        public InputList<Inputs.TaskParameterLogLevelGetArgs> LogLevels
        {
            get => _logLevels ?? (_logLevels = new InputList<Inputs.TaskParameterLogLevelGetArgs>());
            set => _logLevels = value;
        }

        [Input("multiStatementCounts")]
        private InputList<Inputs.TaskParameterMultiStatementCountGetArgs>? _multiStatementCounts;
        public InputList<Inputs.TaskParameterMultiStatementCountGetArgs> MultiStatementCounts
        {
            get => _multiStatementCounts ?? (_multiStatementCounts = new InputList<Inputs.TaskParameterMultiStatementCountGetArgs>());
            set => _multiStatementCounts = value;
        }

        [Input("noorderSequenceAsDefaults")]
        private InputList<Inputs.TaskParameterNoorderSequenceAsDefaultGetArgs>? _noorderSequenceAsDefaults;
        public InputList<Inputs.TaskParameterNoorderSequenceAsDefaultGetArgs> NoorderSequenceAsDefaults
        {
            get => _noorderSequenceAsDefaults ?? (_noorderSequenceAsDefaults = new InputList<Inputs.TaskParameterNoorderSequenceAsDefaultGetArgs>());
            set => _noorderSequenceAsDefaults = value;
        }

        [Input("odbcTreatDecimalAsInts")]
        private InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntGetArgs>? _odbcTreatDecimalAsInts;
        public InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntGetArgs> OdbcTreatDecimalAsInts
        {
            get => _odbcTreatDecimalAsInts ?? (_odbcTreatDecimalAsInts = new InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntGetArgs>());
            set => _odbcTreatDecimalAsInts = value;
        }

        [Input("queryTags")]
        private InputList<Inputs.TaskParameterQueryTagGetArgs>? _queryTags;
        public InputList<Inputs.TaskParameterQueryTagGetArgs> QueryTags
        {
            get => _queryTags ?? (_queryTags = new InputList<Inputs.TaskParameterQueryTagGetArgs>());
            set => _queryTags = value;
        }

        [Input("quotedIdentifiersIgnoreCases")]
        private InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseGetArgs>? _quotedIdentifiersIgnoreCases;
        public InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseGetArgs> QuotedIdentifiersIgnoreCases
        {
            get => _quotedIdentifiersIgnoreCases ?? (_quotedIdentifiersIgnoreCases = new InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseGetArgs>());
            set => _quotedIdentifiersIgnoreCases = value;
        }

        [Input("rowsPerResultsets")]
        private InputList<Inputs.TaskParameterRowsPerResultsetGetArgs>? _rowsPerResultsets;
        public InputList<Inputs.TaskParameterRowsPerResultsetGetArgs> RowsPerResultsets
        {
            get => _rowsPerResultsets ?? (_rowsPerResultsets = new InputList<Inputs.TaskParameterRowsPerResultsetGetArgs>());
            set => _rowsPerResultsets = value;
        }

        [Input("s3StageVpceDnsNames")]
        private InputList<Inputs.TaskParameterS3StageVpceDnsNameGetArgs>? _s3StageVpceDnsNames;
        public InputList<Inputs.TaskParameterS3StageVpceDnsNameGetArgs> S3StageVpceDnsNames
        {
            get => _s3StageVpceDnsNames ?? (_s3StageVpceDnsNames = new InputList<Inputs.TaskParameterS3StageVpceDnsNameGetArgs>());
            set => _s3StageVpceDnsNames = value;
        }

        [Input("searchPaths")]
        private InputList<Inputs.TaskParameterSearchPathGetArgs>? _searchPaths;
        public InputList<Inputs.TaskParameterSearchPathGetArgs> SearchPaths
        {
            get => _searchPaths ?? (_searchPaths = new InputList<Inputs.TaskParameterSearchPathGetArgs>());
            set => _searchPaths = value;
        }

        [Input("statementQueuedTimeoutInSeconds")]
        private InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondGetArgs>? _statementQueuedTimeoutInSeconds;
        public InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondGetArgs> StatementQueuedTimeoutInSeconds
        {
            get => _statementQueuedTimeoutInSeconds ?? (_statementQueuedTimeoutInSeconds = new InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondGetArgs>());
            set => _statementQueuedTimeoutInSeconds = value;
        }

        [Input("statementTimeoutInSeconds")]
        private InputList<Inputs.TaskParameterStatementTimeoutInSecondGetArgs>? _statementTimeoutInSeconds;
        public InputList<Inputs.TaskParameterStatementTimeoutInSecondGetArgs> StatementTimeoutInSeconds
        {
            get => _statementTimeoutInSeconds ?? (_statementTimeoutInSeconds = new InputList<Inputs.TaskParameterStatementTimeoutInSecondGetArgs>());
            set => _statementTimeoutInSeconds = value;
        }

        [Input("strictJsonOutputs")]
        private InputList<Inputs.TaskParameterStrictJsonOutputGetArgs>? _strictJsonOutputs;
        public InputList<Inputs.TaskParameterStrictJsonOutputGetArgs> StrictJsonOutputs
        {
            get => _strictJsonOutputs ?? (_strictJsonOutputs = new InputList<Inputs.TaskParameterStrictJsonOutputGetArgs>());
            set => _strictJsonOutputs = value;
        }

        [Input("suspendTaskAfterNumFailures")]
        private InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureGetArgs>? _suspendTaskAfterNumFailures;
        public InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureGetArgs> SuspendTaskAfterNumFailures
        {
            get => _suspendTaskAfterNumFailures ?? (_suspendTaskAfterNumFailures = new InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureGetArgs>());
            set => _suspendTaskAfterNumFailures = value;
        }

        [Input("taskAutoRetryAttempts")]
        private InputList<Inputs.TaskParameterTaskAutoRetryAttemptGetArgs>? _taskAutoRetryAttempts;
        public InputList<Inputs.TaskParameterTaskAutoRetryAttemptGetArgs> TaskAutoRetryAttempts
        {
            get => _taskAutoRetryAttempts ?? (_taskAutoRetryAttempts = new InputList<Inputs.TaskParameterTaskAutoRetryAttemptGetArgs>());
            set => _taskAutoRetryAttempts = value;
        }

        [Input("timeInputFormats")]
        private InputList<Inputs.TaskParameterTimeInputFormatGetArgs>? _timeInputFormats;
        public InputList<Inputs.TaskParameterTimeInputFormatGetArgs> TimeInputFormats
        {
            get => _timeInputFormats ?? (_timeInputFormats = new InputList<Inputs.TaskParameterTimeInputFormatGetArgs>());
            set => _timeInputFormats = value;
        }

        [Input("timeOutputFormats")]
        private InputList<Inputs.TaskParameterTimeOutputFormatGetArgs>? _timeOutputFormats;
        public InputList<Inputs.TaskParameterTimeOutputFormatGetArgs> TimeOutputFormats
        {
            get => _timeOutputFormats ?? (_timeOutputFormats = new InputList<Inputs.TaskParameterTimeOutputFormatGetArgs>());
            set => _timeOutputFormats = value;
        }

        [Input("timestampDayIsAlways24hs")]
        private InputList<Inputs.TaskParameterTimestampDayIsAlways24hGetArgs>? _timestampDayIsAlways24hs;
        public InputList<Inputs.TaskParameterTimestampDayIsAlways24hGetArgs> TimestampDayIsAlways24hs
        {
            get => _timestampDayIsAlways24hs ?? (_timestampDayIsAlways24hs = new InputList<Inputs.TaskParameterTimestampDayIsAlways24hGetArgs>());
            set => _timestampDayIsAlways24hs = value;
        }

        [Input("timestampInputFormats")]
        private InputList<Inputs.TaskParameterTimestampInputFormatGetArgs>? _timestampInputFormats;
        public InputList<Inputs.TaskParameterTimestampInputFormatGetArgs> TimestampInputFormats
        {
            get => _timestampInputFormats ?? (_timestampInputFormats = new InputList<Inputs.TaskParameterTimestampInputFormatGetArgs>());
            set => _timestampInputFormats = value;
        }

        [Input("timestampLtzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampLtzOutputFormatGetArgs>? _timestampLtzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampLtzOutputFormatGetArgs> TimestampLtzOutputFormats
        {
            get => _timestampLtzOutputFormats ?? (_timestampLtzOutputFormats = new InputList<Inputs.TaskParameterTimestampLtzOutputFormatGetArgs>());
            set => _timestampLtzOutputFormats = value;
        }

        [Input("timestampNtzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampNtzOutputFormatGetArgs>? _timestampNtzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampNtzOutputFormatGetArgs> TimestampNtzOutputFormats
        {
            get => _timestampNtzOutputFormats ?? (_timestampNtzOutputFormats = new InputList<Inputs.TaskParameterTimestampNtzOutputFormatGetArgs>());
            set => _timestampNtzOutputFormats = value;
        }

        [Input("timestampOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampOutputFormatGetArgs>? _timestampOutputFormats;
        public InputList<Inputs.TaskParameterTimestampOutputFormatGetArgs> TimestampOutputFormats
        {
            get => _timestampOutputFormats ?? (_timestampOutputFormats = new InputList<Inputs.TaskParameterTimestampOutputFormatGetArgs>());
            set => _timestampOutputFormats = value;
        }

        [Input("timestampTypeMappings")]
        private InputList<Inputs.TaskParameterTimestampTypeMappingGetArgs>? _timestampTypeMappings;
        public InputList<Inputs.TaskParameterTimestampTypeMappingGetArgs> TimestampTypeMappings
        {
            get => _timestampTypeMappings ?? (_timestampTypeMappings = new InputList<Inputs.TaskParameterTimestampTypeMappingGetArgs>());
            set => _timestampTypeMappings = value;
        }

        [Input("timestampTzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampTzOutputFormatGetArgs>? _timestampTzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampTzOutputFormatGetArgs> TimestampTzOutputFormats
        {
            get => _timestampTzOutputFormats ?? (_timestampTzOutputFormats = new InputList<Inputs.TaskParameterTimestampTzOutputFormatGetArgs>());
            set => _timestampTzOutputFormats = value;
        }

        [Input("timezones")]
        private InputList<Inputs.TaskParameterTimezoneGetArgs>? _timezones;
        public InputList<Inputs.TaskParameterTimezoneGetArgs> Timezones
        {
            get => _timezones ?? (_timezones = new InputList<Inputs.TaskParameterTimezoneGetArgs>());
            set => _timezones = value;
        }

        [Input("traceLevels")]
        private InputList<Inputs.TaskParameterTraceLevelGetArgs>? _traceLevels;
        public InputList<Inputs.TaskParameterTraceLevelGetArgs> TraceLevels
        {
            get => _traceLevels ?? (_traceLevels = new InputList<Inputs.TaskParameterTraceLevelGetArgs>());
            set => _traceLevels = value;
        }

        [Input("transactionAbortOnErrors")]
        private InputList<Inputs.TaskParameterTransactionAbortOnErrorGetArgs>? _transactionAbortOnErrors;
        public InputList<Inputs.TaskParameterTransactionAbortOnErrorGetArgs> TransactionAbortOnErrors
        {
            get => _transactionAbortOnErrors ?? (_transactionAbortOnErrors = new InputList<Inputs.TaskParameterTransactionAbortOnErrorGetArgs>());
            set => _transactionAbortOnErrors = value;
        }

        [Input("transactionDefaultIsolationLevels")]
        private InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelGetArgs>? _transactionDefaultIsolationLevels;
        public InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelGetArgs> TransactionDefaultIsolationLevels
        {
            get => _transactionDefaultIsolationLevels ?? (_transactionDefaultIsolationLevels = new InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelGetArgs>());
            set => _transactionDefaultIsolationLevels = value;
        }

        [Input("twoDigitCenturyStarts")]
        private InputList<Inputs.TaskParameterTwoDigitCenturyStartGetArgs>? _twoDigitCenturyStarts;
        public InputList<Inputs.TaskParameterTwoDigitCenturyStartGetArgs> TwoDigitCenturyStarts
        {
            get => _twoDigitCenturyStarts ?? (_twoDigitCenturyStarts = new InputList<Inputs.TaskParameterTwoDigitCenturyStartGetArgs>());
            set => _twoDigitCenturyStarts = value;
        }

        [Input("unsupportedDdlActions")]
        private InputList<Inputs.TaskParameterUnsupportedDdlActionGetArgs>? _unsupportedDdlActions;
        public InputList<Inputs.TaskParameterUnsupportedDdlActionGetArgs> UnsupportedDdlActions
        {
            get => _unsupportedDdlActions ?? (_unsupportedDdlActions = new InputList<Inputs.TaskParameterUnsupportedDdlActionGetArgs>());
            set => _unsupportedDdlActions = value;
        }

        [Input("useCachedResults")]
        private InputList<Inputs.TaskParameterUseCachedResultGetArgs>? _useCachedResults;
        public InputList<Inputs.TaskParameterUseCachedResultGetArgs> UseCachedResults
        {
            get => _useCachedResults ?? (_useCachedResults = new InputList<Inputs.TaskParameterUseCachedResultGetArgs>());
            set => _useCachedResults = value;
        }

        [Input("userTaskManagedInitialWarehouseSizes")]
        private InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeGetArgs>? _userTaskManagedInitialWarehouseSizes;
        public InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeGetArgs> UserTaskManagedInitialWarehouseSizes
        {
            get => _userTaskManagedInitialWarehouseSizes ?? (_userTaskManagedInitialWarehouseSizes = new InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeGetArgs>());
            set => _userTaskManagedInitialWarehouseSizes = value;
        }

        [Input("userTaskMinimumTriggerIntervalInSeconds")]
        private InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondGetArgs>? _userTaskMinimumTriggerIntervalInSeconds;
        public InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondGetArgs> UserTaskMinimumTriggerIntervalInSeconds
        {
            get => _userTaskMinimumTriggerIntervalInSeconds ?? (_userTaskMinimumTriggerIntervalInSeconds = new InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondGetArgs>());
            set => _userTaskMinimumTriggerIntervalInSeconds = value;
        }

        [Input("userTaskTimeoutMs")]
        private InputList<Inputs.TaskParameterUserTaskTimeoutMGetArgs>? _userTaskTimeoutMs;
        public InputList<Inputs.TaskParameterUserTaskTimeoutMGetArgs> UserTaskTimeoutMs
        {
            get => _userTaskTimeoutMs ?? (_userTaskTimeoutMs = new InputList<Inputs.TaskParameterUserTaskTimeoutMGetArgs>());
            set => _userTaskTimeoutMs = value;
        }

        [Input("weekOfYearPolicies")]
        private InputList<Inputs.TaskParameterWeekOfYearPolicyGetArgs>? _weekOfYearPolicies;
        public InputList<Inputs.TaskParameterWeekOfYearPolicyGetArgs> WeekOfYearPolicies
        {
            get => _weekOfYearPolicies ?? (_weekOfYearPolicies = new InputList<Inputs.TaskParameterWeekOfYearPolicyGetArgs>());
            set => _weekOfYearPolicies = value;
        }

        [Input("weekStarts")]
        private InputList<Inputs.TaskParameterWeekStartGetArgs>? _weekStarts;
        public InputList<Inputs.TaskParameterWeekStartGetArgs> WeekStarts
        {
            get => _weekStarts ?? (_weekStarts = new InputList<Inputs.TaskParameterWeekStartGetArgs>());
            set => _weekStarts = value;
        }

        public TaskParameterGetArgs()
        {
        }
        public static new TaskParameterGetArgs Empty => new TaskParameterGetArgs();
    }
}
