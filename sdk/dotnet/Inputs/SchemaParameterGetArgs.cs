// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Inputs
{

    public sealed class SchemaParameterGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("catalogs")]
        private InputList<Inputs.SchemaParameterCatalogGetArgs>? _catalogs;
        public InputList<Inputs.SchemaParameterCatalogGetArgs> Catalogs
        {
            get => _catalogs ?? (_catalogs = new InputList<Inputs.SchemaParameterCatalogGetArgs>());
            set => _catalogs = value;
        }

        [Input("dataRetentionTimeInDays")]
        private InputList<Inputs.SchemaParameterDataRetentionTimeInDayGetArgs>? _dataRetentionTimeInDays;
        public InputList<Inputs.SchemaParameterDataRetentionTimeInDayGetArgs> DataRetentionTimeInDays
        {
            get => _dataRetentionTimeInDays ?? (_dataRetentionTimeInDays = new InputList<Inputs.SchemaParameterDataRetentionTimeInDayGetArgs>());
            set => _dataRetentionTimeInDays = value;
        }

        [Input("defaultDdlCollations")]
        private InputList<Inputs.SchemaParameterDefaultDdlCollationGetArgs>? _defaultDdlCollations;
        public InputList<Inputs.SchemaParameterDefaultDdlCollationGetArgs> DefaultDdlCollations
        {
            get => _defaultDdlCollations ?? (_defaultDdlCollations = new InputList<Inputs.SchemaParameterDefaultDdlCollationGetArgs>());
            set => _defaultDdlCollations = value;
        }

        [Input("enableConsoleOutputs")]
        private InputList<Inputs.SchemaParameterEnableConsoleOutputGetArgs>? _enableConsoleOutputs;
        public InputList<Inputs.SchemaParameterEnableConsoleOutputGetArgs> EnableConsoleOutputs
        {
            get => _enableConsoleOutputs ?? (_enableConsoleOutputs = new InputList<Inputs.SchemaParameterEnableConsoleOutputGetArgs>());
            set => _enableConsoleOutputs = value;
        }

        [Input("externalVolumes")]
        private InputList<Inputs.SchemaParameterExternalVolumeGetArgs>? _externalVolumes;
        public InputList<Inputs.SchemaParameterExternalVolumeGetArgs> ExternalVolumes
        {
            get => _externalVolumes ?? (_externalVolumes = new InputList<Inputs.SchemaParameterExternalVolumeGetArgs>());
            set => _externalVolumes = value;
        }

        [Input("logLevels")]
        private InputList<Inputs.SchemaParameterLogLevelGetArgs>? _logLevels;
        public InputList<Inputs.SchemaParameterLogLevelGetArgs> LogLevels
        {
            get => _logLevels ?? (_logLevels = new InputList<Inputs.SchemaParameterLogLevelGetArgs>());
            set => _logLevels = value;
        }

        [Input("maxDataExtensionTimeInDays")]
        private InputList<Inputs.SchemaParameterMaxDataExtensionTimeInDayGetArgs>? _maxDataExtensionTimeInDays;
        public InputList<Inputs.SchemaParameterMaxDataExtensionTimeInDayGetArgs> MaxDataExtensionTimeInDays
        {
            get => _maxDataExtensionTimeInDays ?? (_maxDataExtensionTimeInDays = new InputList<Inputs.SchemaParameterMaxDataExtensionTimeInDayGetArgs>());
            set => _maxDataExtensionTimeInDays = value;
        }

        [Input("pipeExecutionPauseds")]
        private InputList<Inputs.SchemaParameterPipeExecutionPausedGetArgs>? _pipeExecutionPauseds;
        public InputList<Inputs.SchemaParameterPipeExecutionPausedGetArgs> PipeExecutionPauseds
        {
            get => _pipeExecutionPauseds ?? (_pipeExecutionPauseds = new InputList<Inputs.SchemaParameterPipeExecutionPausedGetArgs>());
            set => _pipeExecutionPauseds = value;
        }

        [Input("quotedIdentifiersIgnoreCases")]
        private InputList<Inputs.SchemaParameterQuotedIdentifiersIgnoreCaseGetArgs>? _quotedIdentifiersIgnoreCases;
        public InputList<Inputs.SchemaParameterQuotedIdentifiersIgnoreCaseGetArgs> QuotedIdentifiersIgnoreCases
        {
            get => _quotedIdentifiersIgnoreCases ?? (_quotedIdentifiersIgnoreCases = new InputList<Inputs.SchemaParameterQuotedIdentifiersIgnoreCaseGetArgs>());
            set => _quotedIdentifiersIgnoreCases = value;
        }

        [Input("replaceInvalidCharacters")]
        private InputList<Inputs.SchemaParameterReplaceInvalidCharacterGetArgs>? _replaceInvalidCharacters;
        public InputList<Inputs.SchemaParameterReplaceInvalidCharacterGetArgs> ReplaceInvalidCharacters
        {
            get => _replaceInvalidCharacters ?? (_replaceInvalidCharacters = new InputList<Inputs.SchemaParameterReplaceInvalidCharacterGetArgs>());
            set => _replaceInvalidCharacters = value;
        }

        [Input("storageSerializationPolicies")]
        private InputList<Inputs.SchemaParameterStorageSerializationPolicyGetArgs>? _storageSerializationPolicies;
        public InputList<Inputs.SchemaParameterStorageSerializationPolicyGetArgs> StorageSerializationPolicies
        {
            get => _storageSerializationPolicies ?? (_storageSerializationPolicies = new InputList<Inputs.SchemaParameterStorageSerializationPolicyGetArgs>());
            set => _storageSerializationPolicies = value;
        }

        [Input("suspendTaskAfterNumFailures")]
        private InputList<Inputs.SchemaParameterSuspendTaskAfterNumFailureGetArgs>? _suspendTaskAfterNumFailures;
        public InputList<Inputs.SchemaParameterSuspendTaskAfterNumFailureGetArgs> SuspendTaskAfterNumFailures
        {
            get => _suspendTaskAfterNumFailures ?? (_suspendTaskAfterNumFailures = new InputList<Inputs.SchemaParameterSuspendTaskAfterNumFailureGetArgs>());
            set => _suspendTaskAfterNumFailures = value;
        }

        [Input("taskAutoRetryAttempts")]
        private InputList<Inputs.SchemaParameterTaskAutoRetryAttemptGetArgs>? _taskAutoRetryAttempts;
        public InputList<Inputs.SchemaParameterTaskAutoRetryAttemptGetArgs> TaskAutoRetryAttempts
        {
            get => _taskAutoRetryAttempts ?? (_taskAutoRetryAttempts = new InputList<Inputs.SchemaParameterTaskAutoRetryAttemptGetArgs>());
            set => _taskAutoRetryAttempts = value;
        }

        [Input("traceLevels")]
        private InputList<Inputs.SchemaParameterTraceLevelGetArgs>? _traceLevels;
        public InputList<Inputs.SchemaParameterTraceLevelGetArgs> TraceLevels
        {
            get => _traceLevels ?? (_traceLevels = new InputList<Inputs.SchemaParameterTraceLevelGetArgs>());
            set => _traceLevels = value;
        }

        [Input("userTaskManagedInitialWarehouseSizes")]
        private InputList<Inputs.SchemaParameterUserTaskManagedInitialWarehouseSizeGetArgs>? _userTaskManagedInitialWarehouseSizes;
        public InputList<Inputs.SchemaParameterUserTaskManagedInitialWarehouseSizeGetArgs> UserTaskManagedInitialWarehouseSizes
        {
            get => _userTaskManagedInitialWarehouseSizes ?? (_userTaskManagedInitialWarehouseSizes = new InputList<Inputs.SchemaParameterUserTaskManagedInitialWarehouseSizeGetArgs>());
            set => _userTaskManagedInitialWarehouseSizes = value;
        }

        [Input("userTaskMinimumTriggerIntervalInSeconds")]
        private InputList<Inputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecondGetArgs>? _userTaskMinimumTriggerIntervalInSeconds;
        public InputList<Inputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecondGetArgs> UserTaskMinimumTriggerIntervalInSeconds
        {
            get => _userTaskMinimumTriggerIntervalInSeconds ?? (_userTaskMinimumTriggerIntervalInSeconds = new InputList<Inputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecondGetArgs>());
            set => _userTaskMinimumTriggerIntervalInSeconds = value;
        }

        [Input("userTaskTimeoutMs")]
        private InputList<Inputs.SchemaParameterUserTaskTimeoutMGetArgs>? _userTaskTimeoutMs;
        public InputList<Inputs.SchemaParameterUserTaskTimeoutMGetArgs> UserTaskTimeoutMs
        {
            get => _userTaskTimeoutMs ?? (_userTaskTimeoutMs = new InputList<Inputs.SchemaParameterUserTaskTimeoutMGetArgs>());
            set => _userTaskTimeoutMs = value;
        }

        public SchemaParameterGetArgs()
        {
        }
        public static new SchemaParameterGetArgs Empty => new SchemaParameterGetArgs();
    }
}
