// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Inputs
{

    public sealed class TaskParameterArgs : global::Pulumi.ResourceArgs
    {
        [Input("abortDetachedQueries")]
        private InputList<Inputs.TaskParameterAbortDetachedQueryArgs>? _abortDetachedQueries;
        public InputList<Inputs.TaskParameterAbortDetachedQueryArgs> AbortDetachedQueries
        {
            get => _abortDetachedQueries ?? (_abortDetachedQueries = new InputList<Inputs.TaskParameterAbortDetachedQueryArgs>());
            set => _abortDetachedQueries = value;
        }

        [Input("autocommits")]
        private InputList<Inputs.TaskParameterAutocommitArgs>? _autocommits;
        public InputList<Inputs.TaskParameterAutocommitArgs> Autocommits
        {
            get => _autocommits ?? (_autocommits = new InputList<Inputs.TaskParameterAutocommitArgs>());
            set => _autocommits = value;
        }

        [Input("binaryInputFormats")]
        private InputList<Inputs.TaskParameterBinaryInputFormatArgs>? _binaryInputFormats;
        public InputList<Inputs.TaskParameterBinaryInputFormatArgs> BinaryInputFormats
        {
            get => _binaryInputFormats ?? (_binaryInputFormats = new InputList<Inputs.TaskParameterBinaryInputFormatArgs>());
            set => _binaryInputFormats = value;
        }

        [Input("binaryOutputFormats")]
        private InputList<Inputs.TaskParameterBinaryOutputFormatArgs>? _binaryOutputFormats;
        public InputList<Inputs.TaskParameterBinaryOutputFormatArgs> BinaryOutputFormats
        {
            get => _binaryOutputFormats ?? (_binaryOutputFormats = new InputList<Inputs.TaskParameterBinaryOutputFormatArgs>());
            set => _binaryOutputFormats = value;
        }

        [Input("clientMemoryLimits")]
        private InputList<Inputs.TaskParameterClientMemoryLimitArgs>? _clientMemoryLimits;
        public InputList<Inputs.TaskParameterClientMemoryLimitArgs> ClientMemoryLimits
        {
            get => _clientMemoryLimits ?? (_clientMemoryLimits = new InputList<Inputs.TaskParameterClientMemoryLimitArgs>());
            set => _clientMemoryLimits = value;
        }

        [Input("clientMetadataRequestUseConnectionCtxes")]
        private InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxArgs>? _clientMetadataRequestUseConnectionCtxes;
        public InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxArgs> ClientMetadataRequestUseConnectionCtxes
        {
            get => _clientMetadataRequestUseConnectionCtxes ?? (_clientMetadataRequestUseConnectionCtxes = new InputList<Inputs.TaskParameterClientMetadataRequestUseConnectionCtxArgs>());
            set => _clientMetadataRequestUseConnectionCtxes = value;
        }

        [Input("clientPrefetchThreads")]
        private InputList<Inputs.TaskParameterClientPrefetchThreadArgs>? _clientPrefetchThreads;
        public InputList<Inputs.TaskParameterClientPrefetchThreadArgs> ClientPrefetchThreads
        {
            get => _clientPrefetchThreads ?? (_clientPrefetchThreads = new InputList<Inputs.TaskParameterClientPrefetchThreadArgs>());
            set => _clientPrefetchThreads = value;
        }

        [Input("clientResultChunkSizes")]
        private InputList<Inputs.TaskParameterClientResultChunkSizeArgs>? _clientResultChunkSizes;
        public InputList<Inputs.TaskParameterClientResultChunkSizeArgs> ClientResultChunkSizes
        {
            get => _clientResultChunkSizes ?? (_clientResultChunkSizes = new InputList<Inputs.TaskParameterClientResultChunkSizeArgs>());
            set => _clientResultChunkSizes = value;
        }

        [Input("clientResultColumnCaseInsensitives")]
        private InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveArgs>? _clientResultColumnCaseInsensitives;
        public InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveArgs> ClientResultColumnCaseInsensitives
        {
            get => _clientResultColumnCaseInsensitives ?? (_clientResultColumnCaseInsensitives = new InputList<Inputs.TaskParameterClientResultColumnCaseInsensitiveArgs>());
            set => _clientResultColumnCaseInsensitives = value;
        }

        [Input("clientSessionKeepAliveHeartbeatFrequencies")]
        private InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyArgs>? _clientSessionKeepAliveHeartbeatFrequencies;
        public InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyArgs> ClientSessionKeepAliveHeartbeatFrequencies
        {
            get => _clientSessionKeepAliveHeartbeatFrequencies ?? (_clientSessionKeepAliveHeartbeatFrequencies = new InputList<Inputs.TaskParameterClientSessionKeepAliveHeartbeatFrequencyArgs>());
            set => _clientSessionKeepAliveHeartbeatFrequencies = value;
        }

        [Input("clientSessionKeepAlives")]
        private InputList<Inputs.TaskParameterClientSessionKeepAlifeArgs>? _clientSessionKeepAlives;
        public InputList<Inputs.TaskParameterClientSessionKeepAlifeArgs> ClientSessionKeepAlives
        {
            get => _clientSessionKeepAlives ?? (_clientSessionKeepAlives = new InputList<Inputs.TaskParameterClientSessionKeepAlifeArgs>());
            set => _clientSessionKeepAlives = value;
        }

        [Input("clientTimestampTypeMappings")]
        private InputList<Inputs.TaskParameterClientTimestampTypeMappingArgs>? _clientTimestampTypeMappings;
        public InputList<Inputs.TaskParameterClientTimestampTypeMappingArgs> ClientTimestampTypeMappings
        {
            get => _clientTimestampTypeMappings ?? (_clientTimestampTypeMappings = new InputList<Inputs.TaskParameterClientTimestampTypeMappingArgs>());
            set => _clientTimestampTypeMappings = value;
        }

        [Input("dateInputFormats")]
        private InputList<Inputs.TaskParameterDateInputFormatArgs>? _dateInputFormats;
        public InputList<Inputs.TaskParameterDateInputFormatArgs> DateInputFormats
        {
            get => _dateInputFormats ?? (_dateInputFormats = new InputList<Inputs.TaskParameterDateInputFormatArgs>());
            set => _dateInputFormats = value;
        }

        [Input("dateOutputFormats")]
        private InputList<Inputs.TaskParameterDateOutputFormatArgs>? _dateOutputFormats;
        public InputList<Inputs.TaskParameterDateOutputFormatArgs> DateOutputFormats
        {
            get => _dateOutputFormats ?? (_dateOutputFormats = new InputList<Inputs.TaskParameterDateOutputFormatArgs>());
            set => _dateOutputFormats = value;
        }

        [Input("enableUnloadPhysicalTypeOptimizations")]
        private InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationArgs>? _enableUnloadPhysicalTypeOptimizations;
        public InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationArgs> EnableUnloadPhysicalTypeOptimizations
        {
            get => _enableUnloadPhysicalTypeOptimizations ?? (_enableUnloadPhysicalTypeOptimizations = new InputList<Inputs.TaskParameterEnableUnloadPhysicalTypeOptimizationArgs>());
            set => _enableUnloadPhysicalTypeOptimizations = value;
        }

        [Input("errorOnNondeterministicMerges")]
        private InputList<Inputs.TaskParameterErrorOnNondeterministicMergeArgs>? _errorOnNondeterministicMerges;
        public InputList<Inputs.TaskParameterErrorOnNondeterministicMergeArgs> ErrorOnNondeterministicMerges
        {
            get => _errorOnNondeterministicMerges ?? (_errorOnNondeterministicMerges = new InputList<Inputs.TaskParameterErrorOnNondeterministicMergeArgs>());
            set => _errorOnNondeterministicMerges = value;
        }

        [Input("errorOnNondeterministicUpdates")]
        private InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateArgs>? _errorOnNondeterministicUpdates;
        public InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateArgs> ErrorOnNondeterministicUpdates
        {
            get => _errorOnNondeterministicUpdates ?? (_errorOnNondeterministicUpdates = new InputList<Inputs.TaskParameterErrorOnNondeterministicUpdateArgs>());
            set => _errorOnNondeterministicUpdates = value;
        }

        [Input("geographyOutputFormats")]
        private InputList<Inputs.TaskParameterGeographyOutputFormatArgs>? _geographyOutputFormats;
        public InputList<Inputs.TaskParameterGeographyOutputFormatArgs> GeographyOutputFormats
        {
            get => _geographyOutputFormats ?? (_geographyOutputFormats = new InputList<Inputs.TaskParameterGeographyOutputFormatArgs>());
            set => _geographyOutputFormats = value;
        }

        [Input("geometryOutputFormats")]
        private InputList<Inputs.TaskParameterGeometryOutputFormatArgs>? _geometryOutputFormats;
        public InputList<Inputs.TaskParameterGeometryOutputFormatArgs> GeometryOutputFormats
        {
            get => _geometryOutputFormats ?? (_geometryOutputFormats = new InputList<Inputs.TaskParameterGeometryOutputFormatArgs>());
            set => _geometryOutputFormats = value;
        }

        [Input("jdbcTreatTimestampNtzAsUtcs")]
        private InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcArgs>? _jdbcTreatTimestampNtzAsUtcs;
        public InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcArgs> JdbcTreatTimestampNtzAsUtcs
        {
            get => _jdbcTreatTimestampNtzAsUtcs ?? (_jdbcTreatTimestampNtzAsUtcs = new InputList<Inputs.TaskParameterJdbcTreatTimestampNtzAsUtcArgs>());
            set => _jdbcTreatTimestampNtzAsUtcs = value;
        }

        [Input("jdbcUseSessionTimezones")]
        private InputList<Inputs.TaskParameterJdbcUseSessionTimezoneArgs>? _jdbcUseSessionTimezones;
        public InputList<Inputs.TaskParameterJdbcUseSessionTimezoneArgs> JdbcUseSessionTimezones
        {
            get => _jdbcUseSessionTimezones ?? (_jdbcUseSessionTimezones = new InputList<Inputs.TaskParameterJdbcUseSessionTimezoneArgs>());
            set => _jdbcUseSessionTimezones = value;
        }

        [Input("jsonIndents")]
        private InputList<Inputs.TaskParameterJsonIndentArgs>? _jsonIndents;
        public InputList<Inputs.TaskParameterJsonIndentArgs> JsonIndents
        {
            get => _jsonIndents ?? (_jsonIndents = new InputList<Inputs.TaskParameterJsonIndentArgs>());
            set => _jsonIndents = value;
        }

        [Input("lockTimeouts")]
        private InputList<Inputs.TaskParameterLockTimeoutArgs>? _lockTimeouts;
        public InputList<Inputs.TaskParameterLockTimeoutArgs> LockTimeouts
        {
            get => _lockTimeouts ?? (_lockTimeouts = new InputList<Inputs.TaskParameterLockTimeoutArgs>());
            set => _lockTimeouts = value;
        }

        [Input("logLevels")]
        private InputList<Inputs.TaskParameterLogLevelArgs>? _logLevels;
        public InputList<Inputs.TaskParameterLogLevelArgs> LogLevels
        {
            get => _logLevels ?? (_logLevels = new InputList<Inputs.TaskParameterLogLevelArgs>());
            set => _logLevels = value;
        }

        [Input("multiStatementCounts")]
        private InputList<Inputs.TaskParameterMultiStatementCountArgs>? _multiStatementCounts;
        public InputList<Inputs.TaskParameterMultiStatementCountArgs> MultiStatementCounts
        {
            get => _multiStatementCounts ?? (_multiStatementCounts = new InputList<Inputs.TaskParameterMultiStatementCountArgs>());
            set => _multiStatementCounts = value;
        }

        [Input("noorderSequenceAsDefaults")]
        private InputList<Inputs.TaskParameterNoorderSequenceAsDefaultArgs>? _noorderSequenceAsDefaults;
        public InputList<Inputs.TaskParameterNoorderSequenceAsDefaultArgs> NoorderSequenceAsDefaults
        {
            get => _noorderSequenceAsDefaults ?? (_noorderSequenceAsDefaults = new InputList<Inputs.TaskParameterNoorderSequenceAsDefaultArgs>());
            set => _noorderSequenceAsDefaults = value;
        }

        [Input("odbcTreatDecimalAsInts")]
        private InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntArgs>? _odbcTreatDecimalAsInts;
        public InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntArgs> OdbcTreatDecimalAsInts
        {
            get => _odbcTreatDecimalAsInts ?? (_odbcTreatDecimalAsInts = new InputList<Inputs.TaskParameterOdbcTreatDecimalAsIntArgs>());
            set => _odbcTreatDecimalAsInts = value;
        }

        [Input("queryTags")]
        private InputList<Inputs.TaskParameterQueryTagArgs>? _queryTags;
        public InputList<Inputs.TaskParameterQueryTagArgs> QueryTags
        {
            get => _queryTags ?? (_queryTags = new InputList<Inputs.TaskParameterQueryTagArgs>());
            set => _queryTags = value;
        }

        [Input("quotedIdentifiersIgnoreCases")]
        private InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseArgs>? _quotedIdentifiersIgnoreCases;
        public InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseArgs> QuotedIdentifiersIgnoreCases
        {
            get => _quotedIdentifiersIgnoreCases ?? (_quotedIdentifiersIgnoreCases = new InputList<Inputs.TaskParameterQuotedIdentifiersIgnoreCaseArgs>());
            set => _quotedIdentifiersIgnoreCases = value;
        }

        [Input("rowsPerResultsets")]
        private InputList<Inputs.TaskParameterRowsPerResultsetArgs>? _rowsPerResultsets;
        public InputList<Inputs.TaskParameterRowsPerResultsetArgs> RowsPerResultsets
        {
            get => _rowsPerResultsets ?? (_rowsPerResultsets = new InputList<Inputs.TaskParameterRowsPerResultsetArgs>());
            set => _rowsPerResultsets = value;
        }

        [Input("s3StageVpceDnsNames")]
        private InputList<Inputs.TaskParameterS3StageVpceDnsNameArgs>? _s3StageVpceDnsNames;
        public InputList<Inputs.TaskParameterS3StageVpceDnsNameArgs> S3StageVpceDnsNames
        {
            get => _s3StageVpceDnsNames ?? (_s3StageVpceDnsNames = new InputList<Inputs.TaskParameterS3StageVpceDnsNameArgs>());
            set => _s3StageVpceDnsNames = value;
        }

        [Input("searchPaths")]
        private InputList<Inputs.TaskParameterSearchPathArgs>? _searchPaths;
        public InputList<Inputs.TaskParameterSearchPathArgs> SearchPaths
        {
            get => _searchPaths ?? (_searchPaths = new InputList<Inputs.TaskParameterSearchPathArgs>());
            set => _searchPaths = value;
        }

        [Input("statementQueuedTimeoutInSeconds")]
        private InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondArgs>? _statementQueuedTimeoutInSeconds;
        public InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondArgs> StatementQueuedTimeoutInSeconds
        {
            get => _statementQueuedTimeoutInSeconds ?? (_statementQueuedTimeoutInSeconds = new InputList<Inputs.TaskParameterStatementQueuedTimeoutInSecondArgs>());
            set => _statementQueuedTimeoutInSeconds = value;
        }

        [Input("statementTimeoutInSeconds")]
        private InputList<Inputs.TaskParameterStatementTimeoutInSecondArgs>? _statementTimeoutInSeconds;
        public InputList<Inputs.TaskParameterStatementTimeoutInSecondArgs> StatementTimeoutInSeconds
        {
            get => _statementTimeoutInSeconds ?? (_statementTimeoutInSeconds = new InputList<Inputs.TaskParameterStatementTimeoutInSecondArgs>());
            set => _statementTimeoutInSeconds = value;
        }

        [Input("strictJsonOutputs")]
        private InputList<Inputs.TaskParameterStrictJsonOutputArgs>? _strictJsonOutputs;
        public InputList<Inputs.TaskParameterStrictJsonOutputArgs> StrictJsonOutputs
        {
            get => _strictJsonOutputs ?? (_strictJsonOutputs = new InputList<Inputs.TaskParameterStrictJsonOutputArgs>());
            set => _strictJsonOutputs = value;
        }

        [Input("suspendTaskAfterNumFailures")]
        private InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureArgs>? _suspendTaskAfterNumFailures;
        public InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureArgs> SuspendTaskAfterNumFailures
        {
            get => _suspendTaskAfterNumFailures ?? (_suspendTaskAfterNumFailures = new InputList<Inputs.TaskParameterSuspendTaskAfterNumFailureArgs>());
            set => _suspendTaskAfterNumFailures = value;
        }

        [Input("taskAutoRetryAttempts")]
        private InputList<Inputs.TaskParameterTaskAutoRetryAttemptArgs>? _taskAutoRetryAttempts;
        public InputList<Inputs.TaskParameterTaskAutoRetryAttemptArgs> TaskAutoRetryAttempts
        {
            get => _taskAutoRetryAttempts ?? (_taskAutoRetryAttempts = new InputList<Inputs.TaskParameterTaskAutoRetryAttemptArgs>());
            set => _taskAutoRetryAttempts = value;
        }

        [Input("timeInputFormats")]
        private InputList<Inputs.TaskParameterTimeInputFormatArgs>? _timeInputFormats;
        public InputList<Inputs.TaskParameterTimeInputFormatArgs> TimeInputFormats
        {
            get => _timeInputFormats ?? (_timeInputFormats = new InputList<Inputs.TaskParameterTimeInputFormatArgs>());
            set => _timeInputFormats = value;
        }

        [Input("timeOutputFormats")]
        private InputList<Inputs.TaskParameterTimeOutputFormatArgs>? _timeOutputFormats;
        public InputList<Inputs.TaskParameterTimeOutputFormatArgs> TimeOutputFormats
        {
            get => _timeOutputFormats ?? (_timeOutputFormats = new InputList<Inputs.TaskParameterTimeOutputFormatArgs>());
            set => _timeOutputFormats = value;
        }

        [Input("timestampDayIsAlways24hs")]
        private InputList<Inputs.TaskParameterTimestampDayIsAlways24hArgs>? _timestampDayIsAlways24hs;
        public InputList<Inputs.TaskParameterTimestampDayIsAlways24hArgs> TimestampDayIsAlways24hs
        {
            get => _timestampDayIsAlways24hs ?? (_timestampDayIsAlways24hs = new InputList<Inputs.TaskParameterTimestampDayIsAlways24hArgs>());
            set => _timestampDayIsAlways24hs = value;
        }

        [Input("timestampInputFormats")]
        private InputList<Inputs.TaskParameterTimestampInputFormatArgs>? _timestampInputFormats;
        public InputList<Inputs.TaskParameterTimestampInputFormatArgs> TimestampInputFormats
        {
            get => _timestampInputFormats ?? (_timestampInputFormats = new InputList<Inputs.TaskParameterTimestampInputFormatArgs>());
            set => _timestampInputFormats = value;
        }

        [Input("timestampLtzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampLtzOutputFormatArgs>? _timestampLtzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampLtzOutputFormatArgs> TimestampLtzOutputFormats
        {
            get => _timestampLtzOutputFormats ?? (_timestampLtzOutputFormats = new InputList<Inputs.TaskParameterTimestampLtzOutputFormatArgs>());
            set => _timestampLtzOutputFormats = value;
        }

        [Input("timestampNtzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampNtzOutputFormatArgs>? _timestampNtzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampNtzOutputFormatArgs> TimestampNtzOutputFormats
        {
            get => _timestampNtzOutputFormats ?? (_timestampNtzOutputFormats = new InputList<Inputs.TaskParameterTimestampNtzOutputFormatArgs>());
            set => _timestampNtzOutputFormats = value;
        }

        [Input("timestampOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampOutputFormatArgs>? _timestampOutputFormats;
        public InputList<Inputs.TaskParameterTimestampOutputFormatArgs> TimestampOutputFormats
        {
            get => _timestampOutputFormats ?? (_timestampOutputFormats = new InputList<Inputs.TaskParameterTimestampOutputFormatArgs>());
            set => _timestampOutputFormats = value;
        }

        [Input("timestampTypeMappings")]
        private InputList<Inputs.TaskParameterTimestampTypeMappingArgs>? _timestampTypeMappings;
        public InputList<Inputs.TaskParameterTimestampTypeMappingArgs> TimestampTypeMappings
        {
            get => _timestampTypeMappings ?? (_timestampTypeMappings = new InputList<Inputs.TaskParameterTimestampTypeMappingArgs>());
            set => _timestampTypeMappings = value;
        }

        [Input("timestampTzOutputFormats")]
        private InputList<Inputs.TaskParameterTimestampTzOutputFormatArgs>? _timestampTzOutputFormats;
        public InputList<Inputs.TaskParameterTimestampTzOutputFormatArgs> TimestampTzOutputFormats
        {
            get => _timestampTzOutputFormats ?? (_timestampTzOutputFormats = new InputList<Inputs.TaskParameterTimestampTzOutputFormatArgs>());
            set => _timestampTzOutputFormats = value;
        }

        [Input("timezones")]
        private InputList<Inputs.TaskParameterTimezoneArgs>? _timezones;
        public InputList<Inputs.TaskParameterTimezoneArgs> Timezones
        {
            get => _timezones ?? (_timezones = new InputList<Inputs.TaskParameterTimezoneArgs>());
            set => _timezones = value;
        }

        [Input("traceLevels")]
        private InputList<Inputs.TaskParameterTraceLevelArgs>? _traceLevels;
        public InputList<Inputs.TaskParameterTraceLevelArgs> TraceLevels
        {
            get => _traceLevels ?? (_traceLevels = new InputList<Inputs.TaskParameterTraceLevelArgs>());
            set => _traceLevels = value;
        }

        [Input("transactionAbortOnErrors")]
        private InputList<Inputs.TaskParameterTransactionAbortOnErrorArgs>? _transactionAbortOnErrors;
        public InputList<Inputs.TaskParameterTransactionAbortOnErrorArgs> TransactionAbortOnErrors
        {
            get => _transactionAbortOnErrors ?? (_transactionAbortOnErrors = new InputList<Inputs.TaskParameterTransactionAbortOnErrorArgs>());
            set => _transactionAbortOnErrors = value;
        }

        [Input("transactionDefaultIsolationLevels")]
        private InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelArgs>? _transactionDefaultIsolationLevels;
        public InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelArgs> TransactionDefaultIsolationLevels
        {
            get => _transactionDefaultIsolationLevels ?? (_transactionDefaultIsolationLevels = new InputList<Inputs.TaskParameterTransactionDefaultIsolationLevelArgs>());
            set => _transactionDefaultIsolationLevels = value;
        }

        [Input("twoDigitCenturyStarts")]
        private InputList<Inputs.TaskParameterTwoDigitCenturyStartArgs>? _twoDigitCenturyStarts;
        public InputList<Inputs.TaskParameterTwoDigitCenturyStartArgs> TwoDigitCenturyStarts
        {
            get => _twoDigitCenturyStarts ?? (_twoDigitCenturyStarts = new InputList<Inputs.TaskParameterTwoDigitCenturyStartArgs>());
            set => _twoDigitCenturyStarts = value;
        }

        [Input("unsupportedDdlActions")]
        private InputList<Inputs.TaskParameterUnsupportedDdlActionArgs>? _unsupportedDdlActions;
        public InputList<Inputs.TaskParameterUnsupportedDdlActionArgs> UnsupportedDdlActions
        {
            get => _unsupportedDdlActions ?? (_unsupportedDdlActions = new InputList<Inputs.TaskParameterUnsupportedDdlActionArgs>());
            set => _unsupportedDdlActions = value;
        }

        [Input("useCachedResults")]
        private InputList<Inputs.TaskParameterUseCachedResultArgs>? _useCachedResults;
        public InputList<Inputs.TaskParameterUseCachedResultArgs> UseCachedResults
        {
            get => _useCachedResults ?? (_useCachedResults = new InputList<Inputs.TaskParameterUseCachedResultArgs>());
            set => _useCachedResults = value;
        }

        [Input("userTaskManagedInitialWarehouseSizes")]
        private InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeArgs>? _userTaskManagedInitialWarehouseSizes;
        public InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeArgs> UserTaskManagedInitialWarehouseSizes
        {
            get => _userTaskManagedInitialWarehouseSizes ?? (_userTaskManagedInitialWarehouseSizes = new InputList<Inputs.TaskParameterUserTaskManagedInitialWarehouseSizeArgs>());
            set => _userTaskManagedInitialWarehouseSizes = value;
        }

        [Input("userTaskMinimumTriggerIntervalInSeconds")]
        private InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondArgs>? _userTaskMinimumTriggerIntervalInSeconds;
        public InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondArgs> UserTaskMinimumTriggerIntervalInSeconds
        {
            get => _userTaskMinimumTriggerIntervalInSeconds ?? (_userTaskMinimumTriggerIntervalInSeconds = new InputList<Inputs.TaskParameterUserTaskMinimumTriggerIntervalInSecondArgs>());
            set => _userTaskMinimumTriggerIntervalInSeconds = value;
        }

        [Input("userTaskTimeoutMs")]
        private InputList<Inputs.TaskParameterUserTaskTimeoutMArgs>? _userTaskTimeoutMs;
        public InputList<Inputs.TaskParameterUserTaskTimeoutMArgs> UserTaskTimeoutMs
        {
            get => _userTaskTimeoutMs ?? (_userTaskTimeoutMs = new InputList<Inputs.TaskParameterUserTaskTimeoutMArgs>());
            set => _userTaskTimeoutMs = value;
        }

        [Input("weekOfYearPolicies")]
        private InputList<Inputs.TaskParameterWeekOfYearPolicyArgs>? _weekOfYearPolicies;
        public InputList<Inputs.TaskParameterWeekOfYearPolicyArgs> WeekOfYearPolicies
        {
            get => _weekOfYearPolicies ?? (_weekOfYearPolicies = new InputList<Inputs.TaskParameterWeekOfYearPolicyArgs>());
            set => _weekOfYearPolicies = value;
        }

        [Input("weekStarts")]
        private InputList<Inputs.TaskParameterWeekStartArgs>? _weekStarts;
        public InputList<Inputs.TaskParameterWeekStartArgs> WeekStarts
        {
            get => _weekStarts ?? (_weekStarts = new InputList<Inputs.TaskParameterWeekStartArgs>());
            set => _weekStarts = value;
        }

        public TaskParameterArgs()
        {
        }
        public static new TaskParameterArgs Empty => new TaskParameterArgs();
    }
}
