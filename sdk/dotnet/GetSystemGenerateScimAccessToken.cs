// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetSystemGenerateScimAccessToken
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var scim = Output.Create(Snowflake.GetSystemGenerateScimAccessToken.InvokeAsync(new Snowflake.GetSystemGenerateScimAccessTokenArgs
        ///         {
        ///             IntegrationName = "AAD_PROVISIONING",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSystemGenerateScimAccessTokenResult> InvokeAsync(GetSystemGenerateScimAccessTokenArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSystemGenerateScimAccessTokenResult>("snowflake:index/getSystemGenerateScimAccessToken:getSystemGenerateScimAccessToken", args ?? new GetSystemGenerateScimAccessTokenArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var scim = Output.Create(Snowflake.GetSystemGenerateScimAccessToken.InvokeAsync(new Snowflake.GetSystemGenerateScimAccessTokenArgs
        ///         {
        ///             IntegrationName = "AAD_PROVISIONING",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSystemGenerateScimAccessTokenResult> Invoke(GetSystemGenerateScimAccessTokenInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSystemGenerateScimAccessTokenResult>("snowflake:index/getSystemGenerateScimAccessToken:getSystemGenerateScimAccessToken", args ?? new GetSystemGenerateScimAccessTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSystemGenerateScimAccessTokenArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// SCIM Integration Name
        /// </summary>
        [Input("integrationName", required: true)]
        public string IntegrationName { get; set; } = null!;

        public GetSystemGenerateScimAccessTokenArgs()
        {
        }
    }

    public sealed class GetSystemGenerateScimAccessTokenInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// SCIM Integration Name
        /// </summary>
        [Input("integrationName", required: true)]
        public Input<string> IntegrationName { get; set; } = null!;

        public GetSystemGenerateScimAccessTokenInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSystemGenerateScimAccessTokenResult
    {
        /// <summary>
        /// SCIM Access Token
        /// </summary>
        public readonly string AccessToken;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// SCIM Integration Name
        /// </summary>
        public readonly string IntegrationName;

        [OutputConstructor]
        private GetSystemGenerateScimAccessTokenResult(
            string accessToken,

            string id,

            string integrationName)
        {
            AccessToken = accessToken;
            Id = id;
            IntegrationName = integrationName;
        }
    }
}
