// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetCortexSearchServices
    {
        public static Task<GetCortexSearchServicesResult> InvokeAsync(GetCortexSearchServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCortexSearchServicesResult>("snowflake:index/getCortexSearchServices:getCortexSearchServices", args ?? new GetCortexSearchServicesArgs(), options.WithDefaults());

        public static Output<GetCortexSearchServicesResult> Invoke(GetCortexSearchServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCortexSearchServicesResult>("snowflake:index/getCortexSearchServices:getCortexSearchServices", args ?? new GetCortexSearchServicesInvokeArgs(), options.WithDefaults());

        public static Output<GetCortexSearchServicesResult> Invoke(GetCortexSearchServicesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCortexSearchServicesResult>("snowflake:index/getCortexSearchServices:getCortexSearchServices", args ?? new GetCortexSearchServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCortexSearchServicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Inputs.GetCortexSearchServicesInArgs? In { get; set; }

        [Input("like")]
        public string? Like { get; set; }

        [Input("limit")]
        public Inputs.GetCortexSearchServicesLimitArgs? Limit { get; set; }

        [Input("startsWith")]
        public string? StartsWith { get; set; }

        public GetCortexSearchServicesArgs()
        {
        }
        public static new GetCortexSearchServicesArgs Empty => new GetCortexSearchServicesArgs();
    }

    public sealed class GetCortexSearchServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Input<Inputs.GetCortexSearchServicesInInputArgs>? In { get; set; }

        [Input("like")]
        public Input<string>? Like { get; set; }

        [Input("limit")]
        public Input<Inputs.GetCortexSearchServicesLimitInputArgs>? Limit { get; set; }

        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        public GetCortexSearchServicesInvokeArgs()
        {
        }
        public static new GetCortexSearchServicesInvokeArgs Empty => new GetCortexSearchServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCortexSearchServicesResult
    {
        public readonly ImmutableArray<Outputs.GetCortexSearchServicesCortexSearchServiceResult> CortexSearchServices;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetCortexSearchServicesInResult? In;
        public readonly string? Like;
        public readonly Outputs.GetCortexSearchServicesLimitResult? Limit;
        public readonly string? StartsWith;

        [OutputConstructor]
        private GetCortexSearchServicesResult(
            ImmutableArray<Outputs.GetCortexSearchServicesCortexSearchServiceResult> cortexSearchServices,

            string id,

            Outputs.GetCortexSearchServicesInResult? @in,

            string? like,

            Outputs.GetCortexSearchServicesLimitResult? limit,

            string? startsWith)
        {
            CortexSearchServices = cortexSearchServices;
            Id = id;
            In = @in;
            Like = like;
            Limit = limit;
            StartsWith = startsWith;
        }
    }
}
