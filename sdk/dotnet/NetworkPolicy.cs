// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Snowflake = Pulumi.Snowflake;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var policy = new Snowflake.NetworkPolicy("policy", new()
    ///     {
    ///         AllowedIpLists = new[]
    ///         {
    ///             "192.168.0.100/24",
    ///         },
    ///         BlockedIpLists = new[]
    ///         {
    ///             "192.168.0.101",
    ///         },
    ///         Comment = "A policy.",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/networkPolicy:NetworkPolicy example policyname
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/networkPolicy:NetworkPolicy")]
    public partial class NetworkPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account
        /// </summary>
        [Output("allowedIpLists")]
        public Output<ImmutableArray<string>> AllowedIpLists { get; private set; } = null!;

        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake account\n\n\n\n**Do not** add `0.0.0.0/0` to `blocked_ip_list`
        /// </summary>
        [Output("blockedIpLists")]
        public Output<ImmutableArray<string>> BlockedIpLists { get; private set; } = null!;

        /// <summary>
        /// Specifies a comment for the network policy.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkPolicy(string name, NetworkPolicyArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/networkPolicy:NetworkPolicy", name, args ?? new NetworkPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkPolicy(string name, Input<string> id, NetworkPolicyState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/networkPolicy:NetworkPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkPolicy Get(string name, Input<string> id, NetworkPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkPolicy(name, id, state, options);
        }
    }

    public sealed class NetworkPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedIpLists", required: true)]
        private InputList<string>? _allowedIpLists;

        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account
        /// </summary>
        public InputList<string> AllowedIpLists
        {
            get => _allowedIpLists ?? (_allowedIpLists = new InputList<string>());
            set => _allowedIpLists = value;
        }

        [Input("blockedIpLists")]
        private InputList<string>? _blockedIpLists;

        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake account\n\n\n\n**Do not** add `0.0.0.0/0` to `blocked_ip_list`
        /// </summary>
        public InputList<string> BlockedIpLists
        {
            get => _blockedIpLists ?? (_blockedIpLists = new InputList<string>());
            set => _blockedIpLists = value;
        }

        /// <summary>
        /// Specifies a comment for the network policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NetworkPolicyArgs()
        {
        }
        public static new NetworkPolicyArgs Empty => new NetworkPolicyArgs();
    }

    public sealed class NetworkPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("allowedIpLists")]
        private InputList<string>? _allowedIpLists;

        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account
        /// </summary>
        public InputList<string> AllowedIpLists
        {
            get => _allowedIpLists ?? (_allowedIpLists = new InputList<string>());
            set => _allowedIpLists = value;
        }

        [Input("blockedIpLists")]
        private InputList<string>? _blockedIpLists;

        /// <summary>
        /// Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake account\n\n\n\n**Do not** add `0.0.0.0/0` to `blocked_ip_list`
        /// </summary>
        public InputList<string> BlockedIpLists
        {
            get => _blockedIpLists ?? (_blockedIpLists = new InputList<string>());
            set => _blockedIpLists = value;
        }

        /// <summary>
        /// Specifies a comment for the network policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NetworkPolicyState()
        {
        }
        public static new NetworkPolicyState Empty => new NetworkPolicyState();
    }
}
