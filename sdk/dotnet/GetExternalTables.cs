// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetExternalTables
    {
        public static Task<GetExternalTablesResult> InvokeAsync(GetExternalTablesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExternalTablesResult>("snowflake:index/getExternalTables:getExternalTables", args ?? new GetExternalTablesArgs(), options.WithDefaults());

        public static Output<GetExternalTablesResult> Invoke(GetExternalTablesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalTablesResult>("snowflake:index/getExternalTables:getExternalTables", args ?? new GetExternalTablesInvokeArgs(), options.WithDefaults());

        public static Output<GetExternalTablesResult> Invoke(GetExternalTablesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetExternalTablesResult>("snowflake:index/getExternalTables:getExternalTables", args ?? new GetExternalTablesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExternalTablesArgs : global::Pulumi.InvokeArgs
    {
        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        [Input("schema", required: true)]
        public string Schema { get; set; } = null!;

        public GetExternalTablesArgs()
        {
        }
        public static new GetExternalTablesArgs Empty => new GetExternalTablesArgs();
    }

    public sealed class GetExternalTablesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        public GetExternalTablesInvokeArgs()
        {
        }
        public static new GetExternalTablesInvokeArgs Empty => new GetExternalTablesInvokeArgs();
    }


    [OutputType]
    public sealed class GetExternalTablesResult
    {
        public readonly string Database;
        public readonly ImmutableArray<Outputs.GetExternalTablesExternalTableResult> ExternalTables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Schema;

        [OutputConstructor]
        private GetExternalTablesResult(
            string database,

            ImmutableArray<Outputs.GetExternalTablesExternalTableResult> externalTables,

            string id,

            string schema)
        {
            Database = database;
            ExternalTables = externalTables;
            Id = id;
            Schema = schema;
        }
    }
}
