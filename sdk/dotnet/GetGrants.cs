// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetGrants
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var grants = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOn = new Snowflake.Inputs.GetGrantsGrantsOnInputArgs
        ///         {
        ///             Account = true,
        ///         },
        ///     });
        /// 
        ///     var grants2 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOn = new Snowflake.Inputs.GetGrantsGrantsOnInputArgs
        ///         {
        ///             ObjectName = "\"tst\"",
        ///             ObjectType = "DATABASE",
        ///         },
        ///     });
        /// 
        ///     var grants3 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsTo = new Snowflake.Inputs.GetGrantsGrantsToInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        ///     var grants4 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOf = new Snowflake.Inputs.GetGrantsGrantsOfInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        ///     var grants5 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsIn = new Snowflake.Inputs.GetGrantsFutureGrantsInInputArgs
        ///         {
        ///             Database = "\"tst\"",
        ///         },
        ///     });
        /// 
        ///     var grants6 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsIn = new Snowflake.Inputs.GetGrantsFutureGrantsInInputArgs
        ///         {
        ///             Schema = new Snowflake.Inputs.GetGrantsFutureGrantsInSchemaInputArgs
        ///             {
        ///                 DatabaseName = "\"mydatabase\"",
        ///                 SchemaName = "\"myschema\"",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var grants7 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsTo = new Snowflake.Inputs.GetGrantsFutureGrantsToInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGrantsResult> InvokeAsync(GetGrantsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGrantsResult>("snowflake:index/getGrants:getGrants", args ?? new GetGrantsArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Snowflake = Pulumi.Snowflake;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var grants = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOn = new Snowflake.Inputs.GetGrantsGrantsOnInputArgs
        ///         {
        ///             Account = true,
        ///         },
        ///     });
        /// 
        ///     var grants2 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOn = new Snowflake.Inputs.GetGrantsGrantsOnInputArgs
        ///         {
        ///             ObjectName = "\"tst\"",
        ///             ObjectType = "DATABASE",
        ///         },
        ///     });
        /// 
        ///     var grants3 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsTo = new Snowflake.Inputs.GetGrantsGrantsToInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        ///     var grants4 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         GrantsOf = new Snowflake.Inputs.GetGrantsGrantsOfInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        ///     var grants5 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsIn = new Snowflake.Inputs.GetGrantsFutureGrantsInInputArgs
        ///         {
        ///             Database = "\"tst\"",
        ///         },
        ///     });
        /// 
        ///     var grants6 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsIn = new Snowflake.Inputs.GetGrantsFutureGrantsInInputArgs
        ///         {
        ///             Schema = new Snowflake.Inputs.GetGrantsFutureGrantsInSchemaInputArgs
        ///             {
        ///                 DatabaseName = "\"mydatabase\"",
        ///                 SchemaName = "\"myschema\"",
        ///             },
        ///         },
        ///     });
        /// 
        ///     var grants7 = Snowflake.GetGrants.Invoke(new()
        ///     {
        ///         FutureGrantsTo = new Snowflake.Inputs.GetGrantsFutureGrantsToInputArgs
        ///         {
        ///             Role = "ACCOUNTADMIN",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGrantsResult> Invoke(GetGrantsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGrantsResult>("snowflake:index/getGrants:getGrants", args ?? new GetGrantsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGrantsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Lists all privileges on new (i.e. future) objects
        /// </summary>
        [Input("futureGrantsIn")]
        public Inputs.GetGrantsFutureGrantsInArgs? FutureGrantsIn { get; set; }

        /// <summary>
        /// Lists all privileges granted to the object on new (i.e. future) objects
        /// </summary>
        [Input("futureGrantsTo")]
        public Inputs.GetGrantsFutureGrantsToArgs? FutureGrantsTo { get; set; }

        /// <summary>
        /// Lists all objects to which the given object has been granted
        /// </summary>
        [Input("grantsOf")]
        public Inputs.GetGrantsGrantsOfArgs? GrantsOf { get; set; }

        /// <summary>
        /// Lists all privileges that have been granted on an object or account
        /// </summary>
        [Input("grantsOn")]
        public Inputs.GetGrantsGrantsOnArgs? GrantsOn { get; set; }

        /// <summary>
        /// Lists all privileges granted to the object
        /// </summary>
        [Input("grantsTo")]
        public Inputs.GetGrantsGrantsToArgs? GrantsTo { get; set; }

        public GetGrantsArgs()
        {
        }
        public static new GetGrantsArgs Empty => new GetGrantsArgs();
    }

    public sealed class GetGrantsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Lists all privileges on new (i.e. future) objects
        /// </summary>
        [Input("futureGrantsIn")]
        public Input<Inputs.GetGrantsFutureGrantsInInputArgs>? FutureGrantsIn { get; set; }

        /// <summary>
        /// Lists all privileges granted to the object on new (i.e. future) objects
        /// </summary>
        [Input("futureGrantsTo")]
        public Input<Inputs.GetGrantsFutureGrantsToInputArgs>? FutureGrantsTo { get; set; }

        /// <summary>
        /// Lists all objects to which the given object has been granted
        /// </summary>
        [Input("grantsOf")]
        public Input<Inputs.GetGrantsGrantsOfInputArgs>? GrantsOf { get; set; }

        /// <summary>
        /// Lists all privileges that have been granted on an object or account
        /// </summary>
        [Input("grantsOn")]
        public Input<Inputs.GetGrantsGrantsOnInputArgs>? GrantsOn { get; set; }

        /// <summary>
        /// Lists all privileges granted to the object
        /// </summary>
        [Input("grantsTo")]
        public Input<Inputs.GetGrantsGrantsToInputArgs>? GrantsTo { get; set; }

        public GetGrantsInvokeArgs()
        {
        }
        public static new GetGrantsInvokeArgs Empty => new GetGrantsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGrantsResult
    {
        /// <summary>
        /// Lists all privileges on new (i.e. future) objects
        /// </summary>
        public readonly Outputs.GetGrantsFutureGrantsInResult? FutureGrantsIn;
        /// <summary>
        /// Lists all privileges granted to the object on new (i.e. future) objects
        /// </summary>
        public readonly Outputs.GetGrantsFutureGrantsToResult? FutureGrantsTo;
        /// <summary>
        /// The list of grants
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGrantsGrantResult> Grants;
        /// <summary>
        /// Lists all objects to which the given object has been granted
        /// </summary>
        public readonly Outputs.GetGrantsGrantsOfResult? GrantsOf;
        /// <summary>
        /// Lists all privileges that have been granted on an object or account
        /// </summary>
        public readonly Outputs.GetGrantsGrantsOnResult? GrantsOn;
        /// <summary>
        /// Lists all privileges granted to the object
        /// </summary>
        public readonly Outputs.GetGrantsGrantsToResult? GrantsTo;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetGrantsResult(
            Outputs.GetGrantsFutureGrantsInResult? futureGrantsIn,

            Outputs.GetGrantsFutureGrantsToResult? futureGrantsTo,

            ImmutableArray<Outputs.GetGrantsGrantResult> grants,

            Outputs.GetGrantsGrantsOfResult? grantsOf,

            Outputs.GetGrantsGrantsOnResult? grantsOn,

            Outputs.GetGrantsGrantsToResult? grantsTo,

            string id)
        {
            FutureGrantsIn = futureGrantsIn;
            FutureGrantsTo = futureGrantsTo;
            Grants = grants;
            GrantsOf = grantsOf;
            GrantsOn = grantsOn;
            GrantsTo = grantsTo;
            Id = id;
        }
    }
}
