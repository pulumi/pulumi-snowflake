// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Snowflake = Pulumi.Snowflake;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rule = new Snowflake.NetworkRule("rule", new()
    ///     {
    ///         Name = "rule",
    ///         Database = "EXAMPLE_DB",
    ///         Schema = "EXAMPLE_SCHEMA",
    ///         Comment = "A rule.",
    ///         Type = "IPV4",
    ///         Mode = "INGRESS",
    ///         ValueLists = new[]
    ///         {
    ///             "192.168.0.100/24",
    ///             "29.254.123.20",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/networkRule:NetworkRule example 'databaseName|schemaName|networkRuleName'
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/networkRule:NetworkRule")]
    public partial class NetworkRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a comment for the network rule.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The database in which to create the network rule.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// Specifies what is restricted by the network rule. Valid values are INGRESS, INTERNAL_STAGE and EGRESS; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for the network rule; must be unique for the database and schema in which the network rule is created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Qualified name of the network rule.
        /// </summary>
        [Output("qualifiedName")]
        public Output<string> QualifiedName { get; private set; } = null!;

        /// <summary>
        /// The schema in which to create the network rule.
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of network identifiers being allowed or blocked. A network rule can have only one type. Allowed values are IPV4, AWSVPCEID, AZURELINKID and HOST_PORT; allowed values are determined by the mode of the network rule; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the network identifiers that will be allowed or blocked. Valid values in the list are determined by the type of network rule, see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Output("valueLists")]
        public Output<ImmutableArray<string>> ValueLists { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkRule(string name, NetworkRuleArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/networkRule:NetworkRule", name, args ?? new NetworkRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkRule(string name, Input<string> id, NetworkRuleState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/networkRule:NetworkRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkRule Get(string name, Input<string> id, NetworkRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkRule(name, id, state, options);
        }
    }

    public sealed class NetworkRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the network rule.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The database in which to create the network rule.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Specifies what is restricted by the network rule. Valid values are INGRESS, INTERNAL_STAGE and EGRESS; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier for the network rule; must be unique for the database and schema in which the network rule is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The schema in which to create the network rule.
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// Specifies the type of network identifiers being allowed or blocked. A network rule can have only one type. Allowed values are IPV4, AWSVPCEID, AZURELINKID and HOST_PORT; allowed values are determined by the mode of the network rule; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("valueLists", required: true)]
        private InputList<string>? _valueLists;

        /// <summary>
        /// Specifies the network identifiers that will be allowed or blocked. Valid values in the list are determined by the type of network rule, see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        public InputList<string> ValueLists
        {
            get => _valueLists ?? (_valueLists = new InputList<string>());
            set => _valueLists = value;
        }

        public NetworkRuleArgs()
        {
        }
        public static new NetworkRuleArgs Empty => new NetworkRuleArgs();
    }

    public sealed class NetworkRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the network rule.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The database in which to create the network rule.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// Specifies what is restricted by the network rule. Valid values are INGRESS, INTERNAL_STAGE and EGRESS; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Specifies the identifier for the network rule; must be unique for the database and schema in which the network rule is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Qualified name of the network rule.
        /// </summary>
        [Input("qualifiedName")]
        public Input<string>? QualifiedName { get; set; }

        /// <summary>
        /// The schema in which to create the network rule.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// Specifies the type of network identifiers being allowed or blocked. A network rule can have only one type. Allowed values are IPV4, AWSVPCEID, AZURELINKID and HOST_PORT; allowed values are determined by the mode of the network rule; see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("valueLists")]
        private InputList<string>? _valueLists;

        /// <summary>
        /// Specifies the network identifiers that will be allowed or blocked. Valid values in the list are determined by the type of network rule, see https://docs.snowflake.com/en/sql-reference/sql/create-network-rule#required-parameters for details.
        /// </summary>
        public InputList<string> ValueLists
        {
            get => _valueLists ?? (_valueLists = new InputList<string>());
            set => _valueLists = value;
        }

        public NetworkRuleState()
        {
        }
        public static new NetworkRuleState Empty => new NetworkRuleState();
    }
}
