// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    [SnowflakeResourceType("snowflake:index/accountPasswordPolicyAttachment:AccountPasswordPolicyAttachment")]
    public partial class AccountPasswordPolicyAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Qualified name (`"db"."schema"."PolicyName"`) of the password policy to apply to the current account.
        /// </summary>
        [Output("passwordPolicy")]
        public Output<string> PasswordPolicy { get; private set; } = null!;


        /// <summary>
        /// Create a AccountPasswordPolicyAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountPasswordPolicyAttachment(string name, AccountPasswordPolicyAttachmentArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/accountPasswordPolicyAttachment:AccountPasswordPolicyAttachment", name, args ?? new AccountPasswordPolicyAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountPasswordPolicyAttachment(string name, Input<string> id, AccountPasswordPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/accountPasswordPolicyAttachment:AccountPasswordPolicyAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountPasswordPolicyAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountPasswordPolicyAttachment Get(string name, Input<string> id, AccountPasswordPolicyAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountPasswordPolicyAttachment(name, id, state, options);
        }
    }

    public sealed class AccountPasswordPolicyAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Qualified name (`"db"."schema"."PolicyName"`) of the password policy to apply to the current account.
        /// </summary>
        [Input("passwordPolicy", required: true)]
        public Input<string> PasswordPolicy { get; set; } = null!;

        public AccountPasswordPolicyAttachmentArgs()
        {
        }
        public static new AccountPasswordPolicyAttachmentArgs Empty => new AccountPasswordPolicyAttachmentArgs();
    }

    public sealed class AccountPasswordPolicyAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Qualified name (`"db"."schema"."PolicyName"`) of the password policy to apply to the current account.
        /// </summary>
        [Input("passwordPolicy")]
        public Input<string>? PasswordPolicy { get; set; }

        public AccountPasswordPolicyAttachmentState()
        {
        }
        public static new AccountPasswordPolicyAttachmentState Empty => new AccountPasswordPolicyAttachmentState();
    }
}
