// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetImageRepositories
    {
        /// <summary>
        /// !&gt; **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `preview_features_enabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
        /// 
        /// Data source used to get details of filtered image repositories. Filtering is aligned with the current possibilities for [SHOW IMAGE REPOSITORIES](https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories) query. The results of SHOW are encapsulated in one output collection `image_repositories`.
        /// </summary>
        public static Task<GetImageRepositoriesResult> InvokeAsync(GetImageRepositoriesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageRepositoriesResult>("snowflake:index/getImageRepositories:getImageRepositories", args ?? new GetImageRepositoriesArgs(), options.WithDefaults());

        /// <summary>
        /// !&gt; **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `preview_features_enabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
        /// 
        /// Data source used to get details of filtered image repositories. Filtering is aligned with the current possibilities for [SHOW IMAGE REPOSITORIES](https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories) query. The results of SHOW are encapsulated in one output collection `image_repositories`.
        /// </summary>
        public static Output<GetImageRepositoriesResult> Invoke(GetImageRepositoriesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageRepositoriesResult>("snowflake:index/getImageRepositories:getImageRepositories", args ?? new GetImageRepositoriesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// !&gt; **Caution: Preview Feature** This feature is considered a preview feature in the provider, regardless of the state of the resource in Snowflake. We do not guarantee its stability. It will be reworked and marked as a stable feature in future releases. Breaking changes are expected, even without bumping the major version. To use this feature, add the relevant feature name to `preview_features_enabled` field in the provider configuration. Please always refer to the Getting Help section in our Github repo to best determine how to get help for your questions.
        /// 
        /// Data source used to get details of filtered image repositories. Filtering is aligned with the current possibilities for [SHOW IMAGE REPOSITORIES](https://docs.snowflake.com/en/sql-reference/sql/show-image-repositories) query. The results of SHOW are encapsulated in one output collection `image_repositories`.
        /// </summary>
        public static Output<GetImageRepositoriesResult> Invoke(GetImageRepositoriesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageRepositoriesResult>("snowflake:index/getImageRepositories:getImageRepositories", args ?? new GetImageRepositoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageRepositoriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// IN clause to filter the list of objects
        /// </summary>
        [Input("in")]
        public Inputs.GetImageRepositoriesInArgs? In { get; set; }

        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        [Input("like")]
        public string? Like { get; set; }

        public GetImageRepositoriesArgs()
        {
        }
        public static new GetImageRepositoriesArgs Empty => new GetImageRepositoriesArgs();
    }

    public sealed class GetImageRepositoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// IN clause to filter the list of objects
        /// </summary>
        [Input("in")]
        public Input<Inputs.GetImageRepositoriesInInputArgs>? In { get; set; }

        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        [Input("like")]
        public Input<string>? Like { get; set; }

        public GetImageRepositoriesInvokeArgs()
        {
        }
        public static new GetImageRepositoriesInvokeArgs Empty => new GetImageRepositoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageRepositoriesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Holds the aggregated output of all image repositories details queries.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageRepositoriesImageRepositoryResult> ImageRepositories;
        /// <summary>
        /// IN clause to filter the list of objects
        /// </summary>
        public readonly Outputs.GetImageRepositoriesInResult? In;
        /// <summary>
        /// Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
        /// </summary>
        public readonly string? Like;

        [OutputConstructor]
        private GetImageRepositoriesResult(
            string id,

            ImmutableArray<Outputs.GetImageRepositoriesImageRepositoryResult> imageRepositories,

            Outputs.GetImageRepositoriesInResult? @in,

            string? like)
        {
            Id = id;
            ImageRepositories = imageRepositories;
            In = @in;
            Like = like;
        }
    }
}
