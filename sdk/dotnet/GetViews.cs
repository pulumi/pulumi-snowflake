// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetViews
    {
        public static Task<GetViewsResult> InvokeAsync(GetViewsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetViewsResult>("snowflake:index/getViews:getViews", args ?? new GetViewsArgs(), options.WithDefaults());

        public static Output<GetViewsResult> Invoke(GetViewsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetViewsResult>("snowflake:index/getViews:getViews", args ?? new GetViewsInvokeArgs(), options.WithDefaults());

        public static Output<GetViewsResult> Invoke(GetViewsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetViewsResult>("snowflake:index/getViews:getViews", args ?? new GetViewsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetViewsArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Inputs.GetViewsInArgs? In { get; set; }

        [Input("like")]
        public string? Like { get; set; }

        [Input("limit")]
        public Inputs.GetViewsLimitArgs? Limit { get; set; }

        [Input("startsWith")]
        public string? StartsWith { get; set; }

        [Input("withDescribe")]
        public bool? WithDescribe { get; set; }

        public GetViewsArgs()
        {
        }
        public static new GetViewsArgs Empty => new GetViewsArgs();
    }

    public sealed class GetViewsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Input<Inputs.GetViewsInInputArgs>? In { get; set; }

        [Input("like")]
        public Input<string>? Like { get; set; }

        [Input("limit")]
        public Input<Inputs.GetViewsLimitInputArgs>? Limit { get; set; }

        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        [Input("withDescribe")]
        public Input<bool>? WithDescribe { get; set; }

        public GetViewsInvokeArgs()
        {
        }
        public static new GetViewsInvokeArgs Empty => new GetViewsInvokeArgs();
    }


    [OutputType]
    public sealed class GetViewsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetViewsInResult? In;
        public readonly string? Like;
        public readonly Outputs.GetViewsLimitResult? Limit;
        public readonly string? StartsWith;
        public readonly ImmutableArray<Outputs.GetViewsViewResult> Views;
        public readonly bool? WithDescribe;

        [OutputConstructor]
        private GetViewsResult(
            string id,

            Outputs.GetViewsInResult? @in,

            string? like,

            Outputs.GetViewsLimitResult? limit,

            string? startsWith,

            ImmutableArray<Outputs.GetViewsViewResult> views,

            bool? withDescribe)
        {
            Id = id;
            In = @in;
            Like = like;
            Limit = limit;
            StartsWith = startsWith;
            Views = views;
            WithDescribe = withDescribe;
        }
    }
}
