// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetStreamlits
    {
        public static Task<GetStreamlitsResult> InvokeAsync(GetStreamlitsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamlitsResult>("snowflake:index/getStreamlits:getStreamlits", args ?? new GetStreamlitsArgs(), options.WithDefaults());

        public static Output<GetStreamlitsResult> Invoke(GetStreamlitsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamlitsResult>("snowflake:index/getStreamlits:getStreamlits", args ?? new GetStreamlitsInvokeArgs(), options.WithDefaults());

        public static Output<GetStreamlitsResult> Invoke(GetStreamlitsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamlitsResult>("snowflake:index/getStreamlits:getStreamlits", args ?? new GetStreamlitsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamlitsArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Inputs.GetStreamlitsInArgs? In { get; set; }

        [Input("like")]
        public string? Like { get; set; }

        [Input("limit")]
        public Inputs.GetStreamlitsLimitArgs? Limit { get; set; }

        [Input("withDescribe")]
        public bool? WithDescribe { get; set; }

        public GetStreamlitsArgs()
        {
        }
        public static new GetStreamlitsArgs Empty => new GetStreamlitsArgs();
    }

    public sealed class GetStreamlitsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Input<Inputs.GetStreamlitsInInputArgs>? In { get; set; }

        [Input("like")]
        public Input<string>? Like { get; set; }

        [Input("limit")]
        public Input<Inputs.GetStreamlitsLimitInputArgs>? Limit { get; set; }

        [Input("withDescribe")]
        public Input<bool>? WithDescribe { get; set; }

        public GetStreamlitsInvokeArgs()
        {
        }
        public static new GetStreamlitsInvokeArgs Empty => new GetStreamlitsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamlitsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetStreamlitsInResult? In;
        public readonly string? Like;
        public readonly Outputs.GetStreamlitsLimitResult? Limit;
        public readonly ImmutableArray<Outputs.GetStreamlitsStreamlitResult> Streamlits;
        public readonly bool? WithDescribe;

        [OutputConstructor]
        private GetStreamlitsResult(
            string id,

            Outputs.GetStreamlitsInResult? @in,

            string? like,

            Outputs.GetStreamlitsLimitResult? limit,

            ImmutableArray<Outputs.GetStreamlitsStreamlitResult> streamlits,

            bool? withDescribe)
        {
            Id = id;
            In = @in;
            Like = like;
            Limit = limit;
            Streamlits = streamlits;
            WithDescribe = withDescribe;
        }
    }
}
