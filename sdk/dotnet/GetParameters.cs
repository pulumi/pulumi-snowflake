// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetParameters
    {
        public static Task<GetParametersResult> InvokeAsync(GetParametersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParametersResult>("snowflake:index/getParameters:getParameters", args ?? new GetParametersArgs(), options.WithDefaults());

        public static Output<GetParametersResult> Invoke(GetParametersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParametersResult>("snowflake:index/getParameters:getParameters", args ?? new GetParametersInvokeArgs(), options.WithDefaults());

        public static Output<GetParametersResult> Invoke(GetParametersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetParametersResult>("snowflake:index/getParameters:getParameters", args ?? new GetParametersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParametersArgs : global::Pulumi.InvokeArgs
    {
        [Input("objectName")]
        public string? ObjectName { get; set; }

        [Input("objectType")]
        public string? ObjectType { get; set; }

        [Input("parameterType")]
        public string? ParameterType { get; set; }

        [Input("pattern")]
        public string? Pattern { get; set; }

        [Input("user")]
        public string? User { get; set; }

        public GetParametersArgs()
        {
        }
        public static new GetParametersArgs Empty => new GetParametersArgs();
    }

    public sealed class GetParametersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("objectName")]
        public Input<string>? ObjectName { get; set; }

        [Input("objectType")]
        public Input<string>? ObjectType { get; set; }

        [Input("parameterType")]
        public Input<string>? ParameterType { get; set; }

        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        [Input("user")]
        public Input<string>? User { get; set; }

        public GetParametersInvokeArgs()
        {
        }
        public static new GetParametersInvokeArgs Empty => new GetParametersInvokeArgs();
    }


    [OutputType]
    public sealed class GetParametersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ObjectName;
        public readonly string? ObjectType;
        public readonly string? ParameterType;
        public readonly ImmutableArray<Outputs.GetParametersParameterResult> Parameters;
        public readonly string? Pattern;
        public readonly string? User;

        [OutputConstructor]
        private GetParametersResult(
            string id,

            string? objectName,

            string? objectType,

            string? parameterType,

            ImmutableArray<Outputs.GetParametersParameterResult> parameters,

            string? pattern,

            string? user)
        {
            Id = id;
            ObjectName = objectName;
            ObjectType = objectType;
            ParameterType = parameterType;
            Parameters = parameters;
            Pattern = pattern;
            User = user;
        }
    }
}
