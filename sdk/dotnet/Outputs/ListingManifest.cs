// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class ListingManifest
    {
        /// <summary>
        /// Manifest provided from a given stage. If the manifest file is in the root, only stage needs to be passed. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). A proper YAML indentation (2 spaces) is required.
        /// </summary>
        public readonly Outputs.ListingManifestFromStage? FromStage;
        /// <summary>
        /// Manifest provided as a string. Wrapping `$$` signs are added by the provider automatically; do not include them. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). Also, the multiline string syntax is a must here. A proper YAML indentation (2 spaces) is required.
        /// </summary>
        public readonly string? FromString;

        [OutputConstructor]
        private ListingManifest(
            Outputs.ListingManifestFromStage? fromStage,

            string? fromString)
        {
            FromStage = fromStage;
            FromString = fromString;
        }
    }
}
