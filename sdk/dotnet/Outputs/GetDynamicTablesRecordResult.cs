// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class GetDynamicTablesRecordResult
    {
        public readonly bool AutomaticClustering;
        public readonly int Bytes;
        public readonly string ClusterBy;
        public readonly string Comment;
        public readonly string CreatedOn;
        public readonly string DataTimestamp;
        public readonly string DatabaseName;
        public readonly bool IsClone;
        public readonly bool IsReplica;
        public readonly string LastSuspendedOn;
        public readonly string Name;
        public readonly string Owner;
        public readonly string RefreshMode;
        public readonly string RefreshModeReason;
        public readonly int Rows;
        public readonly string SchedulingState;
        public readonly string SchemaName;
        public readonly string TargetLag;
        public readonly string Text;
        public readonly string Warehouse;

        [OutputConstructor]
        private GetDynamicTablesRecordResult(
            bool automaticClustering,

            int bytes,

            string clusterBy,

            string comment,

            string createdOn,

            string dataTimestamp,

            string databaseName,

            bool isClone,

            bool isReplica,

            string lastSuspendedOn,

            string name,

            string owner,

            string refreshMode,

            string refreshModeReason,

            int rows,

            string schedulingState,

            string schemaName,

            string targetLag,

            string text,

            string warehouse)
        {
            AutomaticClustering = automaticClustering;
            Bytes = bytes;
            ClusterBy = clusterBy;
            Comment = comment;
            CreatedOn = createdOn;
            DataTimestamp = dataTimestamp;
            DatabaseName = databaseName;
            IsClone = isClone;
            IsReplica = isReplica;
            LastSuspendedOn = lastSuspendedOn;
            Name = name;
            Owner = owner;
            RefreshMode = refreshMode;
            RefreshModeReason = refreshModeReason;
            Rows = rows;
            SchedulingState = schedulingState;
            SchemaName = schemaName;
            TargetLag = targetLag;
            Text = text;
            Warehouse = warehouse;
        }
    }
}
