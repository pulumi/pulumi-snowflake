// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class ComputePoolShowOutput
    {
        public readonly int? ActiveNodes;
        public readonly string? Application;
        public readonly bool? AutoResume;
        public readonly int? AutoSuspendSecs;
        public readonly string? Comment;
        public readonly string? CreatedOn;
        public readonly int? IdleNodes;
        public readonly string? InstanceFamily;
        public readonly bool? IsExclusive;
        public readonly int? MaxNodes;
        public readonly int? MinNodes;
        public readonly string? Name;
        public readonly int? NumJobs;
        public readonly int? NumServices;
        public readonly string? Owner;
        public readonly string? ResumedOn;
        public readonly string? State;
        public readonly int? TargetNodes;
        public readonly string? UpdatedOn;

        [OutputConstructor]
        private ComputePoolShowOutput(
            int? activeNodes,

            string? application,

            bool? autoResume,

            int? autoSuspendSecs,

            string? comment,

            string? createdOn,

            int? idleNodes,

            string? instanceFamily,

            bool? isExclusive,

            int? maxNodes,

            int? minNodes,

            string? name,

            int? numJobs,

            int? numServices,

            string? owner,

            string? resumedOn,

            string? state,

            int? targetNodes,

            string? updatedOn)
        {
            ActiveNodes = activeNodes;
            Application = application;
            AutoResume = autoResume;
            AutoSuspendSecs = autoSuspendSecs;
            Comment = comment;
            CreatedOn = createdOn;
            IdleNodes = idleNodes;
            InstanceFamily = instanceFamily;
            IsExclusive = isExclusive;
            MaxNodes = maxNodes;
            MinNodes = minNodes;
            Name = name;
            NumJobs = numJobs;
            NumServices = numServices;
            Owner = owner;
            ResumedOn = resumedOn;
            State = state;
            TargetNodes = targetNodes;
            UpdatedOn = updatedOn;
        }
    }
}
