// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class GetWarehousesWarehouseShowOutputResult
    {
        public readonly bool AutoResume;
        public readonly int AutoSuspend;
        public readonly double Available;
        public readonly string Comment;
        public readonly string CreatedOn;
        public readonly bool EnableQueryAcceleration;
        public readonly string Generation;
        public readonly bool IsCurrent;
        public readonly bool IsDefault;
        public readonly int MaxClusterCount;
        public readonly int MinClusterCount;
        public readonly string Name;
        public readonly double Other;
        public readonly string Owner;
        public readonly string OwnerRoleType;
        public readonly double Provisioning;
        public readonly int QueryAccelerationMaxScaleFactor;
        public readonly int Queued;
        public readonly double Quiescing;
        public readonly string ResourceConstraint;
        public readonly string ResourceMonitor;
        public readonly string ResumedOn;
        public readonly int Running;
        public readonly string ScalingPolicy;
        public readonly string Size;
        public readonly int StartedClusters;
        public readonly string State;
        public readonly string Type;
        public readonly string UpdatedOn;

        [OutputConstructor]
        private GetWarehousesWarehouseShowOutputResult(
            bool autoResume,

            int autoSuspend,

            double available,

            string comment,

            string createdOn,

            bool enableQueryAcceleration,

            string generation,

            bool isCurrent,

            bool isDefault,

            int maxClusterCount,

            int minClusterCount,

            string name,

            double other,

            string owner,

            string ownerRoleType,

            double provisioning,

            int queryAccelerationMaxScaleFactor,

            int queued,

            double quiescing,

            string resourceConstraint,

            string resourceMonitor,

            string resumedOn,

            int running,

            string scalingPolicy,

            string size,

            int startedClusters,

            string state,

            string type,

            string updatedOn)
        {
            AutoResume = autoResume;
            AutoSuspend = autoSuspend;
            Available = available;
            Comment = comment;
            CreatedOn = createdOn;
            EnableQueryAcceleration = enableQueryAcceleration;
            Generation = generation;
            IsCurrent = isCurrent;
            IsDefault = isDefault;
            MaxClusterCount = maxClusterCount;
            MinClusterCount = minClusterCount;
            Name = name;
            Other = other;
            Owner = owner;
            OwnerRoleType = ownerRoleType;
            Provisioning = provisioning;
            QueryAccelerationMaxScaleFactor = queryAccelerationMaxScaleFactor;
            Queued = queued;
            Quiescing = quiescing;
            ResourceConstraint = resourceConstraint;
            ResourceMonitor = resourceMonitor;
            ResumedOn = resumedOn;
            Running = running;
            ScalingPolicy = scalingPolicy;
            Size = size;
            StartedClusters = startedClusters;
            State = state;
            Type = type;
            UpdatedOn = updatedOn;
        }
    }
}
