// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class DatabaseReplication
    {
        /// <summary>
        /// Entry to enable replication and optionally failover for a given account identifier.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatabaseReplicationEnableToAccount> EnableToAccounts;
        /// <summary>
        /// Allows replicating data to accounts on lower editions in either of the following scenarios: 1. The primary database is in a Business Critical (or higher) account but one or more of the accounts approved for replication are on lower editions. Business Critical Edition is intended for Snowflake accounts with extremely sensitive data. 2. The primary database is in a Business Critical (or higher) account and a signed business associate agreement is in place to store PHI data in the account per HIPAA and HITRUST regulations, but no such agreement is in place for one or more of the accounts approved for replication, regardless if they are Business Critical (or higher) accounts. Both scenarios are prohibited by default in an effort to help prevent account administrators for Business Critical (or higher) accounts from inadvertently replicating sensitive data to accounts on lower editions.
        /// </summary>
        public readonly bool? IgnoreEditionCheck;

        [OutputConstructor]
        private DatabaseReplication(
            ImmutableArray<Outputs.DatabaseReplicationEnableToAccount> enableToAccounts,

            bool? ignoreEditionCheck)
        {
            EnableToAccounts = enableToAccounts;
            IgnoreEditionCheck = ignoreEditionCheck;
        }
    }
}
