// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class GetSchemasSchemaParameterResult
    {
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterCatalogResult> Catalogs;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterDataRetentionTimeInDayResult> DataRetentionTimeInDays;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterDefaultDdlCollationResult> DefaultDdlCollations;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterEnableConsoleOutputResult> EnableConsoleOutputs;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterExternalVolumeResult> ExternalVolumes;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterLogLevelResult> LogLevels;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterMaxDataExtensionTimeInDayResult> MaxDataExtensionTimeInDays;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterPipeExecutionPausedResult> PipeExecutionPauseds;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterQuotedIdentifiersIgnoreCaseResult> QuotedIdentifiersIgnoreCases;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterReplaceInvalidCharacterResult> ReplaceInvalidCharacters;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterStorageSerializationPolicyResult> StorageSerializationPolicies;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterSuspendTaskAfterNumFailureResult> SuspendTaskAfterNumFailures;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterTaskAutoRetryAttemptResult> TaskAutoRetryAttempts;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterTraceLevelResult> TraceLevels;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskManagedInitialWarehouseSizeResult> UserTaskManagedInitialWarehouseSizes;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskMinimumTriggerIntervalInSecondResult> UserTaskMinimumTriggerIntervalInSeconds;
        public readonly ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskTimeoutMResult> UserTaskTimeoutMs;

        [OutputConstructor]
        private GetSchemasSchemaParameterResult(
            ImmutableArray<Outputs.GetSchemasSchemaParameterCatalogResult> catalogs,

            ImmutableArray<Outputs.GetSchemasSchemaParameterDataRetentionTimeInDayResult> dataRetentionTimeInDays,

            ImmutableArray<Outputs.GetSchemasSchemaParameterDefaultDdlCollationResult> defaultDdlCollations,

            ImmutableArray<Outputs.GetSchemasSchemaParameterEnableConsoleOutputResult> enableConsoleOutputs,

            ImmutableArray<Outputs.GetSchemasSchemaParameterExternalVolumeResult> externalVolumes,

            ImmutableArray<Outputs.GetSchemasSchemaParameterLogLevelResult> logLevels,

            ImmutableArray<Outputs.GetSchemasSchemaParameterMaxDataExtensionTimeInDayResult> maxDataExtensionTimeInDays,

            ImmutableArray<Outputs.GetSchemasSchemaParameterPipeExecutionPausedResult> pipeExecutionPauseds,

            ImmutableArray<Outputs.GetSchemasSchemaParameterQuotedIdentifiersIgnoreCaseResult> quotedIdentifiersIgnoreCases,

            ImmutableArray<Outputs.GetSchemasSchemaParameterReplaceInvalidCharacterResult> replaceInvalidCharacters,

            ImmutableArray<Outputs.GetSchemasSchemaParameterStorageSerializationPolicyResult> storageSerializationPolicies,

            ImmutableArray<Outputs.GetSchemasSchemaParameterSuspendTaskAfterNumFailureResult> suspendTaskAfterNumFailures,

            ImmutableArray<Outputs.GetSchemasSchemaParameterTaskAutoRetryAttemptResult> taskAutoRetryAttempts,

            ImmutableArray<Outputs.GetSchemasSchemaParameterTraceLevelResult> traceLevels,

            ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskManagedInitialWarehouseSizeResult> userTaskManagedInitialWarehouseSizes,

            ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskMinimumTriggerIntervalInSecondResult> userTaskMinimumTriggerIntervalInSeconds,

            ImmutableArray<Outputs.GetSchemasSchemaParameterUserTaskTimeoutMResult> userTaskTimeoutMs)
        {
            Catalogs = catalogs;
            DataRetentionTimeInDays = dataRetentionTimeInDays;
            DefaultDdlCollations = defaultDdlCollations;
            EnableConsoleOutputs = enableConsoleOutputs;
            ExternalVolumes = externalVolumes;
            LogLevels = logLevels;
            MaxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            PipeExecutionPauseds = pipeExecutionPauseds;
            QuotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            ReplaceInvalidCharacters = replaceInvalidCharacters;
            StorageSerializationPolicies = storageSerializationPolicies;
            SuspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            TaskAutoRetryAttempts = taskAutoRetryAttempts;
            TraceLevels = traceLevels;
            UserTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            UserTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            UserTaskTimeoutMs = userTaskTimeoutMs;
        }
    }
}
