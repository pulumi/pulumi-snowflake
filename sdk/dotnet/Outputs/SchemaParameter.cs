// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class SchemaParameter
    {
        public readonly ImmutableArray<Outputs.SchemaParameterCatalog> Catalogs;
        public readonly ImmutableArray<Outputs.SchemaParameterDataRetentionTimeInDay> DataRetentionTimeInDays;
        public readonly ImmutableArray<Outputs.SchemaParameterDefaultDdlCollation> DefaultDdlCollations;
        public readonly ImmutableArray<Outputs.SchemaParameterEnableConsoleOutput> EnableConsoleOutputs;
        public readonly ImmutableArray<Outputs.SchemaParameterExternalVolume> ExternalVolumes;
        public readonly ImmutableArray<Outputs.SchemaParameterLogLevel> LogLevels;
        public readonly ImmutableArray<Outputs.SchemaParameterMaxDataExtensionTimeInDay> MaxDataExtensionTimeInDays;
        public readonly ImmutableArray<Outputs.SchemaParameterPipeExecutionPaused> PipeExecutionPauseds;
        public readonly ImmutableArray<Outputs.SchemaParameterQuotedIdentifiersIgnoreCase> QuotedIdentifiersIgnoreCases;
        public readonly ImmutableArray<Outputs.SchemaParameterReplaceInvalidCharacter> ReplaceInvalidCharacters;
        public readonly ImmutableArray<Outputs.SchemaParameterStorageSerializationPolicy> StorageSerializationPolicies;
        public readonly ImmutableArray<Outputs.SchemaParameterSuspendTaskAfterNumFailure> SuspendTaskAfterNumFailures;
        public readonly ImmutableArray<Outputs.SchemaParameterTaskAutoRetryAttempt> TaskAutoRetryAttempts;
        public readonly ImmutableArray<Outputs.SchemaParameterTraceLevel> TraceLevels;
        public readonly ImmutableArray<Outputs.SchemaParameterUserTaskManagedInitialWarehouseSize> UserTaskManagedInitialWarehouseSizes;
        public readonly ImmutableArray<Outputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecond> UserTaskMinimumTriggerIntervalInSeconds;
        public readonly ImmutableArray<Outputs.SchemaParameterUserTaskTimeoutM> UserTaskTimeoutMs;

        [OutputConstructor]
        private SchemaParameter(
            ImmutableArray<Outputs.SchemaParameterCatalog> catalogs,

            ImmutableArray<Outputs.SchemaParameterDataRetentionTimeInDay> dataRetentionTimeInDays,

            ImmutableArray<Outputs.SchemaParameterDefaultDdlCollation> defaultDdlCollations,

            ImmutableArray<Outputs.SchemaParameterEnableConsoleOutput> enableConsoleOutputs,

            ImmutableArray<Outputs.SchemaParameterExternalVolume> externalVolumes,

            ImmutableArray<Outputs.SchemaParameterLogLevel> logLevels,

            ImmutableArray<Outputs.SchemaParameterMaxDataExtensionTimeInDay> maxDataExtensionTimeInDays,

            ImmutableArray<Outputs.SchemaParameterPipeExecutionPaused> pipeExecutionPauseds,

            ImmutableArray<Outputs.SchemaParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases,

            ImmutableArray<Outputs.SchemaParameterReplaceInvalidCharacter> replaceInvalidCharacters,

            ImmutableArray<Outputs.SchemaParameterStorageSerializationPolicy> storageSerializationPolicies,

            ImmutableArray<Outputs.SchemaParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures,

            ImmutableArray<Outputs.SchemaParameterTaskAutoRetryAttempt> taskAutoRetryAttempts,

            ImmutableArray<Outputs.SchemaParameterTraceLevel> traceLevels,

            ImmutableArray<Outputs.SchemaParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes,

            ImmutableArray<Outputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds,

            ImmutableArray<Outputs.SchemaParameterUserTaskTimeoutM> userTaskTimeoutMs)
        {
            Catalogs = catalogs;
            DataRetentionTimeInDays = dataRetentionTimeInDays;
            DefaultDdlCollations = defaultDdlCollations;
            EnableConsoleOutputs = enableConsoleOutputs;
            ExternalVolumes = externalVolumes;
            LogLevels = logLevels;
            MaxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            PipeExecutionPauseds = pipeExecutionPauseds;
            QuotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            ReplaceInvalidCharacters = replaceInvalidCharacters;
            StorageSerializationPolicies = storageSerializationPolicies;
            SuspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            TaskAutoRetryAttempts = taskAutoRetryAttempts;
            TraceLevels = traceLevels;
            UserTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            UserTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            UserTaskTimeoutMs = userTaskTimeoutMs;
        }
    }
}
