// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class GetTablesTableShowOutputResult
    {
        public readonly bool AutomaticClustering;
        public readonly string Budget;
        public readonly int Bytes;
        public readonly bool ChangeTracking;
        public readonly string ClusterBy;
        public readonly string Comment;
        public readonly string CreatedOn;
        public readonly string DatabaseName;
        public readonly string DroppedOn;
        public readonly bool EnableSchemaEvolution;
        public readonly bool IsEvent;
        public readonly bool IsExternal;
        public readonly string Kind;
        public readonly string Name;
        public readonly string Owner;
        public readonly string OwnerRoleType;
        public readonly int RetentionTime;
        public readonly int Rows;
        public readonly string SchemaName;
        public readonly bool SearchOptimization;
        public readonly int SearchOptimizationBytes;
        public readonly string SearchOptimizationProgress;

        [OutputConstructor]
        private GetTablesTableShowOutputResult(
            bool automaticClustering,

            string budget,

            int bytes,

            bool changeTracking,

            string clusterBy,

            string comment,

            string createdOn,

            string databaseName,

            string droppedOn,

            bool enableSchemaEvolution,

            bool isEvent,

            bool isExternal,

            string kind,

            string name,

            string owner,

            string ownerRoleType,

            int retentionTime,

            int rows,

            string schemaName,

            bool searchOptimization,

            int searchOptimizationBytes,

            string searchOptimizationProgress)
        {
            AutomaticClustering = automaticClustering;
            Budget = budget;
            Bytes = bytes;
            ChangeTracking = changeTracking;
            ClusterBy = clusterBy;
            Comment = comment;
            CreatedOn = createdOn;
            DatabaseName = databaseName;
            DroppedOn = droppedOn;
            EnableSchemaEvolution = enableSchemaEvolution;
            IsEvent = isEvent;
            IsExternal = isExternal;
            Kind = kind;
            Name = name;
            Owner = owner;
            OwnerRoleType = ownerRoleType;
            RetentionTime = retentionTime;
            Rows = rows;
            SchemaName = schemaName;
            SearchOptimization = searchOptimization;
            SearchOptimizationBytes = searchOptimizationBytes;
            SearchOptimizationProgress = searchOptimizationProgress;
        }
    }
}
