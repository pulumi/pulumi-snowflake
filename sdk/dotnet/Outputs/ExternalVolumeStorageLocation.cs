// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class ExternalVolumeStorageLocation
    {
        /// <summary>
        /// Specifies the ID for your Office 365 tenant that the allowed and blocked storage accounts belong to.
        /// </summary>
        public readonly string? AzureTenantId;
        /// <summary>
        /// Specifies the ID for the KMS-managed key used to encrypt files.
        /// </summary>
        public readonly string? EncryptionKmsKeyId;
        /// <summary>
        /// Specifies the encryption type used.
        /// </summary>
        public readonly string? EncryptionType;
        /// <summary>
        /// External ID that Snowflake uses to establish a trust relationship with AWS.
        /// </summary>
        public readonly string? StorageAwsExternalId;
        /// <summary>
        /// Specifies the case-sensitive Amazon Resource Name (ARN) of the AWS identity and access management (IAM) role that grants privileges on the S3 bucket containing your data files.
        /// </summary>
        public readonly string? StorageAwsRoleArn;
        /// <summary>
        /// Specifies the base URL for your cloud storage location.
        /// </summary>
        public readonly string StorageBaseUrl;
        public readonly string StorageLocationName;
        /// <summary>
        /// Specifies the cloud storage provider that stores your data files. Valid values are (case-insensitive): `GCS` | `AZURE` | `S3` | `S3GOV`.
        /// </summary>
        public readonly string StorageProvider;

        [OutputConstructor]
        private ExternalVolumeStorageLocation(
            string? azureTenantId,

            string? encryptionKmsKeyId,

            string? encryptionType,

            string? storageAwsExternalId,

            string? storageAwsRoleArn,

            string storageBaseUrl,

            string storageLocationName,

            string storageProvider)
        {
            AzureTenantId = azureTenantId;
            EncryptionKmsKeyId = encryptionKmsKeyId;
            EncryptionType = encryptionType;
            StorageAwsExternalId = storageAwsExternalId;
            StorageAwsRoleArn = storageAwsRoleArn;
            StorageBaseUrl = storageBaseUrl;
            StorageLocationName = storageLocationName;
            StorageProvider = storageProvider;
        }
    }
}
