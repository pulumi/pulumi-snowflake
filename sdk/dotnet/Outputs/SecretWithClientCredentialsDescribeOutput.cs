// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class SecretWithClientCredentialsDescribeOutput
    {
        public readonly string? Comment;
        public readonly string? CreatedOn;
        public readonly string? DatabaseName;
        public readonly string? IntegrationName;
        public readonly string? Name;
        public readonly string? OauthAccessTokenExpiryTime;
        public readonly string? OauthRefreshTokenExpiryTime;
        public readonly ImmutableArray<string> OauthScopes;
        public readonly string? Owner;
        public readonly string? SchemaName;
        public readonly string? SecretType;
        public readonly string? Username;

        [OutputConstructor]
        private SecretWithClientCredentialsDescribeOutput(
            string? comment,

            string? createdOn,

            string? databaseName,

            string? integrationName,

            string? name,

            string? oauthAccessTokenExpiryTime,

            string? oauthRefreshTokenExpiryTime,

            ImmutableArray<string> oauthScopes,

            string? owner,

            string? schemaName,

            string? secretType,

            string? username)
        {
            Comment = comment;
            CreatedOn = createdOn;
            DatabaseName = databaseName;
            IntegrationName = integrationName;
            Name = name;
            OauthAccessTokenExpiryTime = oauthAccessTokenExpiryTime;
            OauthRefreshTokenExpiryTime = oauthRefreshTokenExpiryTime;
            OauthScopes = oauthScopes;
            Owner = owner;
            SchemaName = schemaName;
            SecretType = secretType;
            Username = username;
        }
    }
}
