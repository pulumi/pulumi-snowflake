// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake.Outputs
{

    [OutputType]
    public sealed class ListingShowOutput
    {
        public readonly string? Comment;
        public readonly string? CreatedOn;
        public readonly string? DetailedTargetAccounts;
        public readonly string? Distribution;
        public readonly string? GlobalName;
        public readonly bool? IsApplication;
        public readonly bool? IsByRequest;
        public readonly bool? IsLimitedTrial;
        public readonly bool? IsMonetized;
        public readonly bool? IsMountlessQueryable;
        public readonly bool? IsTargeted;
        public readonly string? Name;
        public readonly string? OrganizationProfileName;
        public readonly string? Owner;
        public readonly string? OwnerRoleType;
        public readonly string? Profile;
        public readonly string? PublishedOn;
        public readonly string? Regions;
        public readonly string? RejectedOn;
        public readonly string? ReviewState;
        public readonly string? State;
        public readonly string? Subtitle;
        public readonly string? TargetAccounts;
        public readonly string? Title;
        public readonly string? UniformListingLocator;
        public readonly string? UpdatedOn;

        [OutputConstructor]
        private ListingShowOutput(
            string? comment,

            string? createdOn,

            string? detailedTargetAccounts,

            string? distribution,

            string? globalName,

            bool? isApplication,

            bool? isByRequest,

            bool? isLimitedTrial,

            bool? isMonetized,

            bool? isMountlessQueryable,

            bool? isTargeted,

            string? name,

            string? organizationProfileName,

            string? owner,

            string? ownerRoleType,

            string? profile,

            string? publishedOn,

            string? regions,

            string? rejectedOn,

            string? reviewState,

            string? state,

            string? subtitle,

            string? targetAccounts,

            string? title,

            string? uniformListingLocator,

            string? updatedOn)
        {
            Comment = comment;
            CreatedOn = createdOn;
            DetailedTargetAccounts = detailedTargetAccounts;
            Distribution = distribution;
            GlobalName = globalName;
            IsApplication = isApplication;
            IsByRequest = isByRequest;
            IsLimitedTrial = isLimitedTrial;
            IsMonetized = isMonetized;
            IsMountlessQueryable = isMountlessQueryable;
            IsTargeted = isTargeted;
            Name = name;
            OrganizationProfileName = organizationProfileName;
            Owner = owner;
            OwnerRoleType = ownerRoleType;
            Profile = profile;
            PublishedOn = publishedOn;
            Regions = regions;
            RejectedOn = rejectedOn;
            ReviewState = reviewState;
            State = state;
            Subtitle = subtitle;
            TargetAccounts = targetAccounts;
            Title = title;
            UniformListingLocator = uniformListingLocator;
            UpdatedOn = updatedOn;
        }
    }
}
