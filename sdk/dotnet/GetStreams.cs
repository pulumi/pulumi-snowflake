// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    public static class GetStreams
    {
        public static Task<GetStreamsResult> InvokeAsync(GetStreamsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamsResult>("snowflake:index/getStreams:getStreams", args ?? new GetStreamsArgs(), options.WithDefaults());

        public static Output<GetStreamsResult> Invoke(GetStreamsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamsResult>("snowflake:index/getStreams:getStreams", args ?? new GetStreamsInvokeArgs(), options.WithDefaults());

        public static Output<GetStreamsResult> Invoke(GetStreamsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamsResult>("snowflake:index/getStreams:getStreams", args ?? new GetStreamsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamsArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Inputs.GetStreamsInArgs? In { get; set; }

        [Input("like")]
        public string? Like { get; set; }

        [Input("limit")]
        public Inputs.GetStreamsLimitArgs? Limit { get; set; }

        [Input("startsWith")]
        public string? StartsWith { get; set; }

        [Input("withDescribe")]
        public bool? WithDescribe { get; set; }

        public GetStreamsArgs()
        {
        }
        public static new GetStreamsArgs Empty => new GetStreamsArgs();
    }

    public sealed class GetStreamsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("in")]
        public Input<Inputs.GetStreamsInInputArgs>? In { get; set; }

        [Input("like")]
        public Input<string>? Like { get; set; }

        [Input("limit")]
        public Input<Inputs.GetStreamsLimitInputArgs>? Limit { get; set; }

        [Input("startsWith")]
        public Input<string>? StartsWith { get; set; }

        [Input("withDescribe")]
        public Input<bool>? WithDescribe { get; set; }

        public GetStreamsInvokeArgs()
        {
        }
        public static new GetStreamsInvokeArgs Empty => new GetStreamsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetStreamsInResult? In;
        public readonly string? Like;
        public readonly Outputs.GetStreamsLimitResult? Limit;
        public readonly string? StartsWith;
        public readonly ImmutableArray<Outputs.GetStreamsStreamResult> Streams;
        public readonly bool? WithDescribe;

        [OutputConstructor]
        private GetStreamsResult(
            string id,

            Outputs.GetStreamsInResult? @in,

            string? like,

            Outputs.GetStreamsLimitResult? limit,

            string? startsWith,

            ImmutableArray<Outputs.GetStreamsStreamResult> streams,

            bool? withDescribe)
        {
            Id = id;
            In = @in;
            Like = like;
            Limit = limit;
            StartsWith = startsWith;
            Streams = streams;
            WithDescribe = withDescribe;
        }
    }
}
