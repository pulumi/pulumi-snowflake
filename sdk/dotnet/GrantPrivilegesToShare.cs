// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Import
    /// 
    /// ### OnView
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/grantPrivilegesToShare:GrantPrivilegesToShare example '&lt;share_name&gt;|&lt;privileges&gt;|OnView|&lt;database_name&gt;.&lt;schema_name&gt;.&lt;view_name&gt;'`
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/grantPrivilegesToShare:GrantPrivilegesToShare")]
    public partial class GrantPrivilegesToShare : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
        /// </summary>
        [Output("onAllTablesInSchema")]
        public Output<string?> OnAllTablesInSchema { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("onDatabase")]
        public Output<string?> OnDatabase { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the function on which privileges will be granted.
        /// </summary>
        [Output("onFunction")]
        public Output<string?> OnFunction { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("onSchema")]
        public Output<string?> OnSchema { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("onTable")]
        public Output<string?> OnTable { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("onTag")]
        public Output<string?> OnTag { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("onView")]
        public Output<string?> OnView { get; private set; } = null!;

        /// <summary>
        /// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
        /// </summary>
        [Output("privileges")]
        public Output<ImmutableArray<string>> Privileges { get; private set; } = null!;

        /// <summary>
        /// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Output("toShare")]
        public Output<string> ToShare { get; private set; } = null!;


        /// <summary>
        /// Create a GrantPrivilegesToShare resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GrantPrivilegesToShare(string name, GrantPrivilegesToShareArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/grantPrivilegesToShare:GrantPrivilegesToShare", name, args ?? new GrantPrivilegesToShareArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GrantPrivilegesToShare(string name, Input<string> id, GrantPrivilegesToShareState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/grantPrivilegesToShare:GrantPrivilegesToShare", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GrantPrivilegesToShare resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GrantPrivilegesToShare Get(string name, Input<string> id, GrantPrivilegesToShareState? state = null, CustomResourceOptions? options = null)
        {
            return new GrantPrivilegesToShare(name, id, state, options);
        }
    }

    public sealed class GrantPrivilegesToShareArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
        /// </summary>
        [Input("onAllTablesInSchema")]
        public Input<string>? OnAllTablesInSchema { get; set; }

        /// <summary>
        /// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onDatabase")]
        public Input<string>? OnDatabase { get; set; }

        /// <summary>
        /// The fully qualified name of the function on which privileges will be granted.
        /// </summary>
        [Input("onFunction")]
        public Input<string>? OnFunction { get; set; }

        /// <summary>
        /// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onSchema")]
        public Input<string>? OnSchema { get; set; }

        /// <summary>
        /// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onTable")]
        public Input<string>? OnTable { get; set; }

        /// <summary>
        /// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onTag")]
        public Input<string>? OnTag { get; set; }

        /// <summary>
        /// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onView")]
        public Input<string>? OnView { get; set; }

        [Input("privileges", required: true)]
        private InputList<string>? _privileges;

        /// <summary>
        /// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
        /// </summary>
        public InputList<string> Privileges
        {
            get => _privileges ?? (_privileges = new InputList<string>());
            set => _privileges = value;
        }

        /// <summary>
        /// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("toShare", required: true)]
        public Input<string> ToShare { get; set; } = null!;

        public GrantPrivilegesToShareArgs()
        {
        }
        public static new GrantPrivilegesToShareArgs Empty => new GrantPrivilegesToShareArgs();
    }

    public sealed class GrantPrivilegesToShareState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified identifier for the schema for which the specified privilege will be granted for all tables.
        /// </summary>
        [Input("onAllTablesInSchema")]
        public Input<string>? OnAllTablesInSchema { get; set; }

        /// <summary>
        /// The fully qualified name of the database on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onDatabase")]
        public Input<string>? OnDatabase { get; set; }

        /// <summary>
        /// The fully qualified name of the function on which privileges will be granted.
        /// </summary>
        [Input("onFunction")]
        public Input<string>? OnFunction { get; set; }

        /// <summary>
        /// The fully qualified name of the schema on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onSchema")]
        public Input<string>? OnSchema { get; set; }

        /// <summary>
        /// The fully qualified name of the table on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onTable")]
        public Input<string>? OnTable { get; set; }

        /// <summary>
        /// The fully qualified name of the tag on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onTag")]
        public Input<string>? OnTag { get; set; }

        /// <summary>
        /// The fully qualified name of the view on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("onView")]
        public Input<string>? OnView { get; set; }

        [Input("privileges")]
        private InputList<string>? _privileges;

        /// <summary>
        /// The privileges to grant on the share. See available list of privileges: https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-share#syntax
        /// </summary>
        public InputList<string> Privileges
        {
            get => _privileges ?? (_privileges = new InputList<string>());
            set => _privileges = value;
        }

        /// <summary>
        /// The fully qualified name of the share on which privileges will be granted. For more information about this resource, see docs.
        /// </summary>
        [Input("toShare")]
        public Input<string>? ToShare { get; set; }

        public GrantPrivilegesToShareState()
        {
        }
        public static new GrantPrivilegesToShareState Empty => new GrantPrivilegesToShareState();
    }
}
