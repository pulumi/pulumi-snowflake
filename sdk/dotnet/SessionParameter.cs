// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/sessionParameter:SessionParameter s &lt;parameter_name&gt;
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/sessionParameter:SessionParameter")]
    public partial class SessionParameter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// If true, the session parameter will be set on the account level.
        /// </summary>
        [Output("onAccount")]
        public Output<bool?> OnAccount { get; private set; } = null!;

        /// <summary>
        /// The user to set the session parameter for. Required if on_account is false
        /// </summary>
        [Output("user")]
        public Output<string?> User { get; private set; } = null!;

        /// <summary>
        /// Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a SessionParameter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SessionParameter(string name, SessionParameterArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/sessionParameter:SessionParameter", name, args ?? new SessionParameterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SessionParameter(string name, Input<string> id, SessionParameterState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/sessionParameter:SessionParameter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SessionParameter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SessionParameter Get(string name, Input<string> id, SessionParameterState? state = null, CustomResourceOptions? options = null)
        {
            return new SessionParameter(name, id, state, options);
        }
    }

    public sealed class SessionParameterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// If true, the session parameter will be set on the account level.
        /// </summary>
        [Input("onAccount")]
        public Input<bool>? OnAccount { get; set; }

        /// <summary>
        /// The user to set the session parameter for. Required if on_account is false
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public SessionParameterArgs()
        {
        }
        public static new SessionParameterArgs Empty => new SessionParameterArgs();
    }

    public sealed class SessionParameterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of session parameter. Valid values are those in [session parameters](https://docs.snowflake.com/en/sql-reference/parameters.html#session-parameters).
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// If true, the session parameter will be set on the account level.
        /// </summary>
        [Input("onAccount")]
        public Input<bool>? OnAccount { get; set; }

        /// <summary>
        /// The user to set the session parameter for. Required if on_account is false
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        /// <summary>
        /// Value of session parameter, as a string. Constraints are the same as those for the parameters in Snowflake documentation.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public SessionParameterState()
        {
        }
        public static new SessionParameterState Empty => new SessionParameterState();
    }
}
