// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Snowflake
{
    /// <summary>
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import snowflake:index/jobService:JobService example '"&lt;database_name&gt;"."&lt;schema_name&gt;"."&lt;job_service_name&gt;"'
    /// ```
    /// </summary>
    [SnowflakeResourceType("snowflake:index/jobService:JobService")]
    public partial class JobService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies a comment for the service.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the compute pool in your account on which to run the service. Identifiers with special or lower-case characters are not supported. This limitation in the provider follows the limitation in Snowflake (see [docs](https://docs.snowflake.com/en/sql-reference/sql/create-compute-pool)). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("computePool")]
        public Output<string> ComputePool { get; private set; } = null!;

        /// <summary>
        /// The database in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// Outputs the result of `DESCRIBE SERVICE` for the given service.
        /// </summary>
        [Output("describeOutputs")]
        public Output<ImmutableArray<Outputs.JobServiceDescribeOutput>> DescribeOutputs { get; private set; } = null!;

        /// <summary>
        /// Specifies the names of the external access integrations that allow your service to access external sites.
        /// </summary>
        [Output("externalAccessIntegrations")]
        public Output<ImmutableArray<string>> ExternalAccessIntegrations { get; private set; } = null!;

        /// <summary>
        /// Specifies the service specification to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Output("fromSpecification")]
        public Output<Outputs.JobServiceFromSpecification?> FromSpecification { get; private set; } = null!;

        /// <summary>
        /// Specifies the service specification template to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Output("fromSpecificationTemplate")]
        public Output<Outputs.JobServiceFromSpecificationTemplate?> FromSpecificationTemplate { get; private set; } = null!;

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Output("fullyQualifiedName")]
        public Output<string> FullyQualifiedName { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier for the service; must be unique for the schema in which the service is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Warehouse to use if a service container connects to Snowflake to execute a query but does not explicitly specify a warehouse to use. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("queryWarehouse")]
        public Output<string?> QueryWarehouse { get; private set; } = null!;

        /// <summary>
        /// The schema in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        /// <summary>
        /// Specifies a type for the service. This field is used for checking external changes and recreating the resources if needed.
        /// </summary>
        [Output("serviceType")]
        public Output<string> ServiceType { get; private set; } = null!;

        /// <summary>
        /// Outputs the result of `SHOW SERVICES` for the given service.
        /// </summary>
        [Output("showOutputs")]
        public Output<ImmutableArray<Outputs.JobServiceShowOutput>> ShowOutputs { get; private set; } = null!;


        /// <summary>
        /// Create a JobService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JobService(string name, JobServiceArgs args, CustomResourceOptions? options = null)
            : base("snowflake:index/jobService:JobService", name, args ?? new JobServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JobService(string name, Input<string> id, JobServiceState? state = null, CustomResourceOptions? options = null)
            : base("snowflake:index/jobService:JobService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JobService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JobService Get(string name, Input<string> id, JobServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new JobService(name, id, state, options);
        }
    }

    public sealed class JobServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the service.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Specifies the name of the compute pool in your account on which to run the service. Identifiers with special or lower-case characters are not supported. This limitation in the provider follows the limitation in Snowflake (see [docs](https://docs.snowflake.com/en/sql-reference/sql/create-compute-pool)). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("computePool", required: true)]
        public Input<string> ComputePool { get; set; } = null!;

        /// <summary>
        /// The database in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("externalAccessIntegrations")]
        private InputList<string>? _externalAccessIntegrations;

        /// <summary>
        /// Specifies the names of the external access integrations that allow your service to access external sites.
        /// </summary>
        public InputList<string> ExternalAccessIntegrations
        {
            get => _externalAccessIntegrations ?? (_externalAccessIntegrations = new InputList<string>());
            set => _externalAccessIntegrations = value;
        }

        /// <summary>
        /// Specifies the service specification to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Input("fromSpecification")]
        public Input<Inputs.JobServiceFromSpecificationArgs>? FromSpecification { get; set; }

        /// <summary>
        /// Specifies the service specification template to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Input("fromSpecificationTemplate")]
        public Input<Inputs.JobServiceFromSpecificationTemplateArgs>? FromSpecificationTemplate { get; set; }

        /// <summary>
        /// Specifies the identifier for the service; must be unique for the schema in which the service is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Warehouse to use if a service container connects to Snowflake to execute a query but does not explicitly specify a warehouse to use. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("queryWarehouse")]
        public Input<string>? QueryWarehouse { get; set; }

        /// <summary>
        /// The schema in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        public JobServiceArgs()
        {
        }
        public static new JobServiceArgs Empty => new JobServiceArgs();
    }

    public sealed class JobServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a comment for the service.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Specifies the name of the compute pool in your account on which to run the service. Identifiers with special or lower-case characters are not supported. This limitation in the provider follows the limitation in Snowflake (see [docs](https://docs.snowflake.com/en/sql-reference/sql/create-compute-pool)). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("computePool")]
        public Input<string>? ComputePool { get; set; }

        /// <summary>
        /// The database in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        [Input("describeOutputs")]
        private InputList<Inputs.JobServiceDescribeOutputGetArgs>? _describeOutputs;

        /// <summary>
        /// Outputs the result of `DESCRIBE SERVICE` for the given service.
        /// </summary>
        public InputList<Inputs.JobServiceDescribeOutputGetArgs> DescribeOutputs
        {
            get => _describeOutputs ?? (_describeOutputs = new InputList<Inputs.JobServiceDescribeOutputGetArgs>());
            set => _describeOutputs = value;
        }

        [Input("externalAccessIntegrations")]
        private InputList<string>? _externalAccessIntegrations;

        /// <summary>
        /// Specifies the names of the external access integrations that allow your service to access external sites.
        /// </summary>
        public InputList<string> ExternalAccessIntegrations
        {
            get => _externalAccessIntegrations ?? (_externalAccessIntegrations = new InputList<string>());
            set => _externalAccessIntegrations = value;
        }

        /// <summary>
        /// Specifies the service specification to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Input("fromSpecification")]
        public Input<Inputs.JobServiceFromSpecificationGetArgs>? FromSpecification { get; set; }

        /// <summary>
        /// Specifies the service specification template to use for the service. Note that external changes on this field and nested fields are not detected. Use correctly formatted YAML files. Watch out for the space/tabs indentation. See [service specification](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/specification-reference#general-guidelines) for more information.
        /// </summary>
        [Input("fromSpecificationTemplate")]
        public Input<Inputs.JobServiceFromSpecificationTemplateGetArgs>? FromSpecificationTemplate { get; set; }

        /// <summary>
        /// Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
        /// </summary>
        [Input("fullyQualifiedName")]
        public Input<string>? FullyQualifiedName { get; set; }

        /// <summary>
        /// Specifies the identifier for the service; must be unique for the schema in which the service is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Warehouse to use if a service container connects to Snowflake to execute a query but does not explicitly specify a warehouse to use. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("queryWarehouse")]
        public Input<string>? QueryWarehouse { get; set; }

        /// <summary>
        /// The schema in which to create the service. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `"`.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// Specifies a type for the service. This field is used for checking external changes and recreating the resources if needed.
        /// </summary>
        [Input("serviceType")]
        public Input<string>? ServiceType { get; set; }

        [Input("showOutputs")]
        private InputList<Inputs.JobServiceShowOutputGetArgs>? _showOutputs;

        /// <summary>
        /// Outputs the result of `SHOW SERVICES` for the given service.
        /// </summary>
        public InputList<Inputs.JobServiceShowOutputGetArgs> ShowOutputs
        {
            get => _showOutputs ?? (_showOutputs = new InputList<Inputs.JobServiceShowOutputGetArgs>());
            set => _showOutputs = value;
        }

        public JobServiceState()
        {
        }
        public static new JobServiceState Empty => new JobServiceState();
    }
}
