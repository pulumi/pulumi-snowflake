// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.TableArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.TableState;
import com.pulumi.snowflake.outputs.TableColumn;
import com.pulumi.snowflake.outputs.TablePrimaryKey;
import com.pulumi.snowflake.outputs.TableTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * format is database name | schema name | table name
 * 
 * ```sh
 *  $ pulumi import snowflake:index/table:Table example &#39;databaseName|schemaName|tableName&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/table:Table")
public class Table extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether to enable change tracking on the table. Default false.
     * 
     */
    @Export(name="changeTracking", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> changeTracking;

    /**
     * @return Specifies whether to enable change tracking on the table. Default false.
     * 
     */
    public Output<Optional<Boolean>> changeTracking() {
        return Codegen.optional(this.changeTracking);
    }
    /**
     * A list of one or more table columns/expressions to be used as clustering key(s) for the table
     * 
     */
    @Export(name="clusterBies", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> clusterBies;

    /**
     * @return A list of one or more table columns/expressions to be used as clustering key(s) for the table
     * 
     */
    public Output<Optional<List<String>>> clusterBies() {
        return Codegen.optional(this.clusterBies);
    }
    /**
     * Definitions of a column to create in the table. Minimum one required.
     * 
     */
    @Export(name="columns", type=List.class, parameters={TableColumn.class})
    private Output<List<TableColumn>> columns;

    /**
     * @return Definitions of a column to create in the table. Minimum one required.
     * 
     */
    public Output<List<TableColumn>> columns() {
        return this.columns;
    }
    /**
     * Column comment
     * 
     */
    @Export(name="comment", type=String.class, parameters={})
    private Output</* @Nullable */ String> comment;

    /**
     * @return Column comment
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Specifies the retention period for the table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical data in the table. Default value is 1, if you wish to inherit the parent schema setting then pass in the schema attribute to this argument.
     * 
     * @deprecated
     * Use data_retention_time_in_days attribute instead
     * 
     */
    @Deprecated /* Use data_retention_time_in_days attribute instead */
    @Export(name="dataRetentionDays", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> dataRetentionDays;

    /**
     * @return Specifies the retention period for the table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical data in the table. Default value is 1, if you wish to inherit the parent schema setting then pass in the schema attribute to this argument.
     * 
     */
    public Output<Optional<Integer>> dataRetentionDays() {
        return Codegen.optional(this.dataRetentionDays);
    }
    /**
     * Specifies the retention period for the table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical data in the table. Default value is 1, if you wish to inherit the parent schema setting then pass in the schema attribute to this argument.
     * 
     * @deprecated
     * Use snowflake_object_parameter instead
     * 
     */
    @Deprecated /* Use snowflake_object_parameter instead */
    @Export(name="dataRetentionTimeInDays", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> dataRetentionTimeInDays;

    /**
     * @return Specifies the retention period for the table so that Time Travel actions (SELECT, CLONE, UNDROP) can be performed on historical data in the table. Default value is 1, if you wish to inherit the parent schema setting then pass in the schema attribute to this argument.
     * 
     */
    public Output<Optional<Integer>> dataRetentionTimeInDays() {
        return Codegen.optional(this.dataRetentionTimeInDays);
    }
    /**
     * Name of the database that the tag was created in.
     * 
     */
    @Export(name="database", type=String.class, parameters={})
    private Output<String> database;

    /**
     * @return Name of the database that the tag was created in.
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * Column name
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Column name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Name of the role that owns the table.
     * 
     */
    @Export(name="owner", type=String.class, parameters={})
    private Output<String> owner;

    /**
     * @return Name of the role that owns the table.
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }
    /**
     * Definitions of primary key constraint to create on table
     * 
     * @deprecated
     * Use snowflake_table_constraint instead
     * 
     */
    @Deprecated /* Use snowflake_table_constraint instead */
    @Export(name="primaryKey", type=TablePrimaryKey.class, parameters={})
    private Output</* @Nullable */ TablePrimaryKey> primaryKey;

    /**
     * @return Definitions of primary key constraint to create on table
     * 
     */
    public Output<Optional<TablePrimaryKey>> primaryKey() {
        return Codegen.optional(this.primaryKey);
    }
    /**
     * Qualified name of the table.
     * 
     */
    @Export(name="qualifiedName", type=String.class, parameters={})
    private Output<String> qualifiedName;

    /**
     * @return Qualified name of the table.
     * 
     */
    public Output<String> qualifiedName() {
        return this.qualifiedName;
    }
    /**
     * Name of the schema that the tag was created in.
     * 
     */
    @Export(name="schema", type=String.class, parameters={})
    private Output<String> schema;

    /**
     * @return Name of the schema that the tag was created in.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Definitions of a tag to associate with the resource.
     * 
     * @deprecated
     * Use the &#39;snowflake_tag_association&#39; resource instead.
     * 
     */
    @Deprecated /* Use the 'snowflake_tag_association' resource instead. */
    @Export(name="tags", type=List.class, parameters={TableTag.class})
    private Output</* @Nullable */ List<TableTag>> tags;

    /**
     * @return Definitions of a tag to associate with the resource.
     * 
     */
    public Output<Optional<List<TableTag>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Table(String name) {
        this(name, TableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Table(String name, TableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Table(String name, TableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/table:Table", name, args == null ? TableArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Table(String name, Output<String> id, @Nullable TableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/table:Table", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Table get(String name, Output<String> id, @Nullable TableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Table(name, id, state, options);
    }
}
