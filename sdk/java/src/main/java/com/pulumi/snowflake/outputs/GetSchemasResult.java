// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetSchemasIn;
import com.pulumi.snowflake.outputs.GetSchemasLimit;
import com.pulumi.snowflake.outputs.GetSchemasSchema;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSchemasResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return IN clause to filter the list of streamlits
     * 
     */
    private @Nullable GetSchemasIn in;
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    private @Nullable String like;
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit wll start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `starts_with` or `like`.
     * 
     */
    private @Nullable GetSchemasLimit limit;
    /**
     * @return Holds the aggregated output of all SCHEMA details queries.
     * 
     */
    private List<GetSchemasSchema> schemas;
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    private @Nullable String startsWith;
    /**
     * @return (Default: `true`) Runs DESC SCHEMA for each schema returned by SHOW SCHEMAS. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    private @Nullable Boolean withDescribe;
    /**
     * @return (Default: `true`) Runs SHOW PARAMETERS FOR SCHEMA for each schema returned by SHOW SCHEMAS. The output of describe is saved to the parameters field as a map. By default this value is set to true.
     * 
     */
    private @Nullable Boolean withParameters;

    private GetSchemasResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IN clause to filter the list of streamlits
     * 
     */
    public Optional<GetSchemasIn> in() {
        return Optional.ofNullable(this.in);
    }
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit wll start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `starts_with` or `like`.
     * 
     */
    public Optional<GetSchemasLimit> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return Holds the aggregated output of all SCHEMA details queries.
     * 
     */
    public List<GetSchemasSchema> schemas() {
        return this.schemas;
    }
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }
    /**
     * @return (Default: `true`) Runs DESC SCHEMA for each schema returned by SHOW SCHEMAS. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }
    /**
     * @return (Default: `true`) Runs SHOW PARAMETERS FOR SCHEMA for each schema returned by SHOW SCHEMAS. The output of describe is saved to the parameters field as a map. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withParameters() {
        return Optional.ofNullable(this.withParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable GetSchemasIn in;
        private @Nullable String like;
        private @Nullable GetSchemasLimit limit;
        private List<GetSchemasSchema> schemas;
        private @Nullable String startsWith;
        private @Nullable Boolean withDescribe;
        private @Nullable Boolean withParameters;
        public Builder() {}
        public Builder(GetSchemasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.in = defaults.in;
    	      this.like = defaults.like;
    	      this.limit = defaults.limit;
    	      this.schemas = defaults.schemas;
    	      this.startsWith = defaults.startsWith;
    	      this.withDescribe = defaults.withDescribe;
    	      this.withParameters = defaults.withParameters;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchemasResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder in(@Nullable GetSchemasIn in) {

            this.in = in;
            return this;
        }
        @CustomType.Setter
        public Builder like(@Nullable String like) {

            this.like = like;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable GetSchemasLimit limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<GetSchemasSchema> schemas) {
            if (schemas == null) {
              throw new MissingRequiredPropertyException("GetSchemasResult", "schemas");
            }
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(GetSchemasSchema... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder startsWith(@Nullable String startsWith) {

            this.startsWith = startsWith;
            return this;
        }
        @CustomType.Setter
        public Builder withDescribe(@Nullable Boolean withDescribe) {

            this.withDescribe = withDescribe;
            return this;
        }
        @CustomType.Setter
        public Builder withParameters(@Nullable Boolean withParameters) {

            this.withParameters = withParameters;
            return this;
        }
        public GetSchemasResult build() {
            final var _resultValue = new GetSchemasResult();
            _resultValue.id = id;
            _resultValue.in = in;
            _resultValue.like = like;
            _resultValue.limit = limit;
            _resultValue.schemas = schemas;
            _resultValue.startsWith = startsWith;
            _resultValue.withDescribe = withDescribe;
            _resultValue.withParameters = withParameters;
            return _resultValue;
        }
    }
}
