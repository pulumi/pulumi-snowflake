// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServicesLimit extends com.pulumi.resources.InvokeArgs {

    public static final GetServicesLimit Empty = new GetServicesLimit();

    /**
     * Specifies a **case-sensitive** pattern that is used to match object name. After the first match, the limit on the number of rows will be applied.
     * 
     */
    @Import(name="from")
    private @Nullable String from;

    /**
     * @return Specifies a **case-sensitive** pattern that is used to match object name. After the first match, the limit on the number of rows will be applied.
     * 
     */
    public Optional<String> from() {
        return Optional.ofNullable(this.from);
    }

    /**
     * The maximum number of rows to return.
     * 
     */
    @Import(name="rows", required=true)
    private Integer rows;

    /**
     * @return The maximum number of rows to return.
     * 
     */
    public Integer rows() {
        return this.rows;
    }

    private GetServicesLimit() {}

    private GetServicesLimit(GetServicesLimit $) {
        this.from = $.from;
        this.rows = $.rows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServicesLimit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServicesLimit $;

        public Builder() {
            $ = new GetServicesLimit();
        }

        public Builder(GetServicesLimit defaults) {
            $ = new GetServicesLimit(Objects.requireNonNull(defaults));
        }

        /**
         * @param from Specifies a **case-sensitive** pattern that is used to match object name. After the first match, the limit on the number of rows will be applied.
         * 
         * @return builder
         * 
         */
        public Builder from(@Nullable String from) {
            $.from = from;
            return this;
        }

        /**
         * @param rows The maximum number of rows to return.
         * 
         * @return builder
         * 
         */
        public Builder rows(Integer rows) {
            $.rows = rows;
            return this;
        }

        public GetServicesLimit build() {
            if ($.rows == null) {
                throw new MissingRequiredPropertyException("GetServicesLimit", "rows");
            }
            return $;
        }
    }

}
