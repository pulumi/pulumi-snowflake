// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class TableConstraintForeignKeyPropertiesReferences {
    /**
     * @return Columns to use in foreign key reference
     * 
     */
    private List<String> columns;
    /**
     * @return Name of constraint
     * 
     */
    private String tableId;

    private TableConstraintForeignKeyPropertiesReferences() {}
    /**
     * @return Columns to use in foreign key reference
     * 
     */
    public List<String> columns() {
        return this.columns;
    }
    /**
     * @return Name of constraint
     * 
     */
    public String tableId() {
        return this.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableConstraintForeignKeyPropertiesReferences defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> columns;
        private String tableId;
        public Builder() {}
        public Builder(TableConstraintForeignKeyPropertiesReferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.tableId = defaults.tableId;
        }

        @CustomType.Setter
        public Builder columns(List<String> columns) {
            if (columns == null) {
              throw new MissingRequiredPropertyException("TableConstraintForeignKeyPropertiesReferences", "columns");
            }
            this.columns = columns;
            return this;
        }
        public Builder columns(String... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder tableId(String tableId) {
            if (tableId == null) {
              throw new MissingRequiredPropertyException("TableConstraintForeignKeyPropertiesReferences", "tableId");
            }
            this.tableId = tableId;
            return this;
        }
        public TableConstraintForeignKeyPropertiesReferences build() {
            final var _resultValue = new TableConstraintForeignKeyPropertiesReferences();
            _resultValue.columns = columns;
            _resultValue.tableId = tableId;
            return _resultValue;
        }
    }
}
