// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WarehouseShowOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final WarehouseShowOutputArgs Empty = new WarehouseShowOutputArgs();

    @Import(name="autoResume")
    private @Nullable Output<Boolean> autoResume;

    public Optional<Output<Boolean>> autoResume() {
        return Optional.ofNullable(this.autoResume);
    }

    @Import(name="autoSuspend")
    private @Nullable Output<Integer> autoSuspend;

    public Optional<Output<Integer>> autoSuspend() {
        return Optional.ofNullable(this.autoSuspend);
    }

    @Import(name="available")
    private @Nullable Output<Double> available;

    public Optional<Output<Double>> available() {
        return Optional.ofNullable(this.available);
    }

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    @Import(name="enableQueryAcceleration")
    private @Nullable Output<Boolean> enableQueryAcceleration;

    public Optional<Output<Boolean>> enableQueryAcceleration() {
        return Optional.ofNullable(this.enableQueryAcceleration);
    }

    @Import(name="generation")
    private @Nullable Output<String> generation;

    public Optional<Output<String>> generation() {
        return Optional.ofNullable(this.generation);
    }

    @Import(name="isCurrent")
    private @Nullable Output<Boolean> isCurrent;

    public Optional<Output<Boolean>> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }

    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    @Import(name="maxClusterCount")
    private @Nullable Output<Integer> maxClusterCount;

    public Optional<Output<Integer>> maxClusterCount() {
        return Optional.ofNullable(this.maxClusterCount);
    }

    @Import(name="minClusterCount")
    private @Nullable Output<Integer> minClusterCount;

    public Optional<Output<Integer>> minClusterCount() {
        return Optional.ofNullable(this.minClusterCount);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="other")
    private @Nullable Output<Double> other;

    public Optional<Output<Double>> other() {
        return Optional.ofNullable(this.other);
    }

    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="ownerRoleType")
    private @Nullable Output<String> ownerRoleType;

    public Optional<Output<String>> ownerRoleType() {
        return Optional.ofNullable(this.ownerRoleType);
    }

    @Import(name="provisioning")
    private @Nullable Output<Double> provisioning;

    public Optional<Output<Double>> provisioning() {
        return Optional.ofNullable(this.provisioning);
    }

    @Import(name="queryAccelerationMaxScaleFactor")
    private @Nullable Output<Integer> queryAccelerationMaxScaleFactor;

    public Optional<Output<Integer>> queryAccelerationMaxScaleFactor() {
        return Optional.ofNullable(this.queryAccelerationMaxScaleFactor);
    }

    @Import(name="queued")
    private @Nullable Output<Integer> queued;

    public Optional<Output<Integer>> queued() {
        return Optional.ofNullable(this.queued);
    }

    @Import(name="quiescing")
    private @Nullable Output<Double> quiescing;

    public Optional<Output<Double>> quiescing() {
        return Optional.ofNullable(this.quiescing);
    }

    @Import(name="resourceConstraint")
    private @Nullable Output<String> resourceConstraint;

    public Optional<Output<String>> resourceConstraint() {
        return Optional.ofNullable(this.resourceConstraint);
    }

    @Import(name="resourceMonitor")
    private @Nullable Output<String> resourceMonitor;

    public Optional<Output<String>> resourceMonitor() {
        return Optional.ofNullable(this.resourceMonitor);
    }

    @Import(name="resumedOn")
    private @Nullable Output<String> resumedOn;

    public Optional<Output<String>> resumedOn() {
        return Optional.ofNullable(this.resumedOn);
    }

    @Import(name="running")
    private @Nullable Output<Integer> running;

    public Optional<Output<Integer>> running() {
        return Optional.ofNullable(this.running);
    }

    @Import(name="scalingPolicy")
    private @Nullable Output<String> scalingPolicy;

    public Optional<Output<String>> scalingPolicy() {
        return Optional.ofNullable(this.scalingPolicy);
    }

    @Import(name="size")
    private @Nullable Output<String> size;

    public Optional<Output<String>> size() {
        return Optional.ofNullable(this.size);
    }

    @Import(name="startedClusters")
    private @Nullable Output<Integer> startedClusters;

    public Optional<Output<Integer>> startedClusters() {
        return Optional.ofNullable(this.startedClusters);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="updatedOn")
    private @Nullable Output<String> updatedOn;

    public Optional<Output<String>> updatedOn() {
        return Optional.ofNullable(this.updatedOn);
    }

    private WarehouseShowOutputArgs() {}

    private WarehouseShowOutputArgs(WarehouseShowOutputArgs $) {
        this.autoResume = $.autoResume;
        this.autoSuspend = $.autoSuspend;
        this.available = $.available;
        this.comment = $.comment;
        this.createdOn = $.createdOn;
        this.enableQueryAcceleration = $.enableQueryAcceleration;
        this.generation = $.generation;
        this.isCurrent = $.isCurrent;
        this.isDefault = $.isDefault;
        this.maxClusterCount = $.maxClusterCount;
        this.minClusterCount = $.minClusterCount;
        this.name = $.name;
        this.other = $.other;
        this.owner = $.owner;
        this.ownerRoleType = $.ownerRoleType;
        this.provisioning = $.provisioning;
        this.queryAccelerationMaxScaleFactor = $.queryAccelerationMaxScaleFactor;
        this.queued = $.queued;
        this.quiescing = $.quiescing;
        this.resourceConstraint = $.resourceConstraint;
        this.resourceMonitor = $.resourceMonitor;
        this.resumedOn = $.resumedOn;
        this.running = $.running;
        this.scalingPolicy = $.scalingPolicy;
        this.size = $.size;
        this.startedClusters = $.startedClusters;
        this.state = $.state;
        this.type = $.type;
        this.updatedOn = $.updatedOn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WarehouseShowOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WarehouseShowOutputArgs $;

        public Builder() {
            $ = new WarehouseShowOutputArgs();
        }

        public Builder(WarehouseShowOutputArgs defaults) {
            $ = new WarehouseShowOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoResume(@Nullable Output<Boolean> autoResume) {
            $.autoResume = autoResume;
            return this;
        }

        public Builder autoResume(Boolean autoResume) {
            return autoResume(Output.of(autoResume));
        }

        public Builder autoSuspend(@Nullable Output<Integer> autoSuspend) {
            $.autoSuspend = autoSuspend;
            return this;
        }

        public Builder autoSuspend(Integer autoSuspend) {
            return autoSuspend(Output.of(autoSuspend));
        }

        public Builder available(@Nullable Output<Double> available) {
            $.available = available;
            return this;
        }

        public Builder available(Double available) {
            return available(Output.of(available));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        public Builder enableQueryAcceleration(@Nullable Output<Boolean> enableQueryAcceleration) {
            $.enableQueryAcceleration = enableQueryAcceleration;
            return this;
        }

        public Builder enableQueryAcceleration(Boolean enableQueryAcceleration) {
            return enableQueryAcceleration(Output.of(enableQueryAcceleration));
        }

        public Builder generation(@Nullable Output<String> generation) {
            $.generation = generation;
            return this;
        }

        public Builder generation(String generation) {
            return generation(Output.of(generation));
        }

        public Builder isCurrent(@Nullable Output<Boolean> isCurrent) {
            $.isCurrent = isCurrent;
            return this;
        }

        public Builder isCurrent(Boolean isCurrent) {
            return isCurrent(Output.of(isCurrent));
        }

        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        public Builder maxClusterCount(@Nullable Output<Integer> maxClusterCount) {
            $.maxClusterCount = maxClusterCount;
            return this;
        }

        public Builder maxClusterCount(Integer maxClusterCount) {
            return maxClusterCount(Output.of(maxClusterCount));
        }

        public Builder minClusterCount(@Nullable Output<Integer> minClusterCount) {
            $.minClusterCount = minClusterCount;
            return this;
        }

        public Builder minClusterCount(Integer minClusterCount) {
            return minClusterCount(Output.of(minClusterCount));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder other(@Nullable Output<Double> other) {
            $.other = other;
            return this;
        }

        public Builder other(Double other) {
            return other(Output.of(other));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder ownerRoleType(@Nullable Output<String> ownerRoleType) {
            $.ownerRoleType = ownerRoleType;
            return this;
        }

        public Builder ownerRoleType(String ownerRoleType) {
            return ownerRoleType(Output.of(ownerRoleType));
        }

        public Builder provisioning(@Nullable Output<Double> provisioning) {
            $.provisioning = provisioning;
            return this;
        }

        public Builder provisioning(Double provisioning) {
            return provisioning(Output.of(provisioning));
        }

        public Builder queryAccelerationMaxScaleFactor(@Nullable Output<Integer> queryAccelerationMaxScaleFactor) {
            $.queryAccelerationMaxScaleFactor = queryAccelerationMaxScaleFactor;
            return this;
        }

        public Builder queryAccelerationMaxScaleFactor(Integer queryAccelerationMaxScaleFactor) {
            return queryAccelerationMaxScaleFactor(Output.of(queryAccelerationMaxScaleFactor));
        }

        public Builder queued(@Nullable Output<Integer> queued) {
            $.queued = queued;
            return this;
        }

        public Builder queued(Integer queued) {
            return queued(Output.of(queued));
        }

        public Builder quiescing(@Nullable Output<Double> quiescing) {
            $.quiescing = quiescing;
            return this;
        }

        public Builder quiescing(Double quiescing) {
            return quiescing(Output.of(quiescing));
        }

        public Builder resourceConstraint(@Nullable Output<String> resourceConstraint) {
            $.resourceConstraint = resourceConstraint;
            return this;
        }

        public Builder resourceConstraint(String resourceConstraint) {
            return resourceConstraint(Output.of(resourceConstraint));
        }

        public Builder resourceMonitor(@Nullable Output<String> resourceMonitor) {
            $.resourceMonitor = resourceMonitor;
            return this;
        }

        public Builder resourceMonitor(String resourceMonitor) {
            return resourceMonitor(Output.of(resourceMonitor));
        }

        public Builder resumedOn(@Nullable Output<String> resumedOn) {
            $.resumedOn = resumedOn;
            return this;
        }

        public Builder resumedOn(String resumedOn) {
            return resumedOn(Output.of(resumedOn));
        }

        public Builder running(@Nullable Output<Integer> running) {
            $.running = running;
            return this;
        }

        public Builder running(Integer running) {
            return running(Output.of(running));
        }

        public Builder scalingPolicy(@Nullable Output<String> scalingPolicy) {
            $.scalingPolicy = scalingPolicy;
            return this;
        }

        public Builder scalingPolicy(String scalingPolicy) {
            return scalingPolicy(Output.of(scalingPolicy));
        }

        public Builder size(@Nullable Output<String> size) {
            $.size = size;
            return this;
        }

        public Builder size(String size) {
            return size(Output.of(size));
        }

        public Builder startedClusters(@Nullable Output<Integer> startedClusters) {
            $.startedClusters = startedClusters;
            return this;
        }

        public Builder startedClusters(Integer startedClusters) {
            return startedClusters(Output.of(startedClusters));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder updatedOn(@Nullable Output<String> updatedOn) {
            $.updatedOn = updatedOn;
            return this;
        }

        public Builder updatedOn(String updatedOn) {
            return updatedOn(Output.of(updatedOn));
        }

        public WarehouseShowOutputArgs build() {
            return $;
        }
    }

}
