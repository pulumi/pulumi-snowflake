// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalVolumeStorageLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalVolumeStorageLocationArgs Empty = new ExternalVolumeStorageLocationArgs();

    /**
     * Specifies the ID for your Office 365 tenant that the allowed and blocked storage accounts belong to.
     * 
     */
    @Import(name="azureTenantId")
    private @Nullable Output<String> azureTenantId;

    /**
     * @return Specifies the ID for your Office 365 tenant that the allowed and blocked storage accounts belong to.
     * 
     */
    public Optional<Output<String>> azureTenantId() {
        return Optional.ofNullable(this.azureTenantId);
    }

    /**
     * Specifies the ID for the KMS-managed key used to encrypt files.
     * 
     */
    @Import(name="encryptionKmsKeyId")
    private @Nullable Output<String> encryptionKmsKeyId;

    /**
     * @return Specifies the ID for the KMS-managed key used to encrypt files.
     * 
     */
    public Optional<Output<String>> encryptionKmsKeyId() {
        return Optional.ofNullable(this.encryptionKmsKeyId);
    }

    /**
     * Specifies the encryption type used.
     * 
     */
    @Import(name="encryptionType")
    private @Nullable Output<String> encryptionType;

    /**
     * @return Specifies the encryption type used.
     * 
     */
    public Optional<Output<String>> encryptionType() {
        return Optional.ofNullable(this.encryptionType);
    }

    /**
     * External ID that Snowflake uses to establish a trust relationship with AWS.
     * 
     */
    @Import(name="storageAwsExternalId")
    private @Nullable Output<String> storageAwsExternalId;

    /**
     * @return External ID that Snowflake uses to establish a trust relationship with AWS.
     * 
     */
    public Optional<Output<String>> storageAwsExternalId() {
        return Optional.ofNullable(this.storageAwsExternalId);
    }

    /**
     * Specifies the case-sensitive Amazon Resource Name (ARN) of the AWS identity and access management (IAM) role that grants privileges on the S3 bucket containing your data files.
     * 
     */
    @Import(name="storageAwsRoleArn")
    private @Nullable Output<String> storageAwsRoleArn;

    /**
     * @return Specifies the case-sensitive Amazon Resource Name (ARN) of the AWS identity and access management (IAM) role that grants privileges on the S3 bucket containing your data files.
     * 
     */
    public Optional<Output<String>> storageAwsRoleArn() {
        return Optional.ofNullable(this.storageAwsRoleArn);
    }

    /**
     * Specifies the base URL for your cloud storage location.
     * 
     */
    @Import(name="storageBaseUrl", required=true)
    private Output<String> storageBaseUrl;

    /**
     * @return Specifies the base URL for your cloud storage location.
     * 
     */
    public Output<String> storageBaseUrl() {
        return this.storageBaseUrl;
    }

    @Import(name="storageLocationName", required=true)
    private Output<String> storageLocationName;

    public Output<String> storageLocationName() {
        return this.storageLocationName;
    }

    /**
     * Specifies the cloud storage provider that stores your data files. Valid values are (case-insensitive): `GCS` | `AZURE` | `S3` | `S3GOV`.
     * 
     */
    @Import(name="storageProvider", required=true)
    private Output<String> storageProvider;

    /**
     * @return Specifies the cloud storage provider that stores your data files. Valid values are (case-insensitive): `GCS` | `AZURE` | `S3` | `S3GOV`.
     * 
     */
    public Output<String> storageProvider() {
        return this.storageProvider;
    }

    private ExternalVolumeStorageLocationArgs() {}

    private ExternalVolumeStorageLocationArgs(ExternalVolumeStorageLocationArgs $) {
        this.azureTenantId = $.azureTenantId;
        this.encryptionKmsKeyId = $.encryptionKmsKeyId;
        this.encryptionType = $.encryptionType;
        this.storageAwsExternalId = $.storageAwsExternalId;
        this.storageAwsRoleArn = $.storageAwsRoleArn;
        this.storageBaseUrl = $.storageBaseUrl;
        this.storageLocationName = $.storageLocationName;
        this.storageProvider = $.storageProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalVolumeStorageLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalVolumeStorageLocationArgs $;

        public Builder() {
            $ = new ExternalVolumeStorageLocationArgs();
        }

        public Builder(ExternalVolumeStorageLocationArgs defaults) {
            $ = new ExternalVolumeStorageLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureTenantId Specifies the ID for your Office 365 tenant that the allowed and blocked storage accounts belong to.
         * 
         * @return builder
         * 
         */
        public Builder azureTenantId(@Nullable Output<String> azureTenantId) {
            $.azureTenantId = azureTenantId;
            return this;
        }

        /**
         * @param azureTenantId Specifies the ID for your Office 365 tenant that the allowed and blocked storage accounts belong to.
         * 
         * @return builder
         * 
         */
        public Builder azureTenantId(String azureTenantId) {
            return azureTenantId(Output.of(azureTenantId));
        }

        /**
         * @param encryptionKmsKeyId Specifies the ID for the KMS-managed key used to encrypt files.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKmsKeyId(@Nullable Output<String> encryptionKmsKeyId) {
            $.encryptionKmsKeyId = encryptionKmsKeyId;
            return this;
        }

        /**
         * @param encryptionKmsKeyId Specifies the ID for the KMS-managed key used to encrypt files.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKmsKeyId(String encryptionKmsKeyId) {
            return encryptionKmsKeyId(Output.of(encryptionKmsKeyId));
        }

        /**
         * @param encryptionType Specifies the encryption type used.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(@Nullable Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param encryptionType Specifies the encryption type used.
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        /**
         * @param storageAwsExternalId External ID that Snowflake uses to establish a trust relationship with AWS.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsExternalId(@Nullable Output<String> storageAwsExternalId) {
            $.storageAwsExternalId = storageAwsExternalId;
            return this;
        }

        /**
         * @param storageAwsExternalId External ID that Snowflake uses to establish a trust relationship with AWS.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsExternalId(String storageAwsExternalId) {
            return storageAwsExternalId(Output.of(storageAwsExternalId));
        }

        /**
         * @param storageAwsRoleArn Specifies the case-sensitive Amazon Resource Name (ARN) of the AWS identity and access management (IAM) role that grants privileges on the S3 bucket containing your data files.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsRoleArn(@Nullable Output<String> storageAwsRoleArn) {
            $.storageAwsRoleArn = storageAwsRoleArn;
            return this;
        }

        /**
         * @param storageAwsRoleArn Specifies the case-sensitive Amazon Resource Name (ARN) of the AWS identity and access management (IAM) role that grants privileges on the S3 bucket containing your data files.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsRoleArn(String storageAwsRoleArn) {
            return storageAwsRoleArn(Output.of(storageAwsRoleArn));
        }

        /**
         * @param storageBaseUrl Specifies the base URL for your cloud storage location.
         * 
         * @return builder
         * 
         */
        public Builder storageBaseUrl(Output<String> storageBaseUrl) {
            $.storageBaseUrl = storageBaseUrl;
            return this;
        }

        /**
         * @param storageBaseUrl Specifies the base URL for your cloud storage location.
         * 
         * @return builder
         * 
         */
        public Builder storageBaseUrl(String storageBaseUrl) {
            return storageBaseUrl(Output.of(storageBaseUrl));
        }

        public Builder storageLocationName(Output<String> storageLocationName) {
            $.storageLocationName = storageLocationName;
            return this;
        }

        public Builder storageLocationName(String storageLocationName) {
            return storageLocationName(Output.of(storageLocationName));
        }

        /**
         * @param storageProvider Specifies the cloud storage provider that stores your data files. Valid values are (case-insensitive): `GCS` | `AZURE` | `S3` | `S3GOV`.
         * 
         * @return builder
         * 
         */
        public Builder storageProvider(Output<String> storageProvider) {
            $.storageProvider = storageProvider;
            return this;
        }

        /**
         * @param storageProvider Specifies the cloud storage provider that stores your data files. Valid values are (case-insensitive): `GCS` | `AZURE` | `S3` | `S3GOV`.
         * 
         * @return builder
         * 
         */
        public Builder storageProvider(String storageProvider) {
            return storageProvider(Output.of(storageProvider));
        }

        public ExternalVolumeStorageLocationArgs build() {
            if ($.storageBaseUrl == null) {
                throw new MissingRequiredPropertyException("ExternalVolumeStorageLocationArgs", "storageBaseUrl");
            }
            if ($.storageLocationName == null) {
                throw new MissingRequiredPropertyException("ExternalVolumeStorageLocationArgs", "storageLocationName");
            }
            if ($.storageProvider == null) {
                throw new MissingRequiredPropertyException("ExternalVolumeStorageLocationArgs", "storageProvider");
            }
            return $;
        }
    }

}
