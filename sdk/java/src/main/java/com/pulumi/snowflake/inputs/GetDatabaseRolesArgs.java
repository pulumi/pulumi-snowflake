// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.inputs.GetDatabaseRolesLimitArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseRolesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseRolesArgs Empty = new GetDatabaseRolesArgs();

    @Import(name="inDatabase", required=true)
    private Output<String> inDatabase;

    public Output<String> inDatabase() {
        return this.inDatabase;
    }

    @Import(name="like")
    private @Nullable Output<String> like;

    public Optional<Output<String>> like() {
        return Optional.ofNullable(this.like);
    }

    @Import(name="limit")
    private @Nullable Output<GetDatabaseRolesLimitArgs> limit;

    public Optional<Output<GetDatabaseRolesLimitArgs>> limit() {
        return Optional.ofNullable(this.limit);
    }

    private GetDatabaseRolesArgs() {}

    private GetDatabaseRolesArgs(GetDatabaseRolesArgs $) {
        this.inDatabase = $.inDatabase;
        this.like = $.like;
        this.limit = $.limit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseRolesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseRolesArgs $;

        public Builder() {
            $ = new GetDatabaseRolesArgs();
        }

        public Builder(GetDatabaseRolesArgs defaults) {
            $ = new GetDatabaseRolesArgs(Objects.requireNonNull(defaults));
        }

        public Builder inDatabase(Output<String> inDatabase) {
            $.inDatabase = inDatabase;
            return this;
        }

        public Builder inDatabase(String inDatabase) {
            return inDatabase(Output.of(inDatabase));
        }

        public Builder like(@Nullable Output<String> like) {
            $.like = like;
            return this;
        }

        public Builder like(String like) {
            return like(Output.of(like));
        }

        public Builder limit(@Nullable Output<GetDatabaseRolesLimitArgs> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(GetDatabaseRolesLimitArgs limit) {
            return limit(Output.of(limit));
        }

        public GetDatabaseRolesArgs build() {
            if ($.inDatabase == null) {
                throw new MissingRequiredPropertyException("GetDatabaseRolesArgs", "inDatabase");
            }
            return $;
        }
    }

}
