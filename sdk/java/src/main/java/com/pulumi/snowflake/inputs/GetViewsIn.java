// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetViewsIn extends com.pulumi.resources.InvokeArgs {

    public static final GetViewsIn Empty = new GetViewsIn();

    /**
     * Returns records for the entire account.
     * 
     */
    @Import(name="account")
    private @Nullable Boolean account;

    /**
     * @return Returns records for the entire account.
     * 
     */
    public Optional<Boolean> account() {
        return Optional.ofNullable(this.account);
    }

    /**
     * Returns records for the current database in use or for a specified database.
     * 
     */
    @Import(name="database")
    private @Nullable String database;

    /**
     * @return Returns records for the current database in use or for a specified database.
     * 
     */
    public Optional<String> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * Returns records for the current schema in use or a specified schema. Use fully qualified name.
     * 
     */
    @Import(name="schema")
    private @Nullable String schema;

    /**
     * @return Returns records for the current schema in use or a specified schema. Use fully qualified name.
     * 
     */
    public Optional<String> schema() {
        return Optional.ofNullable(this.schema);
    }

    private GetViewsIn() {}

    private GetViewsIn(GetViewsIn $) {
        this.account = $.account;
        this.database = $.database;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetViewsIn defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetViewsIn $;

        public Builder() {
            $ = new GetViewsIn();
        }

        public Builder(GetViewsIn defaults) {
            $ = new GetViewsIn(Objects.requireNonNull(defaults));
        }

        /**
         * @param account Returns records for the entire account.
         * 
         * @return builder
         * 
         */
        public Builder account(@Nullable Boolean account) {
            $.account = account;
            return this;
        }

        /**
         * @param database Returns records for the current database in use or for a specified database.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable String database) {
            $.database = database;
            return this;
        }

        /**
         * @param schema Returns records for the current schema in use or a specified schema. Use fully qualified name.
         * 
         * @return builder
         * 
         */
        public Builder schema(@Nullable String schema) {
            $.schema = schema;
            return this;
        }

        public GetViewsIn build() {
            return $;
        }
    }

}
