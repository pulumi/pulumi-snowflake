// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.GrantPrivilegesToDatabaseRoleOnSchemaObjectAll;
import com.pulumi.snowflake.outputs.GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrantPrivilegesToDatabaseRoleOnSchemaObject {
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    private @Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectAll all;
    /**
     * @return Configures the privilege to be granted on future objects in either a database or schema.
     * 
     */
    private @Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture future;
    /**
     * @return The fully qualified name of the object on which privileges will be granted.
     * 
     */
    private @Nullable String objectName;
    /**
     * @return The object type of the schema object on which privileges will be granted. Valid values are: ALERT | DYNAMIC TABLE | EVENT TABLE | FILE FORMAT | FUNCTION | PROCEDURE | SECRET | SEQUENCE | PIPE | MASKING POLICY | PASSWORD POLICY | ROW ACCESS POLICY | SESSION POLICY | TAG | STAGE | STREAM | TABLE | EXTERNAL TABLE | TASK | VIEW | MATERIALIZED VIEW | NETWORK RULE | PACKAGES POLICY | STREAMLIT | ICEBERG TABLE
     * 
     */
    private @Nullable String objectType;

    private GrantPrivilegesToDatabaseRoleOnSchemaObject() {}
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    public Optional<GrantPrivilegesToDatabaseRoleOnSchemaObjectAll> all() {
        return Optional.ofNullable(this.all);
    }
    /**
     * @return Configures the privilege to be granted on future objects in either a database or schema.
     * 
     */
    public Optional<GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture> future() {
        return Optional.ofNullable(this.future);
    }
    /**
     * @return The fully qualified name of the object on which privileges will be granted.
     * 
     */
    public Optional<String> objectName() {
        return Optional.ofNullable(this.objectName);
    }
    /**
     * @return The object type of the schema object on which privileges will be granted. Valid values are: ALERT | DYNAMIC TABLE | EVENT TABLE | FILE FORMAT | FUNCTION | PROCEDURE | SECRET | SEQUENCE | PIPE | MASKING POLICY | PASSWORD POLICY | ROW ACCESS POLICY | SESSION POLICY | TAG | STAGE | STREAM | TABLE | EXTERNAL TABLE | TASK | VIEW | MATERIALIZED VIEW | NETWORK RULE | PACKAGES POLICY | STREAMLIT | ICEBERG TABLE
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrantPrivilegesToDatabaseRoleOnSchemaObject defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectAll all;
        private @Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture future;
        private @Nullable String objectName;
        private @Nullable String objectType;
        public Builder() {}
        public Builder(GrantPrivilegesToDatabaseRoleOnSchemaObject defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.future = defaults.future;
    	      this.objectName = defaults.objectName;
    	      this.objectType = defaults.objectType;
        }

        @CustomType.Setter
        public Builder all(@Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectAll all) {

            this.all = all;
            return this;
        }
        @CustomType.Setter
        public Builder future(@Nullable GrantPrivilegesToDatabaseRoleOnSchemaObjectFuture future) {

            this.future = future;
            return this;
        }
        @CustomType.Setter
        public Builder objectName(@Nullable String objectName) {

            this.objectName = objectName;
            return this;
        }
        @CustomType.Setter
        public Builder objectType(@Nullable String objectType) {

            this.objectType = objectType;
            return this;
        }
        public GrantPrivilegesToDatabaseRoleOnSchemaObject build() {
            final var _resultValue = new GrantPrivilegesToDatabaseRoleOnSchemaObject();
            _resultValue.all = all;
            _resultValue.future = future;
            _resultValue.objectName = objectName;
            _resultValue.objectType = objectType;
            return _resultValue;
        }
    }
}
