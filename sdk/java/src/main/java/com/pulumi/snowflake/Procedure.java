// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ProcedureArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ProcedureState;
import com.pulumi.snowflake.outputs.ProcedureArgument;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * format is &lt;database_name&gt;.&lt;schema_name&gt;.&lt;procedure_name&gt;(&lt;arg types, separated with &#39;,&#39;&gt;)
 * 
 * ```sh
 * $ pulumi import snowflake:index/procedure:Procedure example &#39;dbName.schemaName.procedureName(varchar, varchar, varchar)&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/procedure:Procedure")
public class Procedure extends com.pulumi.resources.CustomResource {
    /**
     * List of the arguments for the procedure
     * 
     */
    @Export(name="arguments", refs={List.class,ProcedureArgument.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ProcedureArgument>> arguments;

    /**
     * @return List of the arguments for the procedure
     * 
     */
    public Output<Optional<List<ProcedureArgument>>> arguments() {
        return Codegen.optional(this.arguments);
    }
    /**
     * Specifies a comment for the procedure.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the procedure.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * The database in which to create the procedure. Don&#39;t use the | character.
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The database in which to create the procedure. Don&#39;t use the | character.
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * Sets execution context. Allowed values are CALLER and OWNER (consult a proper section in the [docs](https://docs.snowflake.com/en/sql-reference/sql/create-procedure#id1)). For more information see [caller&#39;s rights and owner&#39;s rights](https://docs.snowflake.com/en/developer-guide/stored-procedure/stored-procedures-rights).
     * 
     */
    @Export(name="executeAs", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> executeAs;

    /**
     * @return Sets execution context. Allowed values are CALLER and OWNER (consult a proper section in the [docs](https://docs.snowflake.com/en/sql-reference/sql/create-procedure#id1)). For more information see [caller&#39;s rights and owner&#39;s rights](https://docs.snowflake.com/en/developer-guide/stored-procedure/stored-procedures-rights).
     * 
     */
    public Output<Optional<String>> executeAs() {
        return Codegen.optional(this.executeAs);
    }
    /**
     * The handler method for Java / Python procedures.
     * 
     */
    @Export(name="handler", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> handler;

    /**
     * @return The handler method for Java / Python procedures.
     * 
     */
    public Output<Optional<String>> handler() {
        return Codegen.optional(this.handler);
    }
    /**
     * Imports for Java / Python procedures. For Java this a list of jar files, for Python this is a list of Python files.
     * 
     */
    @Export(name="imports", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> imports;

    /**
     * @return Imports for Java / Python procedures. For Java this a list of jar files, for Python this is a list of Python files.
     * 
     */
    public Output<Optional<List<String>>> imports() {
        return Codegen.optional(this.imports);
    }
    /**
     * Specifies the language of the stored procedure code.
     * 
     */
    @Export(name="language", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> language;

    /**
     * @return Specifies the language of the stored procedure code.
     * 
     */
    public Output<Optional<String>> language() {
        return Codegen.optional(this.language);
    }
    /**
     * Specifies the identifier for the procedure; does not have to be unique for the schema in which the procedure is created. Don&#39;t use the | character.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the identifier for the procedure; does not have to be unique for the schema in which the procedure is created. Don&#39;t use the | character.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the behavior of the procedure when called with null inputs.
     * 
     */
    @Export(name="nullInputBehavior", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nullInputBehavior;

    /**
     * @return Specifies the behavior of the procedure when called with null inputs.
     * 
     */
    public Output<Optional<String>> nullInputBehavior() {
        return Codegen.optional(this.nullInputBehavior);
    }
    /**
     * List of package imports to use for Java / Python procedures. For Java, package imports should be of the form: package*name:version*number, where package*name is snowflake*domain:package. For Python use it should be: (&#39;numpy&#39;,&#39;pandas&#39;,&#39;xgboost==1.5.0&#39;).
     * 
     */
    @Export(name="packages", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> packages;

    /**
     * @return List of package imports to use for Java / Python procedures. For Java, package imports should be of the form: package*name:version*number, where package*name is snowflake*domain:package. For Python use it should be: (&#39;numpy&#39;,&#39;pandas&#39;,&#39;xgboost==1.5.0&#39;).
     * 
     */
    public Output<Optional<List<String>>> packages() {
        return Codegen.optional(this.packages);
    }
    /**
     * Specifies the behavior of the function when returning results
     * 
     * @deprecated
     * These keywords are deprecated for stored procedures. These keywords are not intended to apply to stored procedures. In a future release, these keywords will be removed from the documentation.
     * 
     */
    @Deprecated /* These keywords are deprecated for stored procedures. These keywords are not intended to apply to stored procedures. In a future release, these keywords will be removed from the documentation. */
    @Export(name="returnBehavior", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> returnBehavior;

    /**
     * @return Specifies the behavior of the function when returning results
     * 
     */
    public Output<Optional<String>> returnBehavior() {
        return Codegen.optional(this.returnBehavior);
    }
    /**
     * The return type of the procedure
     * 
     */
    @Export(name="returnType", refs={String.class}, tree="[0]")
    private Output<String> returnType;

    /**
     * @return The return type of the procedure
     * 
     */
    public Output<String> returnType() {
        return this.returnType;
    }
    /**
     * Required for Python procedures. Specifies Python runtime version.
     * 
     */
    @Export(name="runtimeVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runtimeVersion;

    /**
     * @return Required for Python procedures. Specifies Python runtime version.
     * 
     */
    public Output<Optional<String>> runtimeVersion() {
        return Codegen.optional(this.runtimeVersion);
    }
    /**
     * The schema in which to create the procedure. Don&#39;t use the | character.
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema in which to create the procedure. Don&#39;t use the | character.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Specifies that the procedure is secure. For more information about secure procedures, see Protecting Sensitive Information with Secure UDFs and Stored Procedures.
     * 
     */
    @Export(name="secure", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> secure;

    /**
     * @return Specifies that the procedure is secure. For more information about secure procedures, see Protecting Sensitive Information with Secure UDFs and Stored Procedures.
     * 
     */
    public Output<Optional<Boolean>> secure() {
        return Codegen.optional(this.secure);
    }
    /**
     * Specifies the code used to create the procedure.
     * 
     */
    @Export(name="statement", refs={String.class}, tree="[0]")
    private Output<String> statement;

    /**
     * @return Specifies the code used to create the procedure.
     * 
     */
    public Output<String> statement() {
        return this.statement;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Procedure(java.lang.String name) {
        this(name, ProcedureArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Procedure(java.lang.String name, ProcedureArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Procedure(java.lang.String name, ProcedureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/procedure:Procedure", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Procedure(java.lang.String name, Output<java.lang.String> id, @Nullable ProcedureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/procedure:Procedure", name, state, makeResourceOptions(options, id), false);
    }

    private static ProcedureArgs makeArgs(ProcedureArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProcedureArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Procedure get(java.lang.String name, Output<java.lang.String> id, @Nullable ProcedureState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Procedure(name, id, state, options);
    }
}
