// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountRolesAccountRoleShowOutput {
    private Integer assignedToUsers;
    private String comment;
    private String createdOn;
    private Integer grantedRoles;
    private Integer grantedToRoles;
    private Boolean isCurrent;
    private Boolean isDefault;
    private Boolean isInherited;
    private String name;
    private String owner;

    private GetAccountRolesAccountRoleShowOutput() {}
    public Integer assignedToUsers() {
        return this.assignedToUsers;
    }
    public String comment() {
        return this.comment;
    }
    public String createdOn() {
        return this.createdOn;
    }
    public Integer grantedRoles() {
        return this.grantedRoles;
    }
    public Integer grantedToRoles() {
        return this.grantedToRoles;
    }
    public Boolean isCurrent() {
        return this.isCurrent;
    }
    public Boolean isDefault() {
        return this.isDefault;
    }
    public Boolean isInherited() {
        return this.isInherited;
    }
    public String name() {
        return this.name;
    }
    public String owner() {
        return this.owner;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountRolesAccountRoleShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer assignedToUsers;
        private String comment;
        private String createdOn;
        private Integer grantedRoles;
        private Integer grantedToRoles;
        private Boolean isCurrent;
        private Boolean isDefault;
        private Boolean isInherited;
        private String name;
        private String owner;
        public Builder() {}
        public Builder(GetAccountRolesAccountRoleShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedToUsers = defaults.assignedToUsers;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.grantedRoles = defaults.grantedRoles;
    	      this.grantedToRoles = defaults.grantedToRoles;
    	      this.isCurrent = defaults.isCurrent;
    	      this.isDefault = defaults.isDefault;
    	      this.isInherited = defaults.isInherited;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
        }

        @CustomType.Setter
        public Builder assignedToUsers(Integer assignedToUsers) {
            if (assignedToUsers == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "assignedToUsers");
            }
            this.assignedToUsers = assignedToUsers;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder grantedRoles(Integer grantedRoles) {
            if (grantedRoles == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "grantedRoles");
            }
            this.grantedRoles = grantedRoles;
            return this;
        }
        @CustomType.Setter
        public Builder grantedToRoles(Integer grantedToRoles) {
            if (grantedToRoles == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "grantedToRoles");
            }
            this.grantedToRoles = grantedToRoles;
            return this;
        }
        @CustomType.Setter
        public Builder isCurrent(Boolean isCurrent) {
            if (isCurrent == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "isCurrent");
            }
            this.isCurrent = isCurrent;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            if (isDefault == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "isDefault");
            }
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder isInherited(Boolean isInherited) {
            if (isInherited == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "isInherited");
            }
            this.isInherited = isInherited;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetAccountRolesAccountRoleShowOutput", "owner");
            }
            this.owner = owner;
            return this;
        }
        public GetAccountRolesAccountRoleShowOutput build() {
            final var _resultValue = new GetAccountRolesAccountRoleShowOutput();
            _resultValue.assignedToUsers = assignedToUsers;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.grantedRoles = grantedRoles;
            _resultValue.grantedToRoles = grantedToRoles;
            _resultValue.isCurrent = isCurrent;
            _resultValue.isDefault = isDefault;
            _resultValue.isInherited = isInherited;
            _resultValue.name = name;
            _resultValue.owner = owner;
            return _resultValue;
        }
    }
}
