// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.SchemaParameterCatalog;
import com.pulumi.snowflake.outputs.SchemaParameterDataRetentionTimeInDay;
import com.pulumi.snowflake.outputs.SchemaParameterDefaultDdlCollation;
import com.pulumi.snowflake.outputs.SchemaParameterEnableConsoleOutput;
import com.pulumi.snowflake.outputs.SchemaParameterExternalVolume;
import com.pulumi.snowflake.outputs.SchemaParameterLogLevel;
import com.pulumi.snowflake.outputs.SchemaParameterMaxDataExtensionTimeInDay;
import com.pulumi.snowflake.outputs.SchemaParameterPipeExecutionPaused;
import com.pulumi.snowflake.outputs.SchemaParameterQuotedIdentifiersIgnoreCase;
import com.pulumi.snowflake.outputs.SchemaParameterReplaceInvalidCharacter;
import com.pulumi.snowflake.outputs.SchemaParameterStorageSerializationPolicy;
import com.pulumi.snowflake.outputs.SchemaParameterSuspendTaskAfterNumFailure;
import com.pulumi.snowflake.outputs.SchemaParameterTaskAutoRetryAttempt;
import com.pulumi.snowflake.outputs.SchemaParameterTraceLevel;
import com.pulumi.snowflake.outputs.SchemaParameterUserTaskManagedInitialWarehouseSize;
import com.pulumi.snowflake.outputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecond;
import com.pulumi.snowflake.outputs.SchemaParameterUserTaskTimeoutM;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SchemaParameter {
    private @Nullable List<SchemaParameterCatalog> catalogs;
    private @Nullable List<SchemaParameterDataRetentionTimeInDay> dataRetentionTimeInDays;
    private @Nullable List<SchemaParameterDefaultDdlCollation> defaultDdlCollations;
    private @Nullable List<SchemaParameterEnableConsoleOutput> enableConsoleOutputs;
    private @Nullable List<SchemaParameterExternalVolume> externalVolumes;
    private @Nullable List<SchemaParameterLogLevel> logLevels;
    private @Nullable List<SchemaParameterMaxDataExtensionTimeInDay> maxDataExtensionTimeInDays;
    private @Nullable List<SchemaParameterPipeExecutionPaused> pipeExecutionPauseds;
    private @Nullable List<SchemaParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
    private @Nullable List<SchemaParameterReplaceInvalidCharacter> replaceInvalidCharacters;
    private @Nullable List<SchemaParameterStorageSerializationPolicy> storageSerializationPolicies;
    private @Nullable List<SchemaParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
    private @Nullable List<SchemaParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
    private @Nullable List<SchemaParameterTraceLevel> traceLevels;
    private @Nullable List<SchemaParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
    private @Nullable List<SchemaParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
    private @Nullable List<SchemaParameterUserTaskTimeoutM> userTaskTimeoutMs;

    private SchemaParameter() {}
    public List<SchemaParameterCatalog> catalogs() {
        return this.catalogs == null ? List.of() : this.catalogs;
    }
    public List<SchemaParameterDataRetentionTimeInDay> dataRetentionTimeInDays() {
        return this.dataRetentionTimeInDays == null ? List.of() : this.dataRetentionTimeInDays;
    }
    public List<SchemaParameterDefaultDdlCollation> defaultDdlCollations() {
        return this.defaultDdlCollations == null ? List.of() : this.defaultDdlCollations;
    }
    public List<SchemaParameterEnableConsoleOutput> enableConsoleOutputs() {
        return this.enableConsoleOutputs == null ? List.of() : this.enableConsoleOutputs;
    }
    public List<SchemaParameterExternalVolume> externalVolumes() {
        return this.externalVolumes == null ? List.of() : this.externalVolumes;
    }
    public List<SchemaParameterLogLevel> logLevels() {
        return this.logLevels == null ? List.of() : this.logLevels;
    }
    public List<SchemaParameterMaxDataExtensionTimeInDay> maxDataExtensionTimeInDays() {
        return this.maxDataExtensionTimeInDays == null ? List.of() : this.maxDataExtensionTimeInDays;
    }
    public List<SchemaParameterPipeExecutionPaused> pipeExecutionPauseds() {
        return this.pipeExecutionPauseds == null ? List.of() : this.pipeExecutionPauseds;
    }
    public List<SchemaParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases() {
        return this.quotedIdentifiersIgnoreCases == null ? List.of() : this.quotedIdentifiersIgnoreCases;
    }
    public List<SchemaParameterReplaceInvalidCharacter> replaceInvalidCharacters() {
        return this.replaceInvalidCharacters == null ? List.of() : this.replaceInvalidCharacters;
    }
    public List<SchemaParameterStorageSerializationPolicy> storageSerializationPolicies() {
        return this.storageSerializationPolicies == null ? List.of() : this.storageSerializationPolicies;
    }
    public List<SchemaParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures() {
        return this.suspendTaskAfterNumFailures == null ? List.of() : this.suspendTaskAfterNumFailures;
    }
    public List<SchemaParameterTaskAutoRetryAttempt> taskAutoRetryAttempts() {
        return this.taskAutoRetryAttempts == null ? List.of() : this.taskAutoRetryAttempts;
    }
    public List<SchemaParameterTraceLevel> traceLevels() {
        return this.traceLevels == null ? List.of() : this.traceLevels;
    }
    public List<SchemaParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes() {
        return this.userTaskManagedInitialWarehouseSizes == null ? List.of() : this.userTaskManagedInitialWarehouseSizes;
    }
    public List<SchemaParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds() {
        return this.userTaskMinimumTriggerIntervalInSeconds == null ? List.of() : this.userTaskMinimumTriggerIntervalInSeconds;
    }
    public List<SchemaParameterUserTaskTimeoutM> userTaskTimeoutMs() {
        return this.userTaskTimeoutMs == null ? List.of() : this.userTaskTimeoutMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SchemaParameterCatalog> catalogs;
        private @Nullable List<SchemaParameterDataRetentionTimeInDay> dataRetentionTimeInDays;
        private @Nullable List<SchemaParameterDefaultDdlCollation> defaultDdlCollations;
        private @Nullable List<SchemaParameterEnableConsoleOutput> enableConsoleOutputs;
        private @Nullable List<SchemaParameterExternalVolume> externalVolumes;
        private @Nullable List<SchemaParameterLogLevel> logLevels;
        private @Nullable List<SchemaParameterMaxDataExtensionTimeInDay> maxDataExtensionTimeInDays;
        private @Nullable List<SchemaParameterPipeExecutionPaused> pipeExecutionPauseds;
        private @Nullable List<SchemaParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
        private @Nullable List<SchemaParameterReplaceInvalidCharacter> replaceInvalidCharacters;
        private @Nullable List<SchemaParameterStorageSerializationPolicy> storageSerializationPolicies;
        private @Nullable List<SchemaParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
        private @Nullable List<SchemaParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
        private @Nullable List<SchemaParameterTraceLevel> traceLevels;
        private @Nullable List<SchemaParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
        private @Nullable List<SchemaParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
        private @Nullable List<SchemaParameterUserTaskTimeoutM> userTaskTimeoutMs;
        public Builder() {}
        public Builder(SchemaParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogs = defaults.catalogs;
    	      this.dataRetentionTimeInDays = defaults.dataRetentionTimeInDays;
    	      this.defaultDdlCollations = defaults.defaultDdlCollations;
    	      this.enableConsoleOutputs = defaults.enableConsoleOutputs;
    	      this.externalVolumes = defaults.externalVolumes;
    	      this.logLevels = defaults.logLevels;
    	      this.maxDataExtensionTimeInDays = defaults.maxDataExtensionTimeInDays;
    	      this.pipeExecutionPauseds = defaults.pipeExecutionPauseds;
    	      this.quotedIdentifiersIgnoreCases = defaults.quotedIdentifiersIgnoreCases;
    	      this.replaceInvalidCharacters = defaults.replaceInvalidCharacters;
    	      this.storageSerializationPolicies = defaults.storageSerializationPolicies;
    	      this.suspendTaskAfterNumFailures = defaults.suspendTaskAfterNumFailures;
    	      this.taskAutoRetryAttempts = defaults.taskAutoRetryAttempts;
    	      this.traceLevels = defaults.traceLevels;
    	      this.userTaskManagedInitialWarehouseSizes = defaults.userTaskManagedInitialWarehouseSizes;
    	      this.userTaskMinimumTriggerIntervalInSeconds = defaults.userTaskMinimumTriggerIntervalInSeconds;
    	      this.userTaskTimeoutMs = defaults.userTaskTimeoutMs;
        }

        @CustomType.Setter
        public Builder catalogs(@Nullable List<SchemaParameterCatalog> catalogs) {

            this.catalogs = catalogs;
            return this;
        }
        public Builder catalogs(SchemaParameterCatalog... catalogs) {
            return catalogs(List.of(catalogs));
        }
        @CustomType.Setter
        public Builder dataRetentionTimeInDays(@Nullable List<SchemaParameterDataRetentionTimeInDay> dataRetentionTimeInDays) {

            this.dataRetentionTimeInDays = dataRetentionTimeInDays;
            return this;
        }
        public Builder dataRetentionTimeInDays(SchemaParameterDataRetentionTimeInDay... dataRetentionTimeInDays) {
            return dataRetentionTimeInDays(List.of(dataRetentionTimeInDays));
        }
        @CustomType.Setter
        public Builder defaultDdlCollations(@Nullable List<SchemaParameterDefaultDdlCollation> defaultDdlCollations) {

            this.defaultDdlCollations = defaultDdlCollations;
            return this;
        }
        public Builder defaultDdlCollations(SchemaParameterDefaultDdlCollation... defaultDdlCollations) {
            return defaultDdlCollations(List.of(defaultDdlCollations));
        }
        @CustomType.Setter
        public Builder enableConsoleOutputs(@Nullable List<SchemaParameterEnableConsoleOutput> enableConsoleOutputs) {

            this.enableConsoleOutputs = enableConsoleOutputs;
            return this;
        }
        public Builder enableConsoleOutputs(SchemaParameterEnableConsoleOutput... enableConsoleOutputs) {
            return enableConsoleOutputs(List.of(enableConsoleOutputs));
        }
        @CustomType.Setter
        public Builder externalVolumes(@Nullable List<SchemaParameterExternalVolume> externalVolumes) {

            this.externalVolumes = externalVolumes;
            return this;
        }
        public Builder externalVolumes(SchemaParameterExternalVolume... externalVolumes) {
            return externalVolumes(List.of(externalVolumes));
        }
        @CustomType.Setter
        public Builder logLevels(@Nullable List<SchemaParameterLogLevel> logLevels) {

            this.logLevels = logLevels;
            return this;
        }
        public Builder logLevels(SchemaParameterLogLevel... logLevels) {
            return logLevels(List.of(logLevels));
        }
        @CustomType.Setter
        public Builder maxDataExtensionTimeInDays(@Nullable List<SchemaParameterMaxDataExtensionTimeInDay> maxDataExtensionTimeInDays) {

            this.maxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            return this;
        }
        public Builder maxDataExtensionTimeInDays(SchemaParameterMaxDataExtensionTimeInDay... maxDataExtensionTimeInDays) {
            return maxDataExtensionTimeInDays(List.of(maxDataExtensionTimeInDays));
        }
        @CustomType.Setter
        public Builder pipeExecutionPauseds(@Nullable List<SchemaParameterPipeExecutionPaused> pipeExecutionPauseds) {

            this.pipeExecutionPauseds = pipeExecutionPauseds;
            return this;
        }
        public Builder pipeExecutionPauseds(SchemaParameterPipeExecutionPaused... pipeExecutionPauseds) {
            return pipeExecutionPauseds(List.of(pipeExecutionPauseds));
        }
        @CustomType.Setter
        public Builder quotedIdentifiersIgnoreCases(@Nullable List<SchemaParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases) {

            this.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            return this;
        }
        public Builder quotedIdentifiersIgnoreCases(SchemaParameterQuotedIdentifiersIgnoreCase... quotedIdentifiersIgnoreCases) {
            return quotedIdentifiersIgnoreCases(List.of(quotedIdentifiersIgnoreCases));
        }
        @CustomType.Setter
        public Builder replaceInvalidCharacters(@Nullable List<SchemaParameterReplaceInvalidCharacter> replaceInvalidCharacters) {

            this.replaceInvalidCharacters = replaceInvalidCharacters;
            return this;
        }
        public Builder replaceInvalidCharacters(SchemaParameterReplaceInvalidCharacter... replaceInvalidCharacters) {
            return replaceInvalidCharacters(List.of(replaceInvalidCharacters));
        }
        @CustomType.Setter
        public Builder storageSerializationPolicies(@Nullable List<SchemaParameterStorageSerializationPolicy> storageSerializationPolicies) {

            this.storageSerializationPolicies = storageSerializationPolicies;
            return this;
        }
        public Builder storageSerializationPolicies(SchemaParameterStorageSerializationPolicy... storageSerializationPolicies) {
            return storageSerializationPolicies(List.of(storageSerializationPolicies));
        }
        @CustomType.Setter
        public Builder suspendTaskAfterNumFailures(@Nullable List<SchemaParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures) {

            this.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            return this;
        }
        public Builder suspendTaskAfterNumFailures(SchemaParameterSuspendTaskAfterNumFailure... suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(List.of(suspendTaskAfterNumFailures));
        }
        @CustomType.Setter
        public Builder taskAutoRetryAttempts(@Nullable List<SchemaParameterTaskAutoRetryAttempt> taskAutoRetryAttempts) {

            this.taskAutoRetryAttempts = taskAutoRetryAttempts;
            return this;
        }
        public Builder taskAutoRetryAttempts(SchemaParameterTaskAutoRetryAttempt... taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(List.of(taskAutoRetryAttempts));
        }
        @CustomType.Setter
        public Builder traceLevels(@Nullable List<SchemaParameterTraceLevel> traceLevels) {

            this.traceLevels = traceLevels;
            return this;
        }
        public Builder traceLevels(SchemaParameterTraceLevel... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }
        @CustomType.Setter
        public Builder userTaskManagedInitialWarehouseSizes(@Nullable List<SchemaParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes) {

            this.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            return this;
        }
        public Builder userTaskManagedInitialWarehouseSizes(SchemaParameterUserTaskManagedInitialWarehouseSize... userTaskManagedInitialWarehouseSizes) {
            return userTaskManagedInitialWarehouseSizes(List.of(userTaskManagedInitialWarehouseSizes));
        }
        @CustomType.Setter
        public Builder userTaskMinimumTriggerIntervalInSeconds(@Nullable List<SchemaParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds) {

            this.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            return this;
        }
        public Builder userTaskMinimumTriggerIntervalInSeconds(SchemaParameterUserTaskMinimumTriggerIntervalInSecond... userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(List.of(userTaskMinimumTriggerIntervalInSeconds));
        }
        @CustomType.Setter
        public Builder userTaskTimeoutMs(@Nullable List<SchemaParameterUserTaskTimeoutM> userTaskTimeoutMs) {

            this.userTaskTimeoutMs = userTaskTimeoutMs;
            return this;
        }
        public Builder userTaskTimeoutMs(SchemaParameterUserTaskTimeoutM... userTaskTimeoutMs) {
            return userTaskTimeoutMs(List.of(userTaskTimeoutMs));
        }
        public SchemaParameter build() {
            final var _resultValue = new SchemaParameter();
            _resultValue.catalogs = catalogs;
            _resultValue.dataRetentionTimeInDays = dataRetentionTimeInDays;
            _resultValue.defaultDdlCollations = defaultDdlCollations;
            _resultValue.enableConsoleOutputs = enableConsoleOutputs;
            _resultValue.externalVolumes = externalVolumes;
            _resultValue.logLevels = logLevels;
            _resultValue.maxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            _resultValue.pipeExecutionPauseds = pipeExecutionPauseds;
            _resultValue.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            _resultValue.replaceInvalidCharacters = replaceInvalidCharacters;
            _resultValue.storageSerializationPolicies = storageSerializationPolicies;
            _resultValue.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            _resultValue.taskAutoRetryAttempts = taskAutoRetryAttempts;
            _resultValue.traceLevels = traceLevels;
            _resultValue.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            _resultValue.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            _resultValue.userTaskTimeoutMs = userTaskTimeoutMs;
            return _resultValue;
        }
    }
}
