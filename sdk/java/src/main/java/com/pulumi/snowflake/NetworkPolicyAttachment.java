// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.NetworkPolicyAttachmentArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.NetworkPolicyAttachmentState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/networkPolicyAttachment:NetworkPolicyAttachment example attachment_policyname
 * ```
 * 
 */
@ResourceType(type="snowflake:index/networkPolicyAttachment:NetworkPolicyAttachment")
public class NetworkPolicyAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
     * 
     */
    @Export(name="networkPolicyName", refs={String.class}, tree="[0]")
    private Output<String> networkPolicyName;

    /**
     * @return Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
     * 
     */
    public Output<String> networkPolicyName() {
        return this.networkPolicyName;
    }
    /**
     * (Default: `false`) Specifies whether the network policy should be applied globally to your Snowflake account\n\n\n\n**Note:** The Snowflake user running `pulumi up` must be on an IP address allowed by the network policy to set that policy globally on the Snowflake account.\n\n\n\nAdditionally, a Snowflake account can only have one network policy set globally at any given time. This resource does not enforce one-policy-per-account, it is the user&#39;s responsibility to enforce this. If multiple network policy resources have `set_for_account: true`, the final policy set on the account will be non-deterministic.
     * 
     */
    @Export(name="setForAccount", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> setForAccount;

    /**
     * @return (Default: `false`) Specifies whether the network policy should be applied globally to your Snowflake account\n\n\n\n**Note:** The Snowflake user running `pulumi up` must be on an IP address allowed by the network policy to set that policy globally on the Snowflake account.\n\n\n\nAdditionally, a Snowflake account can only have one network policy set globally at any given time. This resource does not enforce one-policy-per-account, it is the user&#39;s responsibility to enforce this. If multiple network policy resources have `set_for_account: true`, the final policy set on the account will be non-deterministic.
     * 
     */
    public Output<Optional<Boolean>> setForAccount() {
        return Codegen.optional(this.setForAccount);
    }
    /**
     * Specifies which users the network policy should be attached to
     * 
     */
    @Export(name="users", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> users;

    /**
     * @return Specifies which users the network policy should be attached to
     * 
     */
    public Output<Optional<List<String>>> users() {
        return Codegen.optional(this.users);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkPolicyAttachment(java.lang.String name) {
        this(name, NetworkPolicyAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkPolicyAttachment(java.lang.String name, NetworkPolicyAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkPolicyAttachment(java.lang.String name, NetworkPolicyAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/networkPolicyAttachment:NetworkPolicyAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkPolicyAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkPolicyAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/networkPolicyAttachment:NetworkPolicyAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static NetworkPolicyAttachmentArgs makeArgs(NetworkPolicyAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkPolicyAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkPolicyAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkPolicyAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkPolicyAttachment(name, id, state, options);
    }
}
