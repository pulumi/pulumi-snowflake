// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ResourceMonitorArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ResourceMonitorState;
import com.pulumi.snowflake.outputs.ResourceMonitorShowOutput;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/resourceMonitor:ResourceMonitor example &#39;&#34;&lt;resource_monitor_name&gt;&#34;&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/resourceMonitor:ResourceMonitor")
public class ResourceMonitor extends com.pulumi.resources.CustomResource {
    /**
     * The number of credits allocated to the resource monitor per frequency interval. When total usage for all warehouses assigned to the monitor reaches this number for the current frequency interval, the resource monitor is considered to be at 100% of quota.
     * 
     */
    @Export(name="creditQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> creditQuota;

    /**
     * @return The number of credits allocated to the resource monitor per frequency interval. When total usage for all warehouses assigned to the monitor reaches this number for the current frequency interval, the resource monitor is considered to be at 100% of quota.
     * 
     */
    public Output<Optional<Integer>> creditQuota() {
        return Codegen.optional(this.creditQuota);
    }
    /**
     * The date and time when the resource monitor suspends the assigned warehouses.
     * 
     */
    @Export(name="endTimestamp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endTimestamp;

    /**
     * @return The date and time when the resource monitor suspends the assigned warehouses.
     * 
     */
    public Output<Optional<String>> endTimestamp() {
        return Codegen.optional(this.endTimestamp);
    }
    /**
     * The frequency interval at which the credit usage resets to 0. Valid values are (case-insensitive): `MONTHLY` | `DAILY` | `WEEKLY` | `YEARLY` | `NEVER`. If you set a `frequency` for a resource monitor, you must also set `startTimestamp`. If you specify `NEVER` for the frequency, the credit usage for the warehouse does not reset. After removing this field from the config, the previously set value will be preserved on the Snowflake side, not the default value. That&#39;s due to Snowflake limitation and the lack of unset functionality for this parameter.
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> frequency;

    /**
     * @return The frequency interval at which the credit usage resets to 0. Valid values are (case-insensitive): `MONTHLY` | `DAILY` | `WEEKLY` | `YEARLY` | `NEVER`. If you set a `frequency` for a resource monitor, you must also set `startTimestamp`. If you specify `NEVER` for the frequency, the credit usage for the warehouse does not reset. After removing this field from the config, the previously set value will be preserved on the Snowflake side, not the default value. That&#39;s due to Snowflake limitation and the lack of unset functionality for this parameter.
     * 
     */
    public Output<Optional<String>> frequency() {
        return Codegen.optional(this.frequency);
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * Identifier for the resource monitor; must be unique for your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier for the resource monitor; must be unique for your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a list of percentages of the credit quota. After reaching any of the values the users passed in the notifyUsers field will be notified (to receive the notification they should have notifications enabled). Values over 100 are supported.
     * 
     */
    @Export(name="notifyTriggers", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> notifyTriggers;

    /**
     * @return Specifies a list of percentages of the credit quota. After reaching any of the values the users passed in the notifyUsers field will be notified (to receive the notification they should have notifications enabled). Values over 100 are supported.
     * 
     */
    public Output<Optional<List<Integer>>> notifyTriggers() {
        return Codegen.optional(this.notifyTriggers);
    }
    /**
     * Specifies the list of users (their identifiers) to receive email notifications on resource monitors. For more information about this resource, see docs.
     * 
     */
    @Export(name="notifyUsers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> notifyUsers;

    /**
     * @return Specifies the list of users (their identifiers) to receive email notifications on resource monitors. For more information about this resource, see docs.
     * 
     */
    public Output<Optional<List<String>>> notifyUsers() {
        return Codegen.optional(this.notifyUsers);
    }
    /**
     * Outputs the result of `SHOW RESOURCE MONITORS` for the given resource monitor.
     * 
     */
    @Export(name="showOutputs", refs={List.class,ResourceMonitorShowOutput.class}, tree="[0,1]")
    private Output<List<ResourceMonitorShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW RESOURCE MONITORS` for the given resource monitor.
     * 
     */
    public Output<List<ResourceMonitorShowOutput>> showOutputs() {
        return this.showOutputs;
    }
    /**
     * The date and time when the resource monitor starts monitoring credit usage for the assigned warehouses. If you set a `startTimestamp` for a resource monitor, you must also set `frequency`.  After removing this field from the config, the previously set value will be preserved on the Snowflake side, not the default value. That&#39;s due to Snowflake limitation and the lack of unset functionality for this parameter.
     * 
     */
    @Export(name="startTimestamp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startTimestamp;

    /**
     * @return The date and time when the resource monitor starts monitoring credit usage for the assigned warehouses. If you set a `startTimestamp` for a resource monitor, you must also set `frequency`.  After removing this field from the config, the previously set value will be preserved on the Snowflake side, not the default value. That&#39;s due to Snowflake limitation and the lack of unset functionality for this parameter.
     * 
     */
    public Output<Optional<String>> startTimestamp() {
        return Codegen.optional(this.startTimestamp);
    }
    /**
     * Represents a numeric value specified as a percentage of the credit quota. Values over 100 are supported. After reaching this value, all assigned warehouses immediately cancel any currently running queries or statements. In addition, this action sends a notification to all users who have enabled notifications for themselves.
     * 
     */
    @Export(name="suspendImmediateTrigger", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> suspendImmediateTrigger;

    /**
     * @return Represents a numeric value specified as a percentage of the credit quota. Values over 100 are supported. After reaching this value, all assigned warehouses immediately cancel any currently running queries or statements. In addition, this action sends a notification to all users who have enabled notifications for themselves.
     * 
     */
    public Output<Optional<Integer>> suspendImmediateTrigger() {
        return Codegen.optional(this.suspendImmediateTrigger);
    }
    /**
     * Represents a numeric value specified as a percentage of the credit quota. Values over 100 are supported. After reaching this value, all assigned warehouses while allowing currently running queries to complete will be suspended. No new queries can be executed by the warehouses until the credit quota for the resource monitor is increased. In addition, this action sends a notification to all users who have enabled notifications for themselves.
     * 
     */
    @Export(name="suspendTrigger", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> suspendTrigger;

    /**
     * @return Represents a numeric value specified as a percentage of the credit quota. Values over 100 are supported. After reaching this value, all assigned warehouses while allowing currently running queries to complete will be suspended. No new queries can be executed by the warehouses until the credit quota for the resource monitor is increased. In addition, this action sends a notification to all users who have enabled notifications for themselves.
     * 
     */
    public Output<Optional<Integer>> suspendTrigger() {
        return Codegen.optional(this.suspendTrigger);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourceMonitor(java.lang.String name) {
        this(name, ResourceMonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourceMonitor(java.lang.String name, @Nullable ResourceMonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourceMonitor(java.lang.String name, @Nullable ResourceMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/resourceMonitor:ResourceMonitor", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ResourceMonitor(java.lang.String name, Output<java.lang.String> id, @Nullable ResourceMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/resourceMonitor:ResourceMonitor", name, state, makeResourceOptions(options, id), false);
    }

    private static ResourceMonitorArgs makeArgs(@Nullable ResourceMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ResourceMonitorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourceMonitor get(java.lang.String name, Output<java.lang.String> id, @Nullable ResourceMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResourceMonitor(name, id, state, options);
    }
}
