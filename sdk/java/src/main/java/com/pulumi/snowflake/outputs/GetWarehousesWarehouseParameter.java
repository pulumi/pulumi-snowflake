// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetWarehousesWarehouseParameterMaxConcurrencyLevel;
import com.pulumi.snowflake.outputs.GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond;
import com.pulumi.snowflake.outputs.GetWarehousesWarehouseParameterStatementTimeoutInSecond;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWarehousesWarehouseParameter {
    private List<GetWarehousesWarehouseParameterMaxConcurrencyLevel> maxConcurrencyLevels;
    private List<GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
    private List<GetWarehousesWarehouseParameterStatementTimeoutInSecond> statementTimeoutInSeconds;

    private GetWarehousesWarehouseParameter() {}
    public List<GetWarehousesWarehouseParameterMaxConcurrencyLevel> maxConcurrencyLevels() {
        return this.maxConcurrencyLevels;
    }
    public List<GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds() {
        return this.statementQueuedTimeoutInSeconds;
    }
    public List<GetWarehousesWarehouseParameterStatementTimeoutInSecond> statementTimeoutInSeconds() {
        return this.statementTimeoutInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWarehousesWarehouseParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetWarehousesWarehouseParameterMaxConcurrencyLevel> maxConcurrencyLevels;
        private List<GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
        private List<GetWarehousesWarehouseParameterStatementTimeoutInSecond> statementTimeoutInSeconds;
        public Builder() {}
        public Builder(GetWarehousesWarehouseParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxConcurrencyLevels = defaults.maxConcurrencyLevels;
    	      this.statementQueuedTimeoutInSeconds = defaults.statementQueuedTimeoutInSeconds;
    	      this.statementTimeoutInSeconds = defaults.statementTimeoutInSeconds;
        }

        @CustomType.Setter
        public Builder maxConcurrencyLevels(List<GetWarehousesWarehouseParameterMaxConcurrencyLevel> maxConcurrencyLevels) {
            if (maxConcurrencyLevels == null) {
              throw new MissingRequiredPropertyException("GetWarehousesWarehouseParameter", "maxConcurrencyLevels");
            }
            this.maxConcurrencyLevels = maxConcurrencyLevels;
            return this;
        }
        public Builder maxConcurrencyLevels(GetWarehousesWarehouseParameterMaxConcurrencyLevel... maxConcurrencyLevels) {
            return maxConcurrencyLevels(List.of(maxConcurrencyLevels));
        }
        @CustomType.Setter
        public Builder statementQueuedTimeoutInSeconds(List<GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds) {
            if (statementQueuedTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetWarehousesWarehouseParameter", "statementQueuedTimeoutInSeconds");
            }
            this.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            return this;
        }
        public Builder statementQueuedTimeoutInSeconds(GetWarehousesWarehouseParameterStatementQueuedTimeoutInSecond... statementQueuedTimeoutInSeconds) {
            return statementQueuedTimeoutInSeconds(List.of(statementQueuedTimeoutInSeconds));
        }
        @CustomType.Setter
        public Builder statementTimeoutInSeconds(List<GetWarehousesWarehouseParameterStatementTimeoutInSecond> statementTimeoutInSeconds) {
            if (statementTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetWarehousesWarehouseParameter", "statementTimeoutInSeconds");
            }
            this.statementTimeoutInSeconds = statementTimeoutInSeconds;
            return this;
        }
        public Builder statementTimeoutInSeconds(GetWarehousesWarehouseParameterStatementTimeoutInSecond... statementTimeoutInSeconds) {
            return statementTimeoutInSeconds(List.of(statementTimeoutInSeconds));
        }
        public GetWarehousesWarehouseParameter build() {
            final var _resultValue = new GetWarehousesWarehouseParameter();
            _resultValue.maxConcurrencyLevels = maxConcurrencyLevels;
            _resultValue.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            _resultValue.statementTimeoutInSeconds = statementTimeoutInSeconds;
            return _resultValue;
        }
    }
}
