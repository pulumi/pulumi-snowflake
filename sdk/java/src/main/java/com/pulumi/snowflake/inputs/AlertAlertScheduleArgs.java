// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.AlertAlertScheduleCronArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertAlertScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertAlertScheduleArgs Empty = new AlertAlertScheduleArgs();

    /**
     * Specifies the cron expression for the alert. The cron expression must be in the following format: &#34;minute hour day-of-month month day-of-week&#34;. The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     * 
     */
    @Import(name="cron")
    private @Nullable Output<AlertAlertScheduleCronArgs> cron;

    /**
     * @return Specifies the cron expression for the alert. The cron expression must be in the following format: &#34;minute hour day-of-month month day-of-week&#34;. The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
     * 
     */
    public Optional<Output<AlertAlertScheduleCronArgs>> cron() {
        return Optional.ofNullable(this.cron);
    }

    /**
     * Specifies the interval in minutes for the alert schedule. The interval must be greater than 0 and less than 1440 (24 hours).
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    /**
     * @return Specifies the interval in minutes for the alert schedule. The interval must be greater than 0 and less than 1440 (24 hours).
     * 
     */
    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    private AlertAlertScheduleArgs() {}

    private AlertAlertScheduleArgs(AlertAlertScheduleArgs $) {
        this.cron = $.cron;
        this.interval = $.interval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertAlertScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertAlertScheduleArgs $;

        public Builder() {
            $ = new AlertAlertScheduleArgs();
        }

        public Builder(AlertAlertScheduleArgs defaults) {
            $ = new AlertAlertScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cron Specifies the cron expression for the alert. The cron expression must be in the following format: &#34;minute hour day-of-month month day-of-week&#34;. The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
         * 
         * @return builder
         * 
         */
        public Builder cron(@Nullable Output<AlertAlertScheduleCronArgs> cron) {
            $.cron = cron;
            return this;
        }

        /**
         * @param cron Specifies the cron expression for the alert. The cron expression must be in the following format: &#34;minute hour day-of-month month day-of-week&#34;. The following values are supported: minute: 0-59 hour: 0-23 day-of-month: 1-31 month: 1-12 day-of-week: 0-6 (0 is Sunday)
         * 
         * @return builder
         * 
         */
        public Builder cron(AlertAlertScheduleCronArgs cron) {
            return cron(Output.of(cron));
        }

        /**
         * @param interval Specifies the interval in minutes for the alert schedule. The interval must be greater than 0 and less than 1440 (24 hours).
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval Specifies the interval in minutes for the alert schedule. The interval must be greater than 0 and less than 1440 (24 hours).
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public AlertAlertScheduleArgs build() {
            return $;
        }
    }

}
