// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGrantsGrantsOn extends com.pulumi.resources.InvokeArgs {

    public static final GetGrantsGrantsOn Empty = new GetGrantsGrantsOn();

    /**
     * Object hierarchy to list privileges on. The only valid value is: ACCOUNT. Setting this attribute lists all the account-level (i.e. global) privileges that have been granted to roles.
     * 
     */
    @Import(name="account")
    private @Nullable Boolean account;

    /**
     * @return Object hierarchy to list privileges on. The only valid value is: ACCOUNT. Setting this attribute lists all the account-level (i.e. global) privileges that have been granted to roles.
     * 
     */
    public Optional<Boolean> account() {
        return Optional.ofNullable(this.account);
    }

    /**
     * Name of object to list privileges on.
     * 
     */
    @Import(name="objectName")
    private @Nullable String objectName;

    /**
     * @return Name of object to list privileges on.
     * 
     */
    public Optional<String> objectName() {
        return Optional.ofNullable(this.objectName);
    }

    /**
     * Type of object to list privileges on.
     * 
     */
    @Import(name="objectType")
    private @Nullable String objectType;

    /**
     * @return Type of object to list privileges on.
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    private GetGrantsGrantsOn() {}

    private GetGrantsGrantsOn(GetGrantsGrantsOn $) {
        this.account = $.account;
        this.objectName = $.objectName;
        this.objectType = $.objectType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsGrantsOn defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsGrantsOn $;

        public Builder() {
            $ = new GetGrantsGrantsOn();
        }

        public Builder(GetGrantsGrantsOn defaults) {
            $ = new GetGrantsGrantsOn(Objects.requireNonNull(defaults));
        }

        /**
         * @param account Object hierarchy to list privileges on. The only valid value is: ACCOUNT. Setting this attribute lists all the account-level (i.e. global) privileges that have been granted to roles.
         * 
         * @return builder
         * 
         */
        public Builder account(@Nullable Boolean account) {
            $.account = account;
            return this;
        }

        /**
         * @param objectName Name of object to list privileges on.
         * 
         * @return builder
         * 
         */
        public Builder objectName(@Nullable String objectName) {
            $.objectName = objectName;
            return this;
        }

        /**
         * @param objectType Type of object to list privileges on.
         * 
         * @return builder
         * 
         */
        public Builder objectType(@Nullable String objectType) {
            $.objectType = objectType;
            return this;
        }

        public GetGrantsGrantsOn build() {
            return $;
        }
    }

}
