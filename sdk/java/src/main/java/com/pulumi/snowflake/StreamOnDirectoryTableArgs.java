// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamOnDirectoryTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamOnDirectoryTableArgs Empty = new StreamOnDirectoryTableArgs();

    /**
     * Specifies a comment for the stream.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Specifies a comment for the stream.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="copyGrants")
    private @Nullable Output<Boolean> copyGrants;

    public Optional<Output<Boolean>> copyGrants() {
        return Optional.ofNullable(this.copyGrants);
    }

    /**
     * The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Import(name="database", required=true)
    private Output<String> database;

    /**
     * @return The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> database() {
        return this.database;
    }

    /**
     * Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    /**
     * Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
     * 
     */
    @Import(name="stage", required=true)
    private Output<String> stage;

    /**
     * @return Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
     * 
     */
    public Output<String> stage() {
        return this.stage;
    }

    private StreamOnDirectoryTableArgs() {}

    private StreamOnDirectoryTableArgs(StreamOnDirectoryTableArgs $) {
        this.comment = $.comment;
        this.copyGrants = $.copyGrants;
        this.database = $.database;
        this.name = $.name;
        this.schema = $.schema;
        this.stage = $.stage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamOnDirectoryTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamOnDirectoryTableArgs $;

        public Builder() {
            $ = new StreamOnDirectoryTableArgs();
        }

        public Builder(StreamOnDirectoryTableArgs defaults) {
            $ = new StreamOnDirectoryTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Specifies a comment for the stream.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Specifies a comment for the stream.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder copyGrants(@Nullable Output<Boolean> copyGrants) {
            $.copyGrants = copyGrants;
            return this;
        }

        public Builder copyGrants(Boolean copyGrants) {
            return copyGrants(Output.of(copyGrants));
        }

        /**
         * @param database The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param name Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        /**
         * @param stage Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
         * 
         * @return builder
         * 
         */
        public Builder stage(Output<String> stage) {
            $.stage = stage;
            return this;
        }

        /**
         * @param stage Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
         * 
         * @return builder
         * 
         */
        public Builder stage(String stage) {
            return stage(Output.of(stage));
        }

        public StreamOnDirectoryTableArgs build() {
            if ($.database == null) {
                throw new MissingRequiredPropertyException("StreamOnDirectoryTableArgs", "database");
            }
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("StreamOnDirectoryTableArgs", "schema");
            }
            if ($.stage == null) {
                throw new MissingRequiredPropertyException("StreamOnDirectoryTableArgs", "stage");
            }
            return $;
        }
    }

}
