// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PrimaryConnectionShowOutput {
    private @Nullable String accountLocator;
    private @Nullable String accountName;
    private @Nullable String comment;
    private @Nullable String connectionUrl;
    private @Nullable String createdOn;
    private @Nullable List<String> failoverAllowedToAccounts;
    private @Nullable Boolean isPrimary;
    private @Nullable String name;
    private @Nullable String organizationName;
    private @Nullable String primary;
    private @Nullable String regionGroup;
    private @Nullable String snowflakeRegion;

    private PrimaryConnectionShowOutput() {}
    public Optional<String> accountLocator() {
        return Optional.ofNullable(this.accountLocator);
    }
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> connectionUrl() {
        return Optional.ofNullable(this.connectionUrl);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public List<String> failoverAllowedToAccounts() {
        return this.failoverAllowedToAccounts == null ? List.of() : this.failoverAllowedToAccounts;
    }
    public Optional<Boolean> isPrimary() {
        return Optional.ofNullable(this.isPrimary);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> organizationName() {
        return Optional.ofNullable(this.organizationName);
    }
    public Optional<String> primary() {
        return Optional.ofNullable(this.primary);
    }
    public Optional<String> regionGroup() {
        return Optional.ofNullable(this.regionGroup);
    }
    public Optional<String> snowflakeRegion() {
        return Optional.ofNullable(this.snowflakeRegion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrimaryConnectionShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountLocator;
        private @Nullable String accountName;
        private @Nullable String comment;
        private @Nullable String connectionUrl;
        private @Nullable String createdOn;
        private @Nullable List<String> failoverAllowedToAccounts;
        private @Nullable Boolean isPrimary;
        private @Nullable String name;
        private @Nullable String organizationName;
        private @Nullable String primary;
        private @Nullable String regionGroup;
        private @Nullable String snowflakeRegion;
        public Builder() {}
        public Builder(PrimaryConnectionShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountLocator = defaults.accountLocator;
    	      this.accountName = defaults.accountName;
    	      this.comment = defaults.comment;
    	      this.connectionUrl = defaults.connectionUrl;
    	      this.createdOn = defaults.createdOn;
    	      this.failoverAllowedToAccounts = defaults.failoverAllowedToAccounts;
    	      this.isPrimary = defaults.isPrimary;
    	      this.name = defaults.name;
    	      this.organizationName = defaults.organizationName;
    	      this.primary = defaults.primary;
    	      this.regionGroup = defaults.regionGroup;
    	      this.snowflakeRegion = defaults.snowflakeRegion;
        }

        @CustomType.Setter
        public Builder accountLocator(@Nullable String accountLocator) {

            this.accountLocator = accountLocator;
            return this;
        }
        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {

            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder connectionUrl(@Nullable String connectionUrl) {

            this.connectionUrl = connectionUrl;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder failoverAllowedToAccounts(@Nullable List<String> failoverAllowedToAccounts) {

            this.failoverAllowedToAccounts = failoverAllowedToAccounts;
            return this;
        }
        public Builder failoverAllowedToAccounts(String... failoverAllowedToAccounts) {
            return failoverAllowedToAccounts(List.of(failoverAllowedToAccounts));
        }
        @CustomType.Setter
        public Builder isPrimary(@Nullable Boolean isPrimary) {

            this.isPrimary = isPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationName(@Nullable String organizationName) {

            this.organizationName = organizationName;
            return this;
        }
        @CustomType.Setter
        public Builder primary(@Nullable String primary) {

            this.primary = primary;
            return this;
        }
        @CustomType.Setter
        public Builder regionGroup(@Nullable String regionGroup) {

            this.regionGroup = regionGroup;
            return this;
        }
        @CustomType.Setter
        public Builder snowflakeRegion(@Nullable String snowflakeRegion) {

            this.snowflakeRegion = snowflakeRegion;
            return this;
        }
        public PrimaryConnectionShowOutput build() {
            final var _resultValue = new PrimaryConnectionShowOutput();
            _resultValue.accountLocator = accountLocator;
            _resultValue.accountName = accountName;
            _resultValue.comment = comment;
            _resultValue.connectionUrl = connectionUrl;
            _resultValue.createdOn = createdOn;
            _resultValue.failoverAllowedToAccounts = failoverAllowedToAccounts;
            _resultValue.isPrimary = isPrimary;
            _resultValue.name = name;
            _resultValue.organizationName = organizationName;
            _resultValue.primary = primary;
            _resultValue.regionGroup = regionGroup;
            _resultValue.snowflakeRegion = snowflakeRegion;
            return _resultValue;
        }
    }
}
