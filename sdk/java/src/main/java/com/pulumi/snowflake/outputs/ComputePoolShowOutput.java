// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ComputePoolShowOutput {
    private @Nullable Integer activeNodes;
    private @Nullable String application;
    private @Nullable Boolean autoResume;
    private @Nullable Integer autoSuspendSecs;
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable Integer idleNodes;
    private @Nullable String instanceFamily;
    private @Nullable Boolean isExclusive;
    private @Nullable Integer maxNodes;
    private @Nullable Integer minNodes;
    private @Nullable String name;
    private @Nullable Integer numJobs;
    private @Nullable Integer numServices;
    private @Nullable String owner;
    private @Nullable String resumedOn;
    private @Nullable String state;
    private @Nullable Integer targetNodes;
    private @Nullable String updatedOn;

    private ComputePoolShowOutput() {}
    public Optional<Integer> activeNodes() {
        return Optional.ofNullable(this.activeNodes);
    }
    public Optional<String> application() {
        return Optional.ofNullable(this.application);
    }
    public Optional<Boolean> autoResume() {
        return Optional.ofNullable(this.autoResume);
    }
    public Optional<Integer> autoSuspendSecs() {
        return Optional.ofNullable(this.autoSuspendSecs);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<Integer> idleNodes() {
        return Optional.ofNullable(this.idleNodes);
    }
    public Optional<String> instanceFamily() {
        return Optional.ofNullable(this.instanceFamily);
    }
    public Optional<Boolean> isExclusive() {
        return Optional.ofNullable(this.isExclusive);
    }
    public Optional<Integer> maxNodes() {
        return Optional.ofNullable(this.maxNodes);
    }
    public Optional<Integer> minNodes() {
        return Optional.ofNullable(this.minNodes);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Integer> numJobs() {
        return Optional.ofNullable(this.numJobs);
    }
    public Optional<Integer> numServices() {
        return Optional.ofNullable(this.numServices);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<String> resumedOn() {
        return Optional.ofNullable(this.resumedOn);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<Integer> targetNodes() {
        return Optional.ofNullable(this.targetNodes);
    }
    public Optional<String> updatedOn() {
        return Optional.ofNullable(this.updatedOn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputePoolShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activeNodes;
        private @Nullable String application;
        private @Nullable Boolean autoResume;
        private @Nullable Integer autoSuspendSecs;
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable Integer idleNodes;
        private @Nullable String instanceFamily;
        private @Nullable Boolean isExclusive;
        private @Nullable Integer maxNodes;
        private @Nullable Integer minNodes;
        private @Nullable String name;
        private @Nullable Integer numJobs;
        private @Nullable Integer numServices;
        private @Nullable String owner;
        private @Nullable String resumedOn;
        private @Nullable String state;
        private @Nullable Integer targetNodes;
        private @Nullable String updatedOn;
        public Builder() {}
        public Builder(ComputePoolShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeNodes = defaults.activeNodes;
    	      this.application = defaults.application;
    	      this.autoResume = defaults.autoResume;
    	      this.autoSuspendSecs = defaults.autoSuspendSecs;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.idleNodes = defaults.idleNodes;
    	      this.instanceFamily = defaults.instanceFamily;
    	      this.isExclusive = defaults.isExclusive;
    	      this.maxNodes = defaults.maxNodes;
    	      this.minNodes = defaults.minNodes;
    	      this.name = defaults.name;
    	      this.numJobs = defaults.numJobs;
    	      this.numServices = defaults.numServices;
    	      this.owner = defaults.owner;
    	      this.resumedOn = defaults.resumedOn;
    	      this.state = defaults.state;
    	      this.targetNodes = defaults.targetNodes;
    	      this.updatedOn = defaults.updatedOn;
        }

        @CustomType.Setter
        public Builder activeNodes(@Nullable Integer activeNodes) {

            this.activeNodes = activeNodes;
            return this;
        }
        @CustomType.Setter
        public Builder application(@Nullable String application) {

            this.application = application;
            return this;
        }
        @CustomType.Setter
        public Builder autoResume(@Nullable Boolean autoResume) {

            this.autoResume = autoResume;
            return this;
        }
        @CustomType.Setter
        public Builder autoSuspendSecs(@Nullable Integer autoSuspendSecs) {

            this.autoSuspendSecs = autoSuspendSecs;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder idleNodes(@Nullable Integer idleNodes) {

            this.idleNodes = idleNodes;
            return this;
        }
        @CustomType.Setter
        public Builder instanceFamily(@Nullable String instanceFamily) {

            this.instanceFamily = instanceFamily;
            return this;
        }
        @CustomType.Setter
        public Builder isExclusive(@Nullable Boolean isExclusive) {

            this.isExclusive = isExclusive;
            return this;
        }
        @CustomType.Setter
        public Builder maxNodes(@Nullable Integer maxNodes) {

            this.maxNodes = maxNodes;
            return this;
        }
        @CustomType.Setter
        public Builder minNodes(@Nullable Integer minNodes) {

            this.minNodes = minNodes;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder numJobs(@Nullable Integer numJobs) {

            this.numJobs = numJobs;
            return this;
        }
        @CustomType.Setter
        public Builder numServices(@Nullable Integer numServices) {

            this.numServices = numServices;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder resumedOn(@Nullable String resumedOn) {

            this.resumedOn = resumedOn;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetNodes(@Nullable Integer targetNodes) {

            this.targetNodes = targetNodes;
            return this;
        }
        @CustomType.Setter
        public Builder updatedOn(@Nullable String updatedOn) {

            this.updatedOn = updatedOn;
            return this;
        }
        public ComputePoolShowOutput build() {
            final var _resultValue = new ComputePoolShowOutput();
            _resultValue.activeNodes = activeNodes;
            _resultValue.application = application;
            _resultValue.autoResume = autoResume;
            _resultValue.autoSuspendSecs = autoSuspendSecs;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.idleNodes = idleNodes;
            _resultValue.instanceFamily = instanceFamily;
            _resultValue.isExclusive = isExclusive;
            _resultValue.maxNodes = maxNodes;
            _resultValue.minNodes = minNodes;
            _resultValue.name = name;
            _resultValue.numJobs = numJobs;
            _resultValue.numServices = numServices;
            _resultValue.owner = owner;
            _resultValue.resumedOn = resumedOn;
            _resultValue.state = state;
            _resultValue.targetNodes = targetNodes;
            _resultValue.updatedOn = updatedOn;
            return _resultValue;
        }
    }
}
