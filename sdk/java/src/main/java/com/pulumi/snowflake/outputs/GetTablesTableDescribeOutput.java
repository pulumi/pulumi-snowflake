// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTablesTableDescribeOutput {
    private String check;
    private String collation;
    private String comment;
    private String default_;
    private String expression;
    private Boolean isNullable;
    private Boolean isPrimary;
    private Boolean isUnique;
    private String kind;
    private String name;
    private String policyName;
    private String schemaEvolutionRecord;
    private String type;

    private GetTablesTableDescribeOutput() {}
    public String check() {
        return this.check;
    }
    public String collation() {
        return this.collation;
    }
    public String comment() {
        return this.comment;
    }
    public String default_() {
        return this.default_;
    }
    public String expression() {
        return this.expression;
    }
    public Boolean isNullable() {
        return this.isNullable;
    }
    public Boolean isPrimary() {
        return this.isPrimary;
    }
    public Boolean isUnique() {
        return this.isUnique;
    }
    public String kind() {
        return this.kind;
    }
    public String name() {
        return this.name;
    }
    public String policyName() {
        return this.policyName;
    }
    public String schemaEvolutionRecord() {
        return this.schemaEvolutionRecord;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTablesTableDescribeOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String check;
        private String collation;
        private String comment;
        private String default_;
        private String expression;
        private Boolean isNullable;
        private Boolean isPrimary;
        private Boolean isUnique;
        private String kind;
        private String name;
        private String policyName;
        private String schemaEvolutionRecord;
        private String type;
        public Builder() {}
        public Builder(GetTablesTableDescribeOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.check = defaults.check;
    	      this.collation = defaults.collation;
    	      this.comment = defaults.comment;
    	      this.default_ = defaults.default_;
    	      this.expression = defaults.expression;
    	      this.isNullable = defaults.isNullable;
    	      this.isPrimary = defaults.isPrimary;
    	      this.isUnique = defaults.isUnique;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.policyName = defaults.policyName;
    	      this.schemaEvolutionRecord = defaults.schemaEvolutionRecord;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder check(String check) {
            if (check == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "check");
            }
            this.check = check;
            return this;
        }
        @CustomType.Setter
        public Builder collation(String collation) {
            if (collation == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "collation");
            }
            this.collation = collation;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter("default")
        public Builder default_(String default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            if (expression == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "expression");
            }
            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder isNullable(Boolean isNullable) {
            if (isNullable == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "isNullable");
            }
            this.isNullable = isNullable;
            return this;
        }
        @CustomType.Setter
        public Builder isPrimary(Boolean isPrimary) {
            if (isPrimary == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "isPrimary");
            }
            this.isPrimary = isPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder isUnique(Boolean isUnique) {
            if (isUnique == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "isUnique");
            }
            this.isUnique = isUnique;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(String policyName) {
            if (policyName == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "policyName");
            }
            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder schemaEvolutionRecord(String schemaEvolutionRecord) {
            if (schemaEvolutionRecord == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "schemaEvolutionRecord");
            }
            this.schemaEvolutionRecord = schemaEvolutionRecord;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetTablesTableDescribeOutput", "type");
            }
            this.type = type;
            return this;
        }
        public GetTablesTableDescribeOutput build() {
            final var _resultValue = new GetTablesTableDescribeOutput();
            _resultValue.check = check;
            _resultValue.collation = collation;
            _resultValue.comment = comment;
            _resultValue.default_ = default_;
            _resultValue.expression = expression;
            _resultValue.isNullable = isNullable;
            _resultValue.isPrimary = isPrimary;
            _resultValue.isUnique = isUnique;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.policyName = policyName;
            _resultValue.schemaEvolutionRecord = schemaEvolutionRecord;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
