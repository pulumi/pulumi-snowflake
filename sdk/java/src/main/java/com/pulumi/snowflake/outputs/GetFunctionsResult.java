// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.GetFunctionsFunction;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFunctionsResult {
    /**
     * @return The database from which to return the schemas from.
     * 
     */
    private final String database;
    /**
     * @return The functions in the schema
     * 
     */
    private final List<GetFunctionsFunction> functions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The schema from which to return the functions from.
     * 
     */
    private final String schema;

    @CustomType.Constructor
    private GetFunctionsResult(
        @CustomType.Parameter("database") String database,
        @CustomType.Parameter("functions") List<GetFunctionsFunction> functions,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("schema") String schema) {
        this.database = database;
        this.functions = functions;
        this.id = id;
        this.schema = schema;
    }

    /**
     * @return The database from which to return the schemas from.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return The functions in the schema
     * 
     */
    public List<GetFunctionsFunction> functions() {
        return this.functions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The schema from which to return the functions from.
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String database;
        private List<GetFunctionsFunction> functions;
        private String id;
        private String schema;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFunctionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.database = defaults.database;
    	      this.functions = defaults.functions;
    	      this.id = defaults.id;
    	      this.schema = defaults.schema;
        }

        public Builder database(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }
        public Builder functions(List<GetFunctionsFunction> functions) {
            this.functions = Objects.requireNonNull(functions);
            return this;
        }
        public Builder functions(GetFunctionsFunction... functions) {
            return functions(List.of(functions));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder schema(String schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }        public GetFunctionsResult build() {
            return new GetFunctionsResult(database, functions, id, schema);
        }
    }
}
