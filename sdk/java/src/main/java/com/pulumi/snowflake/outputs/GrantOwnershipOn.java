// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.GrantOwnershipOnAll;
import com.pulumi.snowflake.outputs.GrantOwnershipOnFuture;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrantOwnershipOn {
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    private @Nullable GrantOwnershipOnAll all;
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    private @Nullable GrantOwnershipOnFuture future;
    /**
     * @return Specifies the identifier for the object on which you are transferring ownership.
     * 
     */
    private @Nullable String objectName;
    /**
     * @return Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
     * 
     */
    private @Nullable String objectType;

    private GrantOwnershipOn() {}
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    public Optional<GrantOwnershipOnAll> all() {
        return Optional.ofNullable(this.all);
    }
    /**
     * @return Configures the privilege to be granted on all objects in either a database or schema.
     * 
     */
    public Optional<GrantOwnershipOnFuture> future() {
        return Optional.ofNullable(this.future);
    }
    /**
     * @return Specifies the identifier for the object on which you are transferring ownership.
     * 
     */
    public Optional<String> objectName() {
        return Optional.ofNullable(this.objectName);
    }
    /**
     * @return Specifies the type of object on which you are transferring ownership. Available values are: AGGREGATION POLICY | ALERT | AUTHENTICATION POLICY | COMPUTE POOL | DATA METRIC FUNCTION | DATABASE | DATABASE ROLE | DYNAMIC TABLE | EVENT TABLE | EXTERNAL TABLE | EXTERNAL VOLUME | FAILOVER GROUP | FILE FORMAT | FUNCTION | GIT REPOSITORY | HYBRID TABLE | ICEBERG TABLE | IMAGE REPOSITORY | INTEGRATION | MATERIALIZED VIEW | NETWORK POLICY | NETWORK RULE | PACKAGES POLICY | PIPE | PROCEDURE | MASKING POLICY | PASSWORD POLICY | PROJECTION POLICY | REPLICATION GROUP | RESOURCE MONITOR | ROLE | ROW ACCESS POLICY | SCHEMA | SESSION POLICY | SECRET | SEQUENCE | STAGE | STREAM | TABLE | TAG | TASK | USER | VIEW | WAREHOUSE
     * 
     */
    public Optional<String> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrantOwnershipOn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GrantOwnershipOnAll all;
        private @Nullable GrantOwnershipOnFuture future;
        private @Nullable String objectName;
        private @Nullable String objectType;
        public Builder() {}
        public Builder(GrantOwnershipOn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.future = defaults.future;
    	      this.objectName = defaults.objectName;
    	      this.objectType = defaults.objectType;
        }

        @CustomType.Setter
        public Builder all(@Nullable GrantOwnershipOnAll all) {

            this.all = all;
            return this;
        }
        @CustomType.Setter
        public Builder future(@Nullable GrantOwnershipOnFuture future) {

            this.future = future;
            return this;
        }
        @CustomType.Setter
        public Builder objectName(@Nullable String objectName) {

            this.objectName = objectName;
            return this;
        }
        @CustomType.Setter
        public Builder objectType(@Nullable String objectType) {

            this.objectType = objectType;
            return this;
        }
        public GrantOwnershipOn build() {
            final var _resultValue = new GrantOwnershipOn();
            _resultValue.all = all;
            _resultValue.future = future;
            _resultValue.objectName = objectName;
            _resultValue.objectType = objectType;
            return _resultValue;
        }
    }
}
