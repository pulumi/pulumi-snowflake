// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WarehouseShowOutput {
    private @Nullable Boolean autoResume;
    private @Nullable Integer autoSuspend;
    private @Nullable Double available;
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable Boolean enableQueryAcceleration;
    private @Nullable Boolean isCurrent;
    private @Nullable Boolean isDefault;
    private @Nullable Integer maxClusterCount;
    private @Nullable Integer minClusterCount;
    private @Nullable String name;
    private @Nullable Double other;
    private @Nullable String owner;
    private @Nullable String ownerRoleType;
    private @Nullable Double provisioning;
    private @Nullable Integer queryAccelerationMaxScaleFactor;
    private @Nullable Integer queued;
    private @Nullable Double quiescing;
    private @Nullable String resourceMonitor;
    private @Nullable String resumedOn;
    private @Nullable Integer running;
    private @Nullable String scalingPolicy;
    private @Nullable String size;
    private @Nullable Integer startedClusters;
    private @Nullable String state;
    private @Nullable String type;
    private @Nullable String updatedOn;

    private WarehouseShowOutput() {}
    public Optional<Boolean> autoResume() {
        return Optional.ofNullable(this.autoResume);
    }
    public Optional<Integer> autoSuspend() {
        return Optional.ofNullable(this.autoSuspend);
    }
    public Optional<Double> available() {
        return Optional.ofNullable(this.available);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<Boolean> enableQueryAcceleration() {
        return Optional.ofNullable(this.enableQueryAcceleration);
    }
    public Optional<Boolean> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    public Optional<Integer> maxClusterCount() {
        return Optional.ofNullable(this.maxClusterCount);
    }
    public Optional<Integer> minClusterCount() {
        return Optional.ofNullable(this.minClusterCount);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<Double> other() {
        return Optional.ofNullable(this.other);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<String> ownerRoleType() {
        return Optional.ofNullable(this.ownerRoleType);
    }
    public Optional<Double> provisioning() {
        return Optional.ofNullable(this.provisioning);
    }
    public Optional<Integer> queryAccelerationMaxScaleFactor() {
        return Optional.ofNullable(this.queryAccelerationMaxScaleFactor);
    }
    public Optional<Integer> queued() {
        return Optional.ofNullable(this.queued);
    }
    public Optional<Double> quiescing() {
        return Optional.ofNullable(this.quiescing);
    }
    public Optional<String> resourceMonitor() {
        return Optional.ofNullable(this.resourceMonitor);
    }
    public Optional<String> resumedOn() {
        return Optional.ofNullable(this.resumedOn);
    }
    public Optional<Integer> running() {
        return Optional.ofNullable(this.running);
    }
    public Optional<String> scalingPolicy() {
        return Optional.ofNullable(this.scalingPolicy);
    }
    public Optional<String> size() {
        return Optional.ofNullable(this.size);
    }
    public Optional<Integer> startedClusters() {
        return Optional.ofNullable(this.startedClusters);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<String> updatedOn() {
        return Optional.ofNullable(this.updatedOn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WarehouseShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoResume;
        private @Nullable Integer autoSuspend;
        private @Nullable Double available;
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable Boolean enableQueryAcceleration;
        private @Nullable Boolean isCurrent;
        private @Nullable Boolean isDefault;
        private @Nullable Integer maxClusterCount;
        private @Nullable Integer minClusterCount;
        private @Nullable String name;
        private @Nullable Double other;
        private @Nullable String owner;
        private @Nullable String ownerRoleType;
        private @Nullable Double provisioning;
        private @Nullable Integer queryAccelerationMaxScaleFactor;
        private @Nullable Integer queued;
        private @Nullable Double quiescing;
        private @Nullable String resourceMonitor;
        private @Nullable String resumedOn;
        private @Nullable Integer running;
        private @Nullable String scalingPolicy;
        private @Nullable String size;
        private @Nullable Integer startedClusters;
        private @Nullable String state;
        private @Nullable String type;
        private @Nullable String updatedOn;
        public Builder() {}
        public Builder(WarehouseShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoResume = defaults.autoResume;
    	      this.autoSuspend = defaults.autoSuspend;
    	      this.available = defaults.available;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.enableQueryAcceleration = defaults.enableQueryAcceleration;
    	      this.isCurrent = defaults.isCurrent;
    	      this.isDefault = defaults.isDefault;
    	      this.maxClusterCount = defaults.maxClusterCount;
    	      this.minClusterCount = defaults.minClusterCount;
    	      this.name = defaults.name;
    	      this.other = defaults.other;
    	      this.owner = defaults.owner;
    	      this.ownerRoleType = defaults.ownerRoleType;
    	      this.provisioning = defaults.provisioning;
    	      this.queryAccelerationMaxScaleFactor = defaults.queryAccelerationMaxScaleFactor;
    	      this.queued = defaults.queued;
    	      this.quiescing = defaults.quiescing;
    	      this.resourceMonitor = defaults.resourceMonitor;
    	      this.resumedOn = defaults.resumedOn;
    	      this.running = defaults.running;
    	      this.scalingPolicy = defaults.scalingPolicy;
    	      this.size = defaults.size;
    	      this.startedClusters = defaults.startedClusters;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.updatedOn = defaults.updatedOn;
        }

        @CustomType.Setter
        public Builder autoResume(@Nullable Boolean autoResume) {

            this.autoResume = autoResume;
            return this;
        }
        @CustomType.Setter
        public Builder autoSuspend(@Nullable Integer autoSuspend) {

            this.autoSuspend = autoSuspend;
            return this;
        }
        @CustomType.Setter
        public Builder available(@Nullable Double available) {

            this.available = available;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder enableQueryAcceleration(@Nullable Boolean enableQueryAcceleration) {

            this.enableQueryAcceleration = enableQueryAcceleration;
            return this;
        }
        @CustomType.Setter
        public Builder isCurrent(@Nullable Boolean isCurrent) {

            this.isCurrent = isCurrent;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {

            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder maxClusterCount(@Nullable Integer maxClusterCount) {

            this.maxClusterCount = maxClusterCount;
            return this;
        }
        @CustomType.Setter
        public Builder minClusterCount(@Nullable Integer minClusterCount) {

            this.minClusterCount = minClusterCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder other(@Nullable Double other) {

            this.other = other;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder ownerRoleType(@Nullable String ownerRoleType) {

            this.ownerRoleType = ownerRoleType;
            return this;
        }
        @CustomType.Setter
        public Builder provisioning(@Nullable Double provisioning) {

            this.provisioning = provisioning;
            return this;
        }
        @CustomType.Setter
        public Builder queryAccelerationMaxScaleFactor(@Nullable Integer queryAccelerationMaxScaleFactor) {

            this.queryAccelerationMaxScaleFactor = queryAccelerationMaxScaleFactor;
            return this;
        }
        @CustomType.Setter
        public Builder queued(@Nullable Integer queued) {

            this.queued = queued;
            return this;
        }
        @CustomType.Setter
        public Builder quiescing(@Nullable Double quiescing) {

            this.quiescing = quiescing;
            return this;
        }
        @CustomType.Setter
        public Builder resourceMonitor(@Nullable String resourceMonitor) {

            this.resourceMonitor = resourceMonitor;
            return this;
        }
        @CustomType.Setter
        public Builder resumedOn(@Nullable String resumedOn) {

            this.resumedOn = resumedOn;
            return this;
        }
        @CustomType.Setter
        public Builder running(@Nullable Integer running) {

            this.running = running;
            return this;
        }
        @CustomType.Setter
        public Builder scalingPolicy(@Nullable String scalingPolicy) {

            this.scalingPolicy = scalingPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable String size) {

            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder startedClusters(@Nullable Integer startedClusters) {

            this.startedClusters = startedClusters;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updatedOn(@Nullable String updatedOn) {

            this.updatedOn = updatedOn;
            return this;
        }
        public WarehouseShowOutput build() {
            final var _resultValue = new WarehouseShowOutput();
            _resultValue.autoResume = autoResume;
            _resultValue.autoSuspend = autoSuspend;
            _resultValue.available = available;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.enableQueryAcceleration = enableQueryAcceleration;
            _resultValue.isCurrent = isCurrent;
            _resultValue.isDefault = isDefault;
            _resultValue.maxClusterCount = maxClusterCount;
            _resultValue.minClusterCount = minClusterCount;
            _resultValue.name = name;
            _resultValue.other = other;
            _resultValue.owner = owner;
            _resultValue.ownerRoleType = ownerRoleType;
            _resultValue.provisioning = provisioning;
            _resultValue.queryAccelerationMaxScaleFactor = queryAccelerationMaxScaleFactor;
            _resultValue.queued = queued;
            _resultValue.quiescing = quiescing;
            _resultValue.resourceMonitor = resourceMonitor;
            _resultValue.resumedOn = resumedOn;
            _resultValue.running = running;
            _resultValue.scalingPolicy = scalingPolicy;
            _resultValue.size = size;
            _resultValue.startedClusters = startedClusters;
            _resultValue.state = state;
            _resultValue.type = type;
            _resultValue.updatedOn = updatedOn;
            return _resultValue;
        }
    }
}
