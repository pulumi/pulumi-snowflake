// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageRepositoryShowOutput {
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable String databaseName;
    private @Nullable String name;
    private @Nullable String owner;
    private @Nullable String ownerRoleType;
    private @Nullable String privatelinkRepositoryUrl;
    private @Nullable String repositoryUrl;
    private @Nullable String schemaName;

    private ImageRepositoryShowOutput() {}
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<String> ownerRoleType() {
        return Optional.ofNullable(this.ownerRoleType);
    }
    public Optional<String> privatelinkRepositoryUrl() {
        return Optional.ofNullable(this.privatelinkRepositoryUrl);
    }
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageRepositoryShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable String databaseName;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable String ownerRoleType;
        private @Nullable String privatelinkRepositoryUrl;
        private @Nullable String repositoryUrl;
        private @Nullable String schemaName;
        public Builder() {}
        public Builder(ImageRepositoryShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.databaseName = defaults.databaseName;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.ownerRoleType = defaults.ownerRoleType;
    	      this.privatelinkRepositoryUrl = defaults.privatelinkRepositoryUrl;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.schemaName = defaults.schemaName;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {

            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder ownerRoleType(@Nullable String ownerRoleType) {

            this.ownerRoleType = ownerRoleType;
            return this;
        }
        @CustomType.Setter
        public Builder privatelinkRepositoryUrl(@Nullable String privatelinkRepositoryUrl) {

            this.privatelinkRepositoryUrl = privatelinkRepositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {

            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {

            this.schemaName = schemaName;
            return this;
        }
        public ImageRepositoryShowOutput build() {
            final var _resultValue = new ImageRepositoryShowOutput();
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.databaseName = databaseName;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.ownerRoleType = ownerRoleType;
            _resultValue.privatelinkRepositoryUrl = privatelinkRepositoryUrl;
            _resultValue.repositoryUrl = repositoryUrl;
            _resultValue.schemaName = schemaName;
            return _resultValue;
        }
    }
}
