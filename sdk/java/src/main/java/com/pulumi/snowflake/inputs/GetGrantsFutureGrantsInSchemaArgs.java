// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGrantsFutureGrantsInSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGrantsFutureGrantsInSchemaArgs Empty = new GetGrantsFutureGrantsInSchemaArgs();

    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    @Import(name="schemaName", required=true)
    private Output<String> schemaName;

    public Output<String> schemaName() {
        return this.schemaName;
    }

    private GetGrantsFutureGrantsInSchemaArgs() {}

    private GetGrantsFutureGrantsInSchemaArgs(GetGrantsFutureGrantsInSchemaArgs $) {
        this.databaseName = $.databaseName;
        this.schemaName = $.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsFutureGrantsInSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsFutureGrantsInSchemaArgs $;

        public Builder() {
            $ = new GetGrantsFutureGrantsInSchemaArgs();
        }

        public Builder(GetGrantsFutureGrantsInSchemaArgs defaults) {
            $ = new GetGrantsFutureGrantsInSchemaArgs(Objects.requireNonNull(defaults));
        }

        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        public Builder schemaName(Output<String> schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        public Builder schemaName(String schemaName) {
            return schemaName(Output.of(schemaName));
        }

        public GetGrantsFutureGrantsInSchemaArgs build() {
            $.schemaName = Objects.requireNonNull($.schemaName, "expected parameter 'schemaName' to be non-null");
            return $;
        }
    }

}
