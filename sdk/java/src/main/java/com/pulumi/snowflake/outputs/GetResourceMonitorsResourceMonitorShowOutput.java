// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetResourceMonitorsResourceMonitorShowOutput {
    private String comment;
    private String createdOn;
    private Double creditQuota;
    private String endTime;
    private String frequency;
    private String level;
    private String name;
    private String owner;
    private Double remainingCredits;
    private String startTime;
    private Integer suspendAt;
    private Integer suspendImmediateAt;
    private Double usedCredits;

    private GetResourceMonitorsResourceMonitorShowOutput() {}
    public String comment() {
        return this.comment;
    }
    public String createdOn() {
        return this.createdOn;
    }
    public Double creditQuota() {
        return this.creditQuota;
    }
    public String endTime() {
        return this.endTime;
    }
    public String frequency() {
        return this.frequency;
    }
    public String level() {
        return this.level;
    }
    public String name() {
        return this.name;
    }
    public String owner() {
        return this.owner;
    }
    public Double remainingCredits() {
        return this.remainingCredits;
    }
    public String startTime() {
        return this.startTime;
    }
    public Integer suspendAt() {
        return this.suspendAt;
    }
    public Integer suspendImmediateAt() {
        return this.suspendImmediateAt;
    }
    public Double usedCredits() {
        return this.usedCredits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceMonitorsResourceMonitorShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String createdOn;
        private Double creditQuota;
        private String endTime;
        private String frequency;
        private String level;
        private String name;
        private String owner;
        private Double remainingCredits;
        private String startTime;
        private Integer suspendAt;
        private Integer suspendImmediateAt;
        private Double usedCredits;
        public Builder() {}
        public Builder(GetResourceMonitorsResourceMonitorShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.creditQuota = defaults.creditQuota;
    	      this.endTime = defaults.endTime;
    	      this.frequency = defaults.frequency;
    	      this.level = defaults.level;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.remainingCredits = defaults.remainingCredits;
    	      this.startTime = defaults.startTime;
    	      this.suspendAt = defaults.suspendAt;
    	      this.suspendImmediateAt = defaults.suspendImmediateAt;
    	      this.usedCredits = defaults.usedCredits;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder creditQuota(Double creditQuota) {
            if (creditQuota == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "creditQuota");
            }
            this.creditQuota = creditQuota;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            if (endTime == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "endTime");
            }
            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder frequency(String frequency) {
            if (frequency == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "frequency");
            }
            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder level(String level) {
            if (level == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "level");
            }
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder remainingCredits(Double remainingCredits) {
            if (remainingCredits == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "remainingCredits");
            }
            this.remainingCredits = remainingCredits;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder suspendAt(Integer suspendAt) {
            if (suspendAt == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "suspendAt");
            }
            this.suspendAt = suspendAt;
            return this;
        }
        @CustomType.Setter
        public Builder suspendImmediateAt(Integer suspendImmediateAt) {
            if (suspendImmediateAt == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "suspendImmediateAt");
            }
            this.suspendImmediateAt = suspendImmediateAt;
            return this;
        }
        @CustomType.Setter
        public Builder usedCredits(Double usedCredits) {
            if (usedCredits == null) {
              throw new MissingRequiredPropertyException("GetResourceMonitorsResourceMonitorShowOutput", "usedCredits");
            }
            this.usedCredits = usedCredits;
            return this;
        }
        public GetResourceMonitorsResourceMonitorShowOutput build() {
            final var _resultValue = new GetResourceMonitorsResourceMonitorShowOutput();
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.creditQuota = creditQuota;
            _resultValue.endTime = endTime;
            _resultValue.frequency = frequency;
            _resultValue.level = level;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.remainingCredits = remainingCredits;
            _resultValue.startTime = startTime;
            _resultValue.suspendAt = suspendAt;
            _resultValue.suspendImmediateAt = suspendImmediateAt;
            _resultValue.usedCredits = usedCredits;
            return _resultValue;
        }
    }
}
