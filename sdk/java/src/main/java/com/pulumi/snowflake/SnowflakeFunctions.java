// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.GetAccountsArgs;
import com.pulumi.snowflake.inputs.GetAccountsPlainArgs;
import com.pulumi.snowflake.inputs.GetAlertsArgs;
import com.pulumi.snowflake.inputs.GetAlertsPlainArgs;
import com.pulumi.snowflake.inputs.GetDatabaseArgs;
import com.pulumi.snowflake.inputs.GetDatabasePlainArgs;
import com.pulumi.snowflake.inputs.GetDatabaseRolesArgs;
import com.pulumi.snowflake.inputs.GetDatabaseRolesPlainArgs;
import com.pulumi.snowflake.inputs.GetDatabasesArgs;
import com.pulumi.snowflake.inputs.GetDatabasesPlainArgs;
import com.pulumi.snowflake.inputs.GetDynamicTablesArgs;
import com.pulumi.snowflake.inputs.GetDynamicTablesPlainArgs;
import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
import com.pulumi.snowflake.inputs.GetExternalFunctionsPlainArgs;
import com.pulumi.snowflake.inputs.GetExternalTablesArgs;
import com.pulumi.snowflake.inputs.GetExternalTablesPlainArgs;
import com.pulumi.snowflake.inputs.GetFailoverGroupsArgs;
import com.pulumi.snowflake.inputs.GetFailoverGroupsPlainArgs;
import com.pulumi.snowflake.inputs.GetFileFormatsArgs;
import com.pulumi.snowflake.inputs.GetFileFormatsPlainArgs;
import com.pulumi.snowflake.inputs.GetFunctionsArgs;
import com.pulumi.snowflake.inputs.GetFunctionsPlainArgs;
import com.pulumi.snowflake.inputs.GetGrantsArgs;
import com.pulumi.snowflake.inputs.GetGrantsPlainArgs;
import com.pulumi.snowflake.inputs.GetMaskingPoliciesArgs;
import com.pulumi.snowflake.inputs.GetMaskingPoliciesPlainArgs;
import com.pulumi.snowflake.inputs.GetMaterializedViewsArgs;
import com.pulumi.snowflake.inputs.GetMaterializedViewsPlainArgs;
import com.pulumi.snowflake.inputs.GetParametersArgs;
import com.pulumi.snowflake.inputs.GetParametersPlainArgs;
import com.pulumi.snowflake.inputs.GetPipesArgs;
import com.pulumi.snowflake.inputs.GetPipesPlainArgs;
import com.pulumi.snowflake.inputs.GetProceduresArgs;
import com.pulumi.snowflake.inputs.GetProceduresPlainArgs;
import com.pulumi.snowflake.inputs.GetRoleArgs;
import com.pulumi.snowflake.inputs.GetRolePlainArgs;
import com.pulumi.snowflake.inputs.GetRolesArgs;
import com.pulumi.snowflake.inputs.GetRolesPlainArgs;
import com.pulumi.snowflake.inputs.GetRowAccessPoliciesArgs;
import com.pulumi.snowflake.inputs.GetRowAccessPoliciesPlainArgs;
import com.pulumi.snowflake.inputs.GetSchemasArgs;
import com.pulumi.snowflake.inputs.GetSchemasPlainArgs;
import com.pulumi.snowflake.inputs.GetSequencesArgs;
import com.pulumi.snowflake.inputs.GetSequencesPlainArgs;
import com.pulumi.snowflake.inputs.GetSharesArgs;
import com.pulumi.snowflake.inputs.GetSharesPlainArgs;
import com.pulumi.snowflake.inputs.GetStagesArgs;
import com.pulumi.snowflake.inputs.GetStagesPlainArgs;
import com.pulumi.snowflake.inputs.GetStreamsArgs;
import com.pulumi.snowflake.inputs.GetStreamsPlainArgs;
import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenArgs;
import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenPlainArgs;
import com.pulumi.snowflake.inputs.GetSystemGetAwsSnsIamPolicyArgs;
import com.pulumi.snowflake.inputs.GetSystemGetAwsSnsIamPolicyPlainArgs;
import com.pulumi.snowflake.inputs.GetTablesArgs;
import com.pulumi.snowflake.inputs.GetTablesPlainArgs;
import com.pulumi.snowflake.inputs.GetTasksArgs;
import com.pulumi.snowflake.inputs.GetTasksPlainArgs;
import com.pulumi.snowflake.inputs.GetUsersArgs;
import com.pulumi.snowflake.inputs.GetUsersPlainArgs;
import com.pulumi.snowflake.inputs.GetViewsArgs;
import com.pulumi.snowflake.inputs.GetViewsPlainArgs;
import com.pulumi.snowflake.outputs.GetAccountsResult;
import com.pulumi.snowflake.outputs.GetAlertsResult;
import com.pulumi.snowflake.outputs.GetCurrentAccountResult;
import com.pulumi.snowflake.outputs.GetCurrentRoleResult;
import com.pulumi.snowflake.outputs.GetDatabaseResult;
import com.pulumi.snowflake.outputs.GetDatabaseRolesResult;
import com.pulumi.snowflake.outputs.GetDatabasesResult;
import com.pulumi.snowflake.outputs.GetDynamicTablesResult;
import com.pulumi.snowflake.outputs.GetExternalFunctionsResult;
import com.pulumi.snowflake.outputs.GetExternalTablesResult;
import com.pulumi.snowflake.outputs.GetFailoverGroupsResult;
import com.pulumi.snowflake.outputs.GetFileFormatsResult;
import com.pulumi.snowflake.outputs.GetFunctionsResult;
import com.pulumi.snowflake.outputs.GetGrantsResult;
import com.pulumi.snowflake.outputs.GetMaskingPoliciesResult;
import com.pulumi.snowflake.outputs.GetMaterializedViewsResult;
import com.pulumi.snowflake.outputs.GetParametersResult;
import com.pulumi.snowflake.outputs.GetPipesResult;
import com.pulumi.snowflake.outputs.GetProceduresResult;
import com.pulumi.snowflake.outputs.GetResourceMonitorsResult;
import com.pulumi.snowflake.outputs.GetRoleResult;
import com.pulumi.snowflake.outputs.GetRolesResult;
import com.pulumi.snowflake.outputs.GetRowAccessPoliciesResult;
import com.pulumi.snowflake.outputs.GetSchemasResult;
import com.pulumi.snowflake.outputs.GetSequencesResult;
import com.pulumi.snowflake.outputs.GetSharesResult;
import com.pulumi.snowflake.outputs.GetStagesResult;
import com.pulumi.snowflake.outputs.GetStorageIntegrationsResult;
import com.pulumi.snowflake.outputs.GetStreamsResult;
import com.pulumi.snowflake.outputs.GetSystemGenerateScimAccessTokenResult;
import com.pulumi.snowflake.outputs.GetSystemGetAwsSnsIamPolicyResult;
import com.pulumi.snowflake.outputs.GetSystemGetPrivateLinkConfigResult;
import com.pulumi.snowflake.outputs.GetSystemGetSnowflakePlatformInfoResult;
import com.pulumi.snowflake.outputs.GetTablesResult;
import com.pulumi.snowflake.outputs.GetTasksResult;
import com.pulumi.snowflake.outputs.GetUsersResult;
import com.pulumi.snowflake.outputs.GetViewsResult;
import com.pulumi.snowflake.outputs.GetWarehousesResult;
import java.util.concurrent.CompletableFuture;

public final class SnowflakeFunctions {
    public static Output<GetAccountsResult> getAccounts() {
        return getAccounts(GetAccountsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountsResult> getAccountsPlain() {
        return getAccountsPlain(GetAccountsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args) {
        return getAccounts(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args) {
        return getAccountsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetAccountsResult> getAccounts(GetAccountsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetAccountsResult> getAccountsPlain(GetAccountsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getAccounts:getAccounts", TypeShape.of(GetAccountsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAlertsResult> getAlerts() {
        return getAlerts(GetAlertsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain() {
        return getAlertsPlain(GetAlertsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAlertsResult> getAlerts(GetAlertsArgs args) {
        return getAlerts(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain(GetAlertsPlainArgs args) {
        return getAlertsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetAlertsResult> getAlerts(GetAlertsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getAlerts:getAlerts", TypeShape.of(GetAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetAlertsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getAlerts(GetAlertsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetAlertsResult> getAlertsPlain(GetAlertsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getAlerts:getAlerts", TypeShape.of(GetAlertsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount() {
        return getCurrentAccount(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain() {
        return getCurrentAccountPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount(InvokeArgs args) {
        return getCurrentAccount(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain(InvokeArgs args) {
        return getCurrentAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetCurrentAccountResult> getCurrentAccount(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getCurrentAccount:getCurrentAccount", TypeShape.of(GetCurrentAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.aws.ssm.Parameter;
     * import com.pulumi.aws.ssm.ParameterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getCurrentAccount();
     * 
     *         var snowflakeAccountUrl = new Parameter(&#34;snowflakeAccountUrl&#34;, ParameterArgs.builder()        
     *             .type(&#34;String&#34;)
     *             .value(this_.url())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetCurrentAccountResult> getCurrentAccountPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getCurrentAccount:getCurrentAccount", TypeShape.of(GetCurrentAccountResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetCurrentRoleResult> getCurrentRole() {
        return getCurrentRole(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCurrentRoleResult> getCurrentRolePlain() {
        return getCurrentRolePlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetCurrentRoleResult> getCurrentRole(InvokeArgs args) {
        return getCurrentRole(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetCurrentRoleResult> getCurrentRolePlain(InvokeArgs args) {
        return getCurrentRolePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetCurrentRoleResult> getCurrentRole(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getCurrentRole:getCurrentRole", TypeShape.of(GetCurrentRoleResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetCurrentRoleResult> getCurrentRolePlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getCurrentRole:getCurrentRole", TypeShape.of(GetCurrentRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name(&#34;DEMO_DB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args) {
        return getDatabase(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name(&#34;DEMO_DB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args) {
        return getDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name(&#34;DEMO_DB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name(&#34;DEMO_DB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dbRoles = SnowflakeFunctions.getDatabaseRoles(GetDatabaseRolesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabaseRolesResult> getDatabaseRoles(GetDatabaseRolesArgs args) {
        return getDatabaseRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dbRoles = SnowflakeFunctions.getDatabaseRoles(GetDatabaseRolesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabaseRolesResult> getDatabaseRolesPlain(GetDatabaseRolesPlainArgs args) {
        return getDatabaseRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dbRoles = SnowflakeFunctions.getDatabaseRoles(GetDatabaseRolesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabaseRolesResult> getDatabaseRoles(GetDatabaseRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getDatabaseRoles:getDatabaseRoles", TypeShape.of(GetDatabaseRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabaseRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var dbRoles = SnowflakeFunctions.getDatabaseRoles(GetDatabaseRolesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabaseRolesResult> getDatabaseRolesPlain(GetDatabaseRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getDatabaseRoles:getDatabaseRoles", TypeShape.of(GetDatabaseRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabasesResult> getDatabases() {
        return getDatabases(GetDatabasesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain() {
        return getDatabasesPlain(GetDatabasesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(GetDatabasesArgs args) {
        return getDatabases(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(GetDatabasesPlainArgs args) {
        return getDatabasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(GetDatabasesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetDatabasesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getDatabases();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(GetDatabasesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetDynamicTablesResult> getDynamicTables() {
        return getDynamicTables(GetDynamicTablesArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetDynamicTablesResult> getDynamicTablesPlain() {
        return getDynamicTablesPlain(GetDynamicTablesPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetDynamicTablesResult> getDynamicTables(GetDynamicTablesArgs args) {
        return getDynamicTables(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetDynamicTablesResult> getDynamicTablesPlain(GetDynamicTablesPlainArgs args) {
        return getDynamicTablesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetDynamicTablesResult> getDynamicTables(GetDynamicTablesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getDynamicTables:getDynamicTables", TypeShape.of(GetDynamicTablesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetDynamicTablesResult> getDynamicTablesPlain(GetDynamicTablesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getDynamicTables:getDynamicTables", TypeShape.of(GetDynamicTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExternalFunctionsResult> getExternalFunctions() {
        return getExternalFunctions(GetExternalFunctionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExternalFunctionsResult> getExternalFunctionsPlain() {
        return getExternalFunctionsPlain(GetExternalFunctionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExternalFunctionsResult> getExternalFunctions(GetExternalFunctionsArgs args) {
        return getExternalFunctions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExternalFunctionsResult> getExternalFunctionsPlain(GetExternalFunctionsPlainArgs args) {
        return getExternalFunctionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExternalFunctionsResult> getExternalFunctions(GetExternalFunctionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getExternalFunctions:getExternalFunctions", TypeShape.of(GetExternalFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalFunctions(GetExternalFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExternalFunctionsResult> getExternalFunctionsPlain(GetExternalFunctionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getExternalFunctions:getExternalFunctions", TypeShape.of(GetExternalFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalTables(GetExternalTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExternalTablesResult> getExternalTables(GetExternalTablesArgs args) {
        return getExternalTables(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalTables(GetExternalTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExternalTablesResult> getExternalTablesPlain(GetExternalTablesPlainArgs args) {
        return getExternalTablesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalTables(GetExternalTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetExternalTablesResult> getExternalTables(GetExternalTablesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getExternalTables:getExternalTables", TypeShape.of(GetExternalTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetExternalTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getExternalTables(GetExternalTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetExternalTablesResult> getExternalTablesPlain(GetExternalTablesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getExternalTables:getExternalTables", TypeShape.of(GetExternalTablesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetFailoverGroupsResult> getFailoverGroups() {
        return getFailoverGroups(GetFailoverGroupsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFailoverGroupsResult> getFailoverGroupsPlain() {
        return getFailoverGroupsPlain(GetFailoverGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetFailoverGroupsResult> getFailoverGroups(GetFailoverGroupsArgs args) {
        return getFailoverGroups(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetFailoverGroupsResult> getFailoverGroupsPlain(GetFailoverGroupsPlainArgs args) {
        return getFailoverGroupsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetFailoverGroupsResult> getFailoverGroups(GetFailoverGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getFailoverGroups:getFailoverGroups", TypeShape.of(GetFailoverGroupsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetFailoverGroupsResult> getFailoverGroupsPlain(GetFailoverGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getFailoverGroups:getFailoverGroups", TypeShape.of(GetFailoverGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFileFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFileFormats(GetFileFormatsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFileFormatsResult> getFileFormats(GetFileFormatsArgs args) {
        return getFileFormats(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFileFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFileFormats(GetFileFormatsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFileFormatsResult> getFileFormatsPlain(GetFileFormatsPlainArgs args) {
        return getFileFormatsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFileFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFileFormats(GetFileFormatsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFileFormatsResult> getFileFormats(GetFileFormatsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getFileFormats:getFileFormats", TypeShape.of(GetFileFormatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFileFormatsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFileFormats(GetFileFormatsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFileFormatsResult> getFileFormatsPlain(GetFileFormatsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getFileFormats:getFileFormats", TypeShape.of(GetFileFormatsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionsResult> getFunctions(GetFunctionsArgs args) {
        return getFunctions(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionsResult> getFunctionsPlain(GetFunctionsPlainArgs args) {
        return getFunctionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetFunctionsResult> getFunctions(GetFunctionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getFunctions:getFunctions", TypeShape.of(GetFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetFunctionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getFunctions(GetFunctionsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetFunctionsResult> getFunctionsPlain(GetFunctionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getFunctions:getFunctions", TypeShape.of(GetFunctionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGrantsResult> getGrants() {
        return getGrants(GetGrantsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGrantsResult> getGrantsPlain() {
        return getGrantsPlain(GetGrantsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGrantsResult> getGrants(GetGrantsArgs args) {
        return getGrants(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGrantsResult> getGrantsPlain(GetGrantsPlainArgs args) {
        return getGrantsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetGrantsResult> getGrants(GetGrantsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getGrants:getGrants", TypeShape.of(GetGrantsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetGrantsArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOnArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsToArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsGrantsOfArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsInSchemaArgs;
     * import com.pulumi.snowflake.inputs.GetGrantsFutureGrantsToArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var grants = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .account(true)
     *                 .build())
     *             .build());
     * 
     *         final var grants2 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOn(GetGrantsGrantsOnArgs.builder()
     *                 .objectName(&#34;\&#34;tst\&#34;&#34;)
     *                 .objectType(&#34;DATABASE&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants3 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsTo(GetGrantsGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants4 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .grantsOf(GetGrantsGrantsOfArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants5 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .database(&#34;\&#34;tst\&#34;&#34;)
     *                 .build())
     *             .build());
     * 
     *         final var grants6 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsIn(GetGrantsFutureGrantsInArgs.builder()
     *                 .schema(GetGrantsFutureGrantsInSchemaArgs.builder()
     *                     .databaseName(&#34;\&#34;mydatabase\&#34;&#34;)
     *                     .schemaName(&#34;\&#34;myschema\&#34;&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *         final var grants7 = SnowflakeFunctions.getGrants(GetGrantsArgs.builder()
     *             .futureGrantsTo(GetGrantsFutureGrantsToArgs.builder()
     *                 .role(&#34;ACCOUNTADMIN&#34;)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetGrantsResult> getGrantsPlain(GetGrantsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getGrants:getGrants", TypeShape.of(GetGrantsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaskingPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaskingPolicies(GetMaskingPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMaskingPoliciesResult> getMaskingPolicies(GetMaskingPoliciesArgs args) {
        return getMaskingPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaskingPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaskingPolicies(GetMaskingPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMaskingPoliciesResult> getMaskingPoliciesPlain(GetMaskingPoliciesPlainArgs args) {
        return getMaskingPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaskingPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaskingPolicies(GetMaskingPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMaskingPoliciesResult> getMaskingPolicies(GetMaskingPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getMaskingPolicies:getMaskingPolicies", TypeShape.of(GetMaskingPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaskingPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaskingPolicies(GetMaskingPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMaskingPoliciesResult> getMaskingPoliciesPlain(GetMaskingPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getMaskingPolicies:getMaskingPolicies", TypeShape.of(GetMaskingPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaterializedViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaterializedViews(GetMaterializedViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMaterializedViewsResult> getMaterializedViews(GetMaterializedViewsArgs args) {
        return getMaterializedViews(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaterializedViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaterializedViews(GetMaterializedViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMaterializedViewsResult> getMaterializedViewsPlain(GetMaterializedViewsPlainArgs args) {
        return getMaterializedViewsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaterializedViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaterializedViews(GetMaterializedViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMaterializedViewsResult> getMaterializedViews(GetMaterializedViewsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getMaterializedViews:getMaterializedViews", TypeShape.of(GetMaterializedViewsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetMaterializedViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getMaterializedViews(GetMaterializedViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMaterializedViewsResult> getMaterializedViewsPlain(GetMaterializedViewsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getMaterializedViews:getMaterializedViews", TypeShape.of(GetMaterializedViewsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParametersResult> getParameters() {
        return getParameters(GetParametersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParametersResult> getParametersPlain() {
        return getParametersPlain(GetParametersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParametersResult> getParameters(GetParametersArgs args) {
        return getParameters(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParametersResult> getParametersPlain(GetParametersPlainArgs args) {
        return getParametersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetParametersResult> getParameters(GetParametersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getParameters:getParameters", TypeShape.of(GetParametersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.Database;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetParametersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var database = new Database(&#34;database&#34;);
     * 
     *         final var parameters = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;OBJECT&#34;)
     *             .objectType(&#34;DATABASE&#34;)
     *             .objectName(database.name())
     *             .build());
     * 
     *         final var p2 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;ACCOUNT&#34;)
     *             .pattern(&#34;%TIMESTAMP%&#34;)
     *             .build());
     * 
     *         final var p3 = SnowflakeFunctions.getParameters(GetParametersArgs.builder()
     *             .parameterType(&#34;SESSION&#34;)
     *             .pattern(&#34;ROWS_PER_RESULTSET&#34;)
     *             .user(&#34;TEST_USER&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetParametersResult> getParametersPlain(GetParametersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getParameters:getParameters", TypeShape.of(GetParametersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetPipesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getPipes(GetPipesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPipesResult> getPipes(GetPipesArgs args) {
        return getPipes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetPipesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getPipes(GetPipesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPipesResult> getPipesPlain(GetPipesPlainArgs args) {
        return getPipesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetPipesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getPipes(GetPipesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPipesResult> getPipes(GetPipesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getPipes:getPipes", TypeShape.of(GetPipesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetPipesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getPipes(GetPipesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPipesResult> getPipesPlain(GetPipesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getPipes:getPipes", TypeShape.of(GetPipesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetProceduresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getProcedures(GetProceduresArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProceduresResult> getProcedures(GetProceduresArgs args) {
        return getProcedures(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetProceduresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getProcedures(GetProceduresArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProceduresResult> getProceduresPlain(GetProceduresPlainArgs args) {
        return getProceduresPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetProceduresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getProcedures(GetProceduresArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProceduresResult> getProcedures(GetProceduresArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getProcedures:getProcedures", TypeShape.of(GetProceduresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetProceduresArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getProcedures(GetProceduresArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProceduresResult> getProceduresPlain(GetProceduresPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getProcedures:getProcedures", TypeShape.of(GetProceduresResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceMonitorsResult> getResourceMonitors() {
        return getResourceMonitors(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceMonitorsResult> getResourceMonitorsPlain() {
        return getResourceMonitorsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceMonitorsResult> getResourceMonitors(InvokeArgs args) {
        return getResourceMonitors(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceMonitorsResult> getResourceMonitorsPlain(InvokeArgs args) {
        return getResourceMonitorsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceMonitorsResult> getResourceMonitors(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getResourceMonitors:getResourceMonitors", TypeShape.of(GetResourceMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getResourceMonitors();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceMonitorsResult> getResourceMonitorsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getResourceMonitors:getResourceMonitors", TypeShape.of(GetResourceMonitorsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;role1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;role1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args) {
        return getRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;role1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRole(GetRoleArgs.builder()
     *             .name(&#34;role1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getRoles();
     * 
     *         final var ad = SnowflakeFunctions.getRoles(GetRolesArgs.builder()
     *             .pattern(&#34;SYSADMIN&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRowAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getRowAccessPolicies(GetRowAccessPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRowAccessPoliciesResult> getRowAccessPolicies(GetRowAccessPoliciesArgs args) {
        return getRowAccessPolicies(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRowAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getRowAccessPolicies(GetRowAccessPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRowAccessPoliciesResult> getRowAccessPoliciesPlain(GetRowAccessPoliciesPlainArgs args) {
        return getRowAccessPoliciesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRowAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getRowAccessPolicies(GetRowAccessPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRowAccessPoliciesResult> getRowAccessPolicies(GetRowAccessPoliciesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getRowAccessPolicies:getRowAccessPolicies", TypeShape.of(GetRowAccessPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetRowAccessPoliciesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getRowAccessPolicies(GetRowAccessPoliciesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRowAccessPoliciesResult> getRowAccessPoliciesPlain(GetRowAccessPoliciesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getRowAccessPolicies:getRowAccessPolicies", TypeShape.of(GetRowAccessPoliciesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSchemas(GetSchemasArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemasResult> getSchemas(GetSchemasArgs args) {
        return getSchemas(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSchemas(GetSchemasArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemasResult> getSchemasPlain(GetSchemasPlainArgs args) {
        return getSchemasPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSchemas(GetSchemasArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemasResult> getSchemas(GetSchemasArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSchemas:getSchemas", TypeShape.of(GetSchemasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSchemasArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSchemas(GetSchemasArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemasResult> getSchemasPlain(GetSchemasPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSchemas:getSchemas", TypeShape.of(GetSchemasResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSequencesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSequences(GetSequencesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSequencesResult> getSequences(GetSequencesArgs args) {
        return getSequences(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSequencesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSequences(GetSequencesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSequencesResult> getSequencesPlain(GetSequencesPlainArgs args) {
        return getSequencesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSequencesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSequences(GetSequencesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSequencesResult> getSequences(GetSequencesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSequences:getSequences", TypeShape.of(GetSequencesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSequencesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getSequences(GetSequencesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSequencesResult> getSequencesPlain(GetSequencesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSequences:getSequences", TypeShape.of(GetSequencesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSharesResult> getShares() {
        return getShares(GetSharesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSharesResult> getSharesPlain() {
        return getSharesPlain(GetSharesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSharesResult> getShares(GetSharesArgs args) {
        return getShares(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSharesResult> getSharesPlain(GetSharesPlainArgs args) {
        return getSharesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSharesResult> getShares(GetSharesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getShares:getShares", TypeShape.of(GetSharesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSharesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = SnowflakeFunctions.getShares();
     * 
     *         final var ad = SnowflakeFunctions.getShares(GetSharesArgs.builder()
     *             .pattern(&#34;usage&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSharesResult> getSharesPlain(GetSharesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getShares:getShares", TypeShape.of(GetSharesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStages(GetStagesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStagesResult> getStages(GetStagesArgs args) {
        return getStages(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStages(GetStagesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStagesResult> getStagesPlain(GetStagesPlainArgs args) {
        return getStagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStages(GetStagesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStagesResult> getStages(GetStagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getStages:getStages", TypeShape.of(GetStagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStages(GetStagesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStagesResult> getStagesPlain(GetStagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getStages:getStages", TypeShape.of(GetStagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStorageIntegrationsResult> getStorageIntegrations() {
        return getStorageIntegrations(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStorageIntegrationsResult> getStorageIntegrationsPlain() {
        return getStorageIntegrationsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStorageIntegrationsResult> getStorageIntegrations(InvokeArgs args) {
        return getStorageIntegrations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStorageIntegrationsResult> getStorageIntegrationsPlain(InvokeArgs args) {
        return getStorageIntegrationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStorageIntegrationsResult> getStorageIntegrations(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getStorageIntegrations:getStorageIntegrations", TypeShape.of(GetStorageIntegrationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStorageIntegrations();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStorageIntegrationsResult> getStorageIntegrationsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getStorageIntegrations:getStorageIntegrations", TypeShape.of(GetStorageIntegrationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStreams(GetStreamsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStreamsResult> getStreams(GetStreamsArgs args) {
        return getStreams(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStreams(GetStreamsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStreamsResult> getStreamsPlain(GetStreamsPlainArgs args) {
        return getStreamsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStreams(GetStreamsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetStreamsResult> getStreams(GetStreamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getStreams:getStreams", TypeShape.of(GetStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getStreams(GetStreamsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetStreamsResult> getStreamsPlain(GetStreamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getStreams:getStreams", TypeShape.of(GetStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var scim = SnowflakeFunctions.getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs.builder()
     *             .integrationName(&#34;AAD_PROVISIONING&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSystemGenerateScimAccessTokenResult> getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs args) {
        return getSystemGenerateScimAccessToken(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var scim = SnowflakeFunctions.getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs.builder()
     *             .integrationName(&#34;AAD_PROVISIONING&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSystemGenerateScimAccessTokenResult> getSystemGenerateScimAccessTokenPlain(GetSystemGenerateScimAccessTokenPlainArgs args) {
        return getSystemGenerateScimAccessTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var scim = SnowflakeFunctions.getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs.builder()
     *             .integrationName(&#34;AAD_PROVISIONING&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSystemGenerateScimAccessTokenResult> getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSystemGenerateScimAccessToken:getSystemGenerateScimAccessToken", TypeShape.of(GetSystemGenerateScimAccessTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetSystemGenerateScimAccessTokenArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var scim = SnowflakeFunctions.getSystemGenerateScimAccessToken(GetSystemGenerateScimAccessTokenArgs.builder()
     *             .integrationName(&#34;AAD_PROVISIONING&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSystemGenerateScimAccessTokenResult> getSystemGenerateScimAccessTokenPlain(GetSystemGenerateScimAccessTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSystemGenerateScimAccessToken:getSystemGenerateScimAccessToken", TypeShape.of(GetSystemGenerateScimAccessTokenResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSystemGetAwsSnsIamPolicyResult> getSystemGetAwsSnsIamPolicy(GetSystemGetAwsSnsIamPolicyArgs args) {
        return getSystemGetAwsSnsIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSystemGetAwsSnsIamPolicyResult> getSystemGetAwsSnsIamPolicyPlain(GetSystemGetAwsSnsIamPolicyPlainArgs args) {
        return getSystemGetAwsSnsIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSystemGetAwsSnsIamPolicyResult> getSystemGetAwsSnsIamPolicy(GetSystemGetAwsSnsIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSystemGetAwsSnsIamPolicy:getSystemGetAwsSnsIamPolicy", TypeShape.of(GetSystemGetAwsSnsIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSystemGetAwsSnsIamPolicyResult> getSystemGetAwsSnsIamPolicyPlain(GetSystemGetAwsSnsIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSystemGetAwsSnsIamPolicy:getSystemGetAwsSnsIamPolicy", TypeShape.of(GetSystemGetAwsSnsIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfig() {
        return getSystemGetPrivateLinkConfig(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfigPlain() {
        return getSystemGetPrivateLinkConfigPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfig(InvokeArgs args) {
        return getSystemGetPrivateLinkConfig(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfigPlain(InvokeArgs args) {
        return getSystemGetPrivateLinkConfigPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfig(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSystemGetPrivateLinkConfig:getSystemGetPrivateLinkConfig", TypeShape.of(GetSystemGetPrivateLinkConfigResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSystemGetPrivateLinkConfigResult> getSystemGetPrivateLinkConfigPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSystemGetPrivateLinkConfig:getSystemGetPrivateLinkConfig", TypeShape.of(GetSystemGetPrivateLinkConfigResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfo() {
        return getSystemGetSnowflakePlatformInfo(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfoPlain() {
        return getSystemGetSnowflakePlatformInfoPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfo(InvokeArgs args) {
        return getSystemGetSnowflakePlatformInfo(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfoPlain(InvokeArgs args) {
        return getSystemGetSnowflakePlatformInfoPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfo(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getSystemGetSnowflakePlatformInfo:getSystemGetSnowflakePlatformInfo", TypeShape.of(GetSystemGetSnowflakePlatformInfoResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSystemGetSnowflakePlatformInfoResult> getSystemGetSnowflakePlatformInfoPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getSystemGetSnowflakePlatformInfo:getSystemGetSnowflakePlatformInfo", TypeShape.of(GetSystemGetSnowflakePlatformInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTables(GetTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTablesResult> getTables(GetTablesArgs args) {
        return getTables(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTables(GetTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTablesResult> getTablesPlain(GetTablesPlainArgs args) {
        return getTablesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTables(GetTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTablesResult> getTables(GetTablesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getTables:getTables", TypeShape.of(GetTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTables(GetTablesArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTablesResult> getTablesPlain(GetTablesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getTables:getTables", TypeShape.of(GetTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTasks(GetTasksArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTasksResult> getTasks(GetTasksArgs args) {
        return getTasks(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTasks(GetTasksArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTasksResult> getTasksPlain(GetTasksPlainArgs args) {
        return getTasksPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTasks(GetTasksArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTasksResult> getTasks(GetTasksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getTasks:getTasks", TypeShape.of(GetTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getTasks(GetTasksArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTasksResult> getTasksPlain(GetTasksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getTasks:getTasks", TypeShape.of(GetTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getUsers(GetUsersArgs.builder()
     *             .pattern(&#34;user1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getUsers(GetUsersArgs.builder()
     *             .pattern(&#34;user1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getUsers(GetUsersArgs.builder()
     *             .pattern(&#34;user1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetUsersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getUsers(GetUsersArgs.builder()
     *             .pattern(&#34;user1&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getViews(GetViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetViewsResult> getViews(GetViewsArgs args) {
        return getViews(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getViews(GetViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetViewsResult> getViewsPlain(GetViewsPlainArgs args) {
        return getViewsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getViews(GetViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetViewsResult> getViews(GetViewsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getViews:getViews", TypeShape.of(GetViewsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import com.pulumi.snowflake.inputs.GetViewsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getViews(GetViewsArgs.builder()
     *             .database(&#34;MYDB&#34;)
     *             .schema(&#34;MYSCHEMA&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetViewsResult> getViewsPlain(GetViewsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getViews:getViews", TypeShape.of(GetViewsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWarehousesResult> getWarehouses() {
        return getWarehouses(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWarehousesResult> getWarehousesPlain() {
        return getWarehousesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWarehousesResult> getWarehouses(InvokeArgs args) {
        return getWarehouses(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWarehousesResult> getWarehousesPlain(InvokeArgs args) {
        return getWarehousesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetWarehousesResult> getWarehouses(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("snowflake:index/getWarehouses:getWarehouses", TypeShape.of(GetWarehousesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.snowflake.SnowflakeFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = SnowflakeFunctions.getWarehouses();
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetWarehousesResult> getWarehousesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("snowflake:index/getWarehouses:getWarehouses", TypeShape.of(GetWarehousesResult.class), args, Utilities.withVersion(options));
    }
}
