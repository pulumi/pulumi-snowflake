// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetDatabaseRolesDatabaseRole;
import com.pulumi.snowflake.outputs.GetDatabaseRolesLimit;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseRolesResult {
    private List<GetDatabaseRolesDatabaseRole> databaseRoles;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String inDatabase;
    private @Nullable String like;
    private @Nullable GetDatabaseRolesLimit limit;

    private GetDatabaseRolesResult() {}
    public List<GetDatabaseRolesDatabaseRole> databaseRoles() {
        return this.databaseRoles;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String inDatabase() {
        return this.inDatabase;
    }
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }
    public Optional<GetDatabaseRolesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseRolesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDatabaseRolesDatabaseRole> databaseRoles;
        private String id;
        private String inDatabase;
        private @Nullable String like;
        private @Nullable GetDatabaseRolesLimit limit;
        public Builder() {}
        public Builder(GetDatabaseRolesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseRoles = defaults.databaseRoles;
    	      this.id = defaults.id;
    	      this.inDatabase = defaults.inDatabase;
    	      this.like = defaults.like;
    	      this.limit = defaults.limit;
        }

        @CustomType.Setter
        public Builder databaseRoles(List<GetDatabaseRolesDatabaseRole> databaseRoles) {
            if (databaseRoles == null) {
              throw new MissingRequiredPropertyException("GetDatabaseRolesResult", "databaseRoles");
            }
            this.databaseRoles = databaseRoles;
            return this;
        }
        public Builder databaseRoles(GetDatabaseRolesDatabaseRole... databaseRoles) {
            return databaseRoles(List.of(databaseRoles));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabaseRolesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inDatabase(String inDatabase) {
            if (inDatabase == null) {
              throw new MissingRequiredPropertyException("GetDatabaseRolesResult", "inDatabase");
            }
            this.inDatabase = inDatabase;
            return this;
        }
        @CustomType.Setter
        public Builder like(@Nullable String like) {

            this.like = like;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable GetDatabaseRolesLimit limit) {

            this.limit = limit;
            return this;
        }
        public GetDatabaseRolesResult build() {
            final var _resultValue = new GetDatabaseRolesResult();
            _resultValue.databaseRoles = databaseRoles;
            _resultValue.id = id;
            _resultValue.inDatabase = inDatabase;
            _resultValue.like = like;
            _resultValue.limit = limit;
            return _resultValue;
        }
    }
}
