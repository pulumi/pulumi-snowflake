// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TableConstraintForeignKeyPropertiesReferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableConstraintForeignKeyPropertiesReferencesArgs Empty = new TableConstraintForeignKeyPropertiesReferencesArgs();

    /**
     * Columns to use in constraint key
     * 
     */
    @Import(name="columns", required=true)
    private Output<List<String>> columns;

    /**
     * @return Columns to use in constraint key
     * 
     */
    public Output<List<String>> columns() {
        return this.columns;
    }

    /**
     * Idenfifier for table to create constraint on. Must be of the form Note: format must follow: &#34;\n\n&#34;.&#34;\n\n&#34;.&#34;\n\n&#34; or &#34;\n\n.\n\n.\n\n&#34; or &#34;\n\n|\n\n.\n\n&#34; (snowflake*table.my*table.id)
     * 
     */
    @Import(name="tableId", required=true)
    private Output<String> tableId;

    /**
     * @return Idenfifier for table to create constraint on. Must be of the form Note: format must follow: &#34;\n\n&#34;.&#34;\n\n&#34;.&#34;\n\n&#34; or &#34;\n\n.\n\n.\n\n&#34; or &#34;\n\n|\n\n.\n\n&#34; (snowflake*table.my*table.id)
     * 
     */
    public Output<String> tableId() {
        return this.tableId;
    }

    private TableConstraintForeignKeyPropertiesReferencesArgs() {}

    private TableConstraintForeignKeyPropertiesReferencesArgs(TableConstraintForeignKeyPropertiesReferencesArgs $) {
        this.columns = $.columns;
        this.tableId = $.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableConstraintForeignKeyPropertiesReferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableConstraintForeignKeyPropertiesReferencesArgs $;

        public Builder() {
            $ = new TableConstraintForeignKeyPropertiesReferencesArgs();
        }

        public Builder(TableConstraintForeignKeyPropertiesReferencesArgs defaults) {
            $ = new TableConstraintForeignKeyPropertiesReferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns Columns to use in constraint key
         * 
         * @return builder
         * 
         */
        public Builder columns(Output<List<String>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns Columns to use in constraint key
         * 
         * @return builder
         * 
         */
        public Builder columns(List<String> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns Columns to use in constraint key
         * 
         * @return builder
         * 
         */
        public Builder columns(String... columns) {
            return columns(List.of(columns));
        }

        /**
         * @param tableId Idenfifier for table to create constraint on. Must be of the form Note: format must follow: &#34;\n\n&#34;.&#34;\n\n&#34;.&#34;\n\n&#34; or &#34;\n\n.\n\n.\n\n&#34; or &#34;\n\n|\n\n.\n\n&#34; (snowflake*table.my*table.id)
         * 
         * @return builder
         * 
         */
        public Builder tableId(Output<String> tableId) {
            $.tableId = tableId;
            return this;
        }

        /**
         * @param tableId Idenfifier for table to create constraint on. Must be of the form Note: format must follow: &#34;\n\n&#34;.&#34;\n\n&#34;.&#34;\n\n&#34; or &#34;\n\n.\n\n.\n\n&#34; or &#34;\n\n|\n\n.\n\n&#34; (snowflake*table.my*table.id)
         * 
         * @return builder
         * 
         */
        public Builder tableId(String tableId) {
            return tableId(Output.of(tableId));
        }

        public TableConstraintForeignKeyPropertiesReferencesArgs build() {
            $.columns = Objects.requireNonNull($.columns, "expected parameter 'columns' to be non-null");
            $.tableId = Objects.requireNonNull($.tableId, "expected parameter 'tableId' to be non-null");
            return $;
        }
    }

}
