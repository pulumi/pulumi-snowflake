// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GrantPrivilegesToRoleOnSchemaObjectAll {
    /**
     * @return The fully qualified name of the database.
     * 
     */
    private @Nullable String inDatabase;
    /**
     * @return The fully qualified name of the schema.
     * 
     */
    private @Nullable String inSchema;
    /**
     * @return The plural object type of the schema object on which privileges will be granted. Valid values are: ALERTS | DYNAMIC TABLES | EVENT TABLES | FILE FORMATS | FUNCTIONS | PROCEDURES | SECRETS | SEQUENCES | PIPES | MASKING POLICIES | PASSWORD POLICIES | ROW ACCESS POLICIES | SESSION POLICIES | TAGS | STAGES | STREAMS | TABLES | EXTERNAL TABLES | TASKS | VIEWS | MATERIALIZED VIEWS
     * 
     */
    private String objectTypePlural;

    private GrantPrivilegesToRoleOnSchemaObjectAll() {}
    /**
     * @return The fully qualified name of the database.
     * 
     */
    public Optional<String> inDatabase() {
        return Optional.ofNullable(this.inDatabase);
    }
    /**
     * @return The fully qualified name of the schema.
     * 
     */
    public Optional<String> inSchema() {
        return Optional.ofNullable(this.inSchema);
    }
    /**
     * @return The plural object type of the schema object on which privileges will be granted. Valid values are: ALERTS | DYNAMIC TABLES | EVENT TABLES | FILE FORMATS | FUNCTIONS | PROCEDURES | SECRETS | SEQUENCES | PIPES | MASKING POLICIES | PASSWORD POLICIES | ROW ACCESS POLICIES | SESSION POLICIES | TAGS | STAGES | STREAMS | TABLES | EXTERNAL TABLES | TASKS | VIEWS | MATERIALIZED VIEWS
     * 
     */
    public String objectTypePlural() {
        return this.objectTypePlural;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrantPrivilegesToRoleOnSchemaObjectAll defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String inDatabase;
        private @Nullable String inSchema;
        private String objectTypePlural;
        public Builder() {}
        public Builder(GrantPrivilegesToRoleOnSchemaObjectAll defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inDatabase = defaults.inDatabase;
    	      this.inSchema = defaults.inSchema;
    	      this.objectTypePlural = defaults.objectTypePlural;
        }

        @CustomType.Setter
        public Builder inDatabase(@Nullable String inDatabase) {
            this.inDatabase = inDatabase;
            return this;
        }
        @CustomType.Setter
        public Builder inSchema(@Nullable String inSchema) {
            this.inSchema = inSchema;
            return this;
        }
        @CustomType.Setter
        public Builder objectTypePlural(String objectTypePlural) {
            this.objectTypePlural = Objects.requireNonNull(objectTypePlural);
            return this;
        }
        public GrantPrivilegesToRoleOnSchemaObjectAll build() {
            final var o = new GrantPrivilegesToRoleOnSchemaObjectAll();
            o.inDatabase = inDatabase;
            o.inSchema = inSchema;
            o.objectTypePlural = objectTypePlural;
            return o;
        }
    }
}
