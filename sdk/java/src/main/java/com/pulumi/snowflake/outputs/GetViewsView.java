// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetViewsViewDescribeOutput;
import com.pulumi.snowflake.outputs.GetViewsViewShowOutput;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetViewsView {
    /**
     * @return Holds the output of DESCRIBE VIEW.
     * 
     */
    private List<GetViewsViewDescribeOutput> describeOutputs;
    /**
     * @return Holds the output of SHOW VIEWS.
     * 
     */
    private List<GetViewsViewShowOutput> showOutputs;

    private GetViewsView() {}
    /**
     * @return Holds the output of DESCRIBE VIEW.
     * 
     */
    public List<GetViewsViewDescribeOutput> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * @return Holds the output of SHOW VIEWS.
     * 
     */
    public List<GetViewsViewShowOutput> showOutputs() {
        return this.showOutputs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetViewsView defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetViewsViewDescribeOutput> describeOutputs;
        private List<GetViewsViewShowOutput> showOutputs;
        public Builder() {}
        public Builder(GetViewsView defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.describeOutputs = defaults.describeOutputs;
    	      this.showOutputs = defaults.showOutputs;
        }

        @CustomType.Setter
        public Builder describeOutputs(List<GetViewsViewDescribeOutput> describeOutputs) {
            if (describeOutputs == null) {
              throw new MissingRequiredPropertyException("GetViewsView", "describeOutputs");
            }
            this.describeOutputs = describeOutputs;
            return this;
        }
        public Builder describeOutputs(GetViewsViewDescribeOutput... describeOutputs) {
            return describeOutputs(List.of(describeOutputs));
        }
        @CustomType.Setter
        public Builder showOutputs(List<GetViewsViewShowOutput> showOutputs) {
            if (showOutputs == null) {
              throw new MissingRequiredPropertyException("GetViewsView", "showOutputs");
            }
            this.showOutputs = showOutputs;
            return this;
        }
        public Builder showOutputs(GetViewsViewShowOutput... showOutputs) {
            return showOutputs(List.of(showOutputs));
        }
        public GetViewsView build() {
            final var _resultValue = new GetViewsView();
            _resultValue.describeOutputs = describeOutputs;
            _resultValue.showOutputs = showOutputs;
            return _resultValue;
        }
    }
}
