// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageIntegrationArgs Empty = new StorageIntegrationArgs();

    /**
     * (Default: ``)
     * 
     */
    @Import(name="azureTenantId")
    private @Nullable Output<String> azureTenantId;

    /**
     * @return (Default: ``)
     * 
     */
    public Optional<Output<String>> azureTenantId() {
        return Optional.ofNullable(this.azureTenantId);
    }

    /**
     * (Default: ``)
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return (Default: ``)
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * (Default: `true`)
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return (Default: `true`)
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Explicitly limits external stages that use the integration to reference one or more storage locations.
     * 
     */
    @Import(name="storageAllowedLocations", required=true)
    private Output<List<String>> storageAllowedLocations;

    /**
     * @return Explicitly limits external stages that use the integration to reference one or more storage locations.
     * 
     */
    public Output<List<String>> storageAllowedLocations() {
        return this.storageAllowedLocations;
    }

    /**
     * The external ID that Snowflake will use when assuming the AWS role.
     * 
     */
    @Import(name="storageAwsExternalId")
    private @Nullable Output<String> storageAwsExternalId;

    /**
     * @return The external ID that Snowflake will use when assuming the AWS role.
     * 
     */
    public Optional<Output<String>> storageAwsExternalId() {
        return Optional.ofNullable(this.storageAwsExternalId);
    }

    /**
     * &#34;bucket-owner-full-control&#34; Enables support for AWS access control lists (ACLs) to grant the bucket owner full control.
     * 
     */
    @Import(name="storageAwsObjectAcl")
    private @Nullable Output<String> storageAwsObjectAcl;

    /**
     * @return &#34;bucket-owner-full-control&#34; Enables support for AWS access control lists (ACLs) to grant the bucket owner full control.
     * 
     */
    public Optional<Output<String>> storageAwsObjectAcl() {
        return Optional.ofNullable(this.storageAwsObjectAcl);
    }

    /**
     * (Default: ``)
     * 
     */
    @Import(name="storageAwsRoleArn")
    private @Nullable Output<String> storageAwsRoleArn;

    /**
     * @return (Default: ``)
     * 
     */
    public Optional<Output<String>> storageAwsRoleArn() {
        return Optional.ofNullable(this.storageAwsRoleArn);
    }

    /**
     * Explicitly prohibits external stages that use the integration from referencing one or more storage locations.
     * 
     */
    @Import(name="storageBlockedLocations")
    private @Nullable Output<List<String>> storageBlockedLocations;

    /**
     * @return Explicitly prohibits external stages that use the integration from referencing one or more storage locations.
     * 
     */
    public Optional<Output<List<String>>> storageBlockedLocations() {
        return Optional.ofNullable(this.storageBlockedLocations);
    }

    /**
     * Specifies the storage provider for the integration. Valid options are: `S3` | `S3GOV` | `S3CHINA` | `GCS` | `AZURE`
     * 
     */
    @Import(name="storageProvider", required=true)
    private Output<String> storageProvider;

    /**
     * @return Specifies the storage provider for the integration. Valid options are: `S3` | `S3GOV` | `S3CHINA` | `GCS` | `AZURE`
     * 
     */
    public Output<String> storageProvider() {
        return this.storageProvider;
    }

    /**
     * (Default: `EXTERNAL_STAGE`)
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return (Default: `EXTERNAL_STAGE`)
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private StorageIntegrationArgs() {}

    private StorageIntegrationArgs(StorageIntegrationArgs $) {
        this.azureTenantId = $.azureTenantId;
        this.comment = $.comment;
        this.enabled = $.enabled;
        this.name = $.name;
        this.storageAllowedLocations = $.storageAllowedLocations;
        this.storageAwsExternalId = $.storageAwsExternalId;
        this.storageAwsObjectAcl = $.storageAwsObjectAcl;
        this.storageAwsRoleArn = $.storageAwsRoleArn;
        this.storageBlockedLocations = $.storageBlockedLocations;
        this.storageProvider = $.storageProvider;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageIntegrationArgs $;

        public Builder() {
            $ = new StorageIntegrationArgs();
        }

        public Builder(StorageIntegrationArgs defaults) {
            $ = new StorageIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureTenantId (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder azureTenantId(@Nullable Output<String> azureTenantId) {
            $.azureTenantId = azureTenantId;
            return this;
        }

        /**
         * @param azureTenantId (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder azureTenantId(String azureTenantId) {
            return azureTenantId(Output.of(azureTenantId));
        }

        /**
         * @param comment (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param enabled (Default: `true`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled (Default: `true`)
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageAllowedLocations Explicitly limits external stages that use the integration to reference one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageAllowedLocations(Output<List<String>> storageAllowedLocations) {
            $.storageAllowedLocations = storageAllowedLocations;
            return this;
        }

        /**
         * @param storageAllowedLocations Explicitly limits external stages that use the integration to reference one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageAllowedLocations(List<String> storageAllowedLocations) {
            return storageAllowedLocations(Output.of(storageAllowedLocations));
        }

        /**
         * @param storageAllowedLocations Explicitly limits external stages that use the integration to reference one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageAllowedLocations(String... storageAllowedLocations) {
            return storageAllowedLocations(List.of(storageAllowedLocations));
        }

        /**
         * @param storageAwsExternalId The external ID that Snowflake will use when assuming the AWS role.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsExternalId(@Nullable Output<String> storageAwsExternalId) {
            $.storageAwsExternalId = storageAwsExternalId;
            return this;
        }

        /**
         * @param storageAwsExternalId The external ID that Snowflake will use when assuming the AWS role.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsExternalId(String storageAwsExternalId) {
            return storageAwsExternalId(Output.of(storageAwsExternalId));
        }

        /**
         * @param storageAwsObjectAcl &#34;bucket-owner-full-control&#34; Enables support for AWS access control lists (ACLs) to grant the bucket owner full control.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsObjectAcl(@Nullable Output<String> storageAwsObjectAcl) {
            $.storageAwsObjectAcl = storageAwsObjectAcl;
            return this;
        }

        /**
         * @param storageAwsObjectAcl &#34;bucket-owner-full-control&#34; Enables support for AWS access control lists (ACLs) to grant the bucket owner full control.
         * 
         * @return builder
         * 
         */
        public Builder storageAwsObjectAcl(String storageAwsObjectAcl) {
            return storageAwsObjectAcl(Output.of(storageAwsObjectAcl));
        }

        /**
         * @param storageAwsRoleArn (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder storageAwsRoleArn(@Nullable Output<String> storageAwsRoleArn) {
            $.storageAwsRoleArn = storageAwsRoleArn;
            return this;
        }

        /**
         * @param storageAwsRoleArn (Default: ``)
         * 
         * @return builder
         * 
         */
        public Builder storageAwsRoleArn(String storageAwsRoleArn) {
            return storageAwsRoleArn(Output.of(storageAwsRoleArn));
        }

        /**
         * @param storageBlockedLocations Explicitly prohibits external stages that use the integration from referencing one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageBlockedLocations(@Nullable Output<List<String>> storageBlockedLocations) {
            $.storageBlockedLocations = storageBlockedLocations;
            return this;
        }

        /**
         * @param storageBlockedLocations Explicitly prohibits external stages that use the integration from referencing one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageBlockedLocations(List<String> storageBlockedLocations) {
            return storageBlockedLocations(Output.of(storageBlockedLocations));
        }

        /**
         * @param storageBlockedLocations Explicitly prohibits external stages that use the integration from referencing one or more storage locations.
         * 
         * @return builder
         * 
         */
        public Builder storageBlockedLocations(String... storageBlockedLocations) {
            return storageBlockedLocations(List.of(storageBlockedLocations));
        }

        /**
         * @param storageProvider Specifies the storage provider for the integration. Valid options are: `S3` | `S3GOV` | `S3CHINA` | `GCS` | `AZURE`
         * 
         * @return builder
         * 
         */
        public Builder storageProvider(Output<String> storageProvider) {
            $.storageProvider = storageProvider;
            return this;
        }

        /**
         * @param storageProvider Specifies the storage provider for the integration. Valid options are: `S3` | `S3GOV` | `S3CHINA` | `GCS` | `AZURE`
         * 
         * @return builder
         * 
         */
        public Builder storageProvider(String storageProvider) {
            return storageProvider(Output.of(storageProvider));
        }

        /**
         * @param type (Default: `EXTERNAL_STAGE`)
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Default: `EXTERNAL_STAGE`)
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public StorageIntegrationArgs build() {
            if ($.storageAllowedLocations == null) {
                throw new MissingRequiredPropertyException("StorageIntegrationArgs", "storageAllowedLocations");
            }
            if ($.storageProvider == null) {
                throw new MissingRequiredPropertyException("StorageIntegrationArgs", "storageProvider");
            }
            return $;
        }
    }

}
