// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.TableColumnMaskingPolicyApplicationArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.TableColumnMaskingPolicyApplicationState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Applies a masking policy to a table column.
 * 
 * Only one masking policy may be applied per table column, hence only one `snowflake.TableColumnMaskingPolicyApplication` resources may be present per table column.
 * Using two or more `snowflake.TableColumnMaskingPolicyApplication` resources for the same table column will result in the last one overriding any previously applied masking policies and unresolvable diffs in pulumi preview.
 * 
 * When using this resource to manage a table column&#39;s masking policy make sure to ignore changes to the column&#39;s masking policy in the table definition, otherwise the two resources would conflict. See example below.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.snowflake.MaskingPolicy;
 * import com.pulumi.snowflake.MaskingPolicyArgs;
 * import com.pulumi.snowflake.Table;
 * import com.pulumi.snowflake.TableArgs;
 * import com.pulumi.snowflake.inputs.TableColumnArgs;
 * import com.pulumi.snowflake.TableColumnMaskingPolicyApplication;
 * import com.pulumi.snowflake.TableColumnMaskingPolicyApplicationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new MaskingPolicy("policy", MaskingPolicyArgs.builder()        
 *             .name("EXAMPLE_MASKING_POLICY")
 *             .database("EXAMPLE_DB")
 *             .schema("EXAMPLE_SCHEMA")
 *             .valueDataType("VARCHAR")
 *             .maskingExpression("case when current_role() in ('ANALYST') then val else sha2(val, 512) end")
 *             .returnDataType("VARCHAR")
 *             .build());
 * 
 *         // Table is created by the default provider
 *         var table = new Table("table", TableArgs.builder()        
 *             .database("EXAMPLE_DB")
 *             .schema("EXAMPLE_SCHEMA")
 *             .name("table")
 *             .columns(TableColumnArgs.builder()
 *                 .name("secret")
 *                 .type("VARCHAR(16777216)")
 *                 .build())
 *             .build());
 * 
 *         var application = new TableColumnMaskingPolicyApplication("application", TableColumnMaskingPolicyApplicationArgs.builder()        
 *             .table(table.qualifiedName())
 *             .column("secret")
 *             .maskingPolicy(policy.qualifiedName())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="snowflake:index/tableColumnMaskingPolicyApplication:TableColumnMaskingPolicyApplication")
public class TableColumnMaskingPolicyApplication extends com.pulumi.resources.CustomResource {
    /**
     * The column to apply the masking policy to.
     * 
     */
    @Export(name="column", refs={String.class}, tree="[0]")
    private Output<String> column;

    /**
     * @return The column to apply the masking policy to.
     * 
     */
    public Output<String> column() {
        return this.column;
    }
    /**
     * Fully qualified name (`database.schema.policyname`) of the policy to apply.
     * 
     */
    @Export(name="maskingPolicy", refs={String.class}, tree="[0]")
    private Output<String> maskingPolicy;

    /**
     * @return Fully qualified name (`database.schema.policyname`) of the policy to apply.
     * 
     */
    public Output<String> maskingPolicy() {
        return this.maskingPolicy;
    }
    /**
     * The fully qualified name (`database.schema.table`) of the table to apply the masking policy to.
     * 
     */
    @Export(name="table", refs={String.class}, tree="[0]")
    private Output<String> table;

    /**
     * @return The fully qualified name (`database.schema.table`) of the table to apply the masking policy to.
     * 
     */
    public Output<String> table() {
        return this.table;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TableColumnMaskingPolicyApplication(String name) {
        this(name, TableColumnMaskingPolicyApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TableColumnMaskingPolicyApplication(String name, TableColumnMaskingPolicyApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TableColumnMaskingPolicyApplication(String name, TableColumnMaskingPolicyApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/tableColumnMaskingPolicyApplication:TableColumnMaskingPolicyApplication", name, args == null ? TableColumnMaskingPolicyApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TableColumnMaskingPolicyApplication(String name, Output<String> id, @Nullable TableColumnMaskingPolicyApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/tableColumnMaskingPolicyApplication:TableColumnMaskingPolicyApplication", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TableColumnMaskingPolicyApplication get(String name, Output<String> id, @Nullable TableColumnMaskingPolicyApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TableColumnMaskingPolicyApplication(name, id, state, options);
    }
}
