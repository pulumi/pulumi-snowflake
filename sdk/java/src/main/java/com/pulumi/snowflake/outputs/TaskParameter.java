// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.TaskParameterAbortDetachedQuery;
import com.pulumi.snowflake.outputs.TaskParameterAutocommit;
import com.pulumi.snowflake.outputs.TaskParameterBinaryInputFormat;
import com.pulumi.snowflake.outputs.TaskParameterBinaryOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterClientMemoryLimit;
import com.pulumi.snowflake.outputs.TaskParameterClientMetadataRequestUseConnectionCtx;
import com.pulumi.snowflake.outputs.TaskParameterClientPrefetchThread;
import com.pulumi.snowflake.outputs.TaskParameterClientResultChunkSize;
import com.pulumi.snowflake.outputs.TaskParameterClientResultColumnCaseInsensitive;
import com.pulumi.snowflake.outputs.TaskParameterClientSessionKeepAlife;
import com.pulumi.snowflake.outputs.TaskParameterClientSessionKeepAliveHeartbeatFrequency;
import com.pulumi.snowflake.outputs.TaskParameterClientTimestampTypeMapping;
import com.pulumi.snowflake.outputs.TaskParameterDateInputFormat;
import com.pulumi.snowflake.outputs.TaskParameterDateOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterEnableUnloadPhysicalTypeOptimization;
import com.pulumi.snowflake.outputs.TaskParameterErrorOnNondeterministicMerge;
import com.pulumi.snowflake.outputs.TaskParameterErrorOnNondeterministicUpdate;
import com.pulumi.snowflake.outputs.TaskParameterGeographyOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterGeometryOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterJdbcTreatTimestampNtzAsUtc;
import com.pulumi.snowflake.outputs.TaskParameterJdbcUseSessionTimezone;
import com.pulumi.snowflake.outputs.TaskParameterJsonIndent;
import com.pulumi.snowflake.outputs.TaskParameterLockTimeout;
import com.pulumi.snowflake.outputs.TaskParameterLogLevel;
import com.pulumi.snowflake.outputs.TaskParameterMultiStatementCount;
import com.pulumi.snowflake.outputs.TaskParameterNoorderSequenceAsDefault;
import com.pulumi.snowflake.outputs.TaskParameterOdbcTreatDecimalAsInt;
import com.pulumi.snowflake.outputs.TaskParameterQueryTag;
import com.pulumi.snowflake.outputs.TaskParameterQuotedIdentifiersIgnoreCase;
import com.pulumi.snowflake.outputs.TaskParameterRowsPerResultset;
import com.pulumi.snowflake.outputs.TaskParameterS3StageVpceDnsName;
import com.pulumi.snowflake.outputs.TaskParameterSearchPath;
import com.pulumi.snowflake.outputs.TaskParameterStatementQueuedTimeoutInSecond;
import com.pulumi.snowflake.outputs.TaskParameterStatementTimeoutInSecond;
import com.pulumi.snowflake.outputs.TaskParameterStrictJsonOutput;
import com.pulumi.snowflake.outputs.TaskParameterSuspendTaskAfterNumFailure;
import com.pulumi.snowflake.outputs.TaskParameterTaskAutoRetryAttempt;
import com.pulumi.snowflake.outputs.TaskParameterTimeInputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimeOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimestampDayIsAlways24h;
import com.pulumi.snowflake.outputs.TaskParameterTimestampInputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimestampLtzOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimestampNtzOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimestampOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimestampTypeMapping;
import com.pulumi.snowflake.outputs.TaskParameterTimestampTzOutputFormat;
import com.pulumi.snowflake.outputs.TaskParameterTimezone;
import com.pulumi.snowflake.outputs.TaskParameterTraceLevel;
import com.pulumi.snowflake.outputs.TaskParameterTransactionAbortOnError;
import com.pulumi.snowflake.outputs.TaskParameterTransactionDefaultIsolationLevel;
import com.pulumi.snowflake.outputs.TaskParameterTwoDigitCenturyStart;
import com.pulumi.snowflake.outputs.TaskParameterUnsupportedDdlAction;
import com.pulumi.snowflake.outputs.TaskParameterUseCachedResult;
import com.pulumi.snowflake.outputs.TaskParameterUserTaskManagedInitialWarehouseSize;
import com.pulumi.snowflake.outputs.TaskParameterUserTaskMinimumTriggerIntervalInSecond;
import com.pulumi.snowflake.outputs.TaskParameterUserTaskTimeoutM;
import com.pulumi.snowflake.outputs.TaskParameterWeekOfYearPolicy;
import com.pulumi.snowflake.outputs.TaskParameterWeekStart;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class TaskParameter {
    private @Nullable List<TaskParameterAbortDetachedQuery> abortDetachedQueries;
    private @Nullable List<TaskParameterAutocommit> autocommits;
    private @Nullable List<TaskParameterBinaryInputFormat> binaryInputFormats;
    private @Nullable List<TaskParameterBinaryOutputFormat> binaryOutputFormats;
    private @Nullable List<TaskParameterClientMemoryLimit> clientMemoryLimits;
    private @Nullable List<TaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes;
    private @Nullable List<TaskParameterClientPrefetchThread> clientPrefetchThreads;
    private @Nullable List<TaskParameterClientResultChunkSize> clientResultChunkSizes;
    private @Nullable List<TaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives;
    private @Nullable List<TaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies;
    private @Nullable List<TaskParameterClientSessionKeepAlife> clientSessionKeepAlives;
    private @Nullable List<TaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings;
    private @Nullable List<TaskParameterDateInputFormat> dateInputFormats;
    private @Nullable List<TaskParameterDateOutputFormat> dateOutputFormats;
    private @Nullable List<TaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations;
    private @Nullable List<TaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges;
    private @Nullable List<TaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates;
    private @Nullable List<TaskParameterGeographyOutputFormat> geographyOutputFormats;
    private @Nullable List<TaskParameterGeometryOutputFormat> geometryOutputFormats;
    private @Nullable List<TaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs;
    private @Nullable List<TaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones;
    private @Nullable List<TaskParameterJsonIndent> jsonIndents;
    private @Nullable List<TaskParameterLockTimeout> lockTimeouts;
    private @Nullable List<TaskParameterLogLevel> logLevels;
    private @Nullable List<TaskParameterMultiStatementCount> multiStatementCounts;
    private @Nullable List<TaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults;
    private @Nullable List<TaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts;
    private @Nullable List<TaskParameterQueryTag> queryTags;
    private @Nullable List<TaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
    private @Nullable List<TaskParameterRowsPerResultset> rowsPerResultsets;
    private @Nullable List<TaskParameterS3StageVpceDnsName> s3StageVpceDnsNames;
    private @Nullable List<TaskParameterSearchPath> searchPaths;
    private @Nullable List<TaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
    private @Nullable List<TaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds;
    private @Nullable List<TaskParameterStrictJsonOutput> strictJsonOutputs;
    private @Nullable List<TaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
    private @Nullable List<TaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
    private @Nullable List<TaskParameterTimeInputFormat> timeInputFormats;
    private @Nullable List<TaskParameterTimeOutputFormat> timeOutputFormats;
    private @Nullable List<TaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs;
    private @Nullable List<TaskParameterTimestampInputFormat> timestampInputFormats;
    private @Nullable List<TaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats;
    private @Nullable List<TaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats;
    private @Nullable List<TaskParameterTimestampOutputFormat> timestampOutputFormats;
    private @Nullable List<TaskParameterTimestampTypeMapping> timestampTypeMappings;
    private @Nullable List<TaskParameterTimestampTzOutputFormat> timestampTzOutputFormats;
    private @Nullable List<TaskParameterTimezone> timezones;
    private @Nullable List<TaskParameterTraceLevel> traceLevels;
    private @Nullable List<TaskParameterTransactionAbortOnError> transactionAbortOnErrors;
    private @Nullable List<TaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels;
    private @Nullable List<TaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts;
    private @Nullable List<TaskParameterUnsupportedDdlAction> unsupportedDdlActions;
    private @Nullable List<TaskParameterUseCachedResult> useCachedResults;
    private @Nullable List<TaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
    private @Nullable List<TaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
    private @Nullable List<TaskParameterUserTaskTimeoutM> userTaskTimeoutMs;
    private @Nullable List<TaskParameterWeekOfYearPolicy> weekOfYearPolicies;
    private @Nullable List<TaskParameterWeekStart> weekStarts;

    private TaskParameter() {}
    public List<TaskParameterAbortDetachedQuery> abortDetachedQueries() {
        return this.abortDetachedQueries == null ? List.of() : this.abortDetachedQueries;
    }
    public List<TaskParameterAutocommit> autocommits() {
        return this.autocommits == null ? List.of() : this.autocommits;
    }
    public List<TaskParameterBinaryInputFormat> binaryInputFormats() {
        return this.binaryInputFormats == null ? List.of() : this.binaryInputFormats;
    }
    public List<TaskParameterBinaryOutputFormat> binaryOutputFormats() {
        return this.binaryOutputFormats == null ? List.of() : this.binaryOutputFormats;
    }
    public List<TaskParameterClientMemoryLimit> clientMemoryLimits() {
        return this.clientMemoryLimits == null ? List.of() : this.clientMemoryLimits;
    }
    public List<TaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes() {
        return this.clientMetadataRequestUseConnectionCtxes == null ? List.of() : this.clientMetadataRequestUseConnectionCtxes;
    }
    public List<TaskParameterClientPrefetchThread> clientPrefetchThreads() {
        return this.clientPrefetchThreads == null ? List.of() : this.clientPrefetchThreads;
    }
    public List<TaskParameterClientResultChunkSize> clientResultChunkSizes() {
        return this.clientResultChunkSizes == null ? List.of() : this.clientResultChunkSizes;
    }
    public List<TaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives() {
        return this.clientResultColumnCaseInsensitives == null ? List.of() : this.clientResultColumnCaseInsensitives;
    }
    public List<TaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies() {
        return this.clientSessionKeepAliveHeartbeatFrequencies == null ? List.of() : this.clientSessionKeepAliveHeartbeatFrequencies;
    }
    public List<TaskParameterClientSessionKeepAlife> clientSessionKeepAlives() {
        return this.clientSessionKeepAlives == null ? List.of() : this.clientSessionKeepAlives;
    }
    public List<TaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings() {
        return this.clientTimestampTypeMappings == null ? List.of() : this.clientTimestampTypeMappings;
    }
    public List<TaskParameterDateInputFormat> dateInputFormats() {
        return this.dateInputFormats == null ? List.of() : this.dateInputFormats;
    }
    public List<TaskParameterDateOutputFormat> dateOutputFormats() {
        return this.dateOutputFormats == null ? List.of() : this.dateOutputFormats;
    }
    public List<TaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations() {
        return this.enableUnloadPhysicalTypeOptimizations == null ? List.of() : this.enableUnloadPhysicalTypeOptimizations;
    }
    public List<TaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges() {
        return this.errorOnNondeterministicMerges == null ? List.of() : this.errorOnNondeterministicMerges;
    }
    public List<TaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates() {
        return this.errorOnNondeterministicUpdates == null ? List.of() : this.errorOnNondeterministicUpdates;
    }
    public List<TaskParameterGeographyOutputFormat> geographyOutputFormats() {
        return this.geographyOutputFormats == null ? List.of() : this.geographyOutputFormats;
    }
    public List<TaskParameterGeometryOutputFormat> geometryOutputFormats() {
        return this.geometryOutputFormats == null ? List.of() : this.geometryOutputFormats;
    }
    public List<TaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs() {
        return this.jdbcTreatTimestampNtzAsUtcs == null ? List.of() : this.jdbcTreatTimestampNtzAsUtcs;
    }
    public List<TaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones() {
        return this.jdbcUseSessionTimezones == null ? List.of() : this.jdbcUseSessionTimezones;
    }
    public List<TaskParameterJsonIndent> jsonIndents() {
        return this.jsonIndents == null ? List.of() : this.jsonIndents;
    }
    public List<TaskParameterLockTimeout> lockTimeouts() {
        return this.lockTimeouts == null ? List.of() : this.lockTimeouts;
    }
    public List<TaskParameterLogLevel> logLevels() {
        return this.logLevels == null ? List.of() : this.logLevels;
    }
    public List<TaskParameterMultiStatementCount> multiStatementCounts() {
        return this.multiStatementCounts == null ? List.of() : this.multiStatementCounts;
    }
    public List<TaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults() {
        return this.noorderSequenceAsDefaults == null ? List.of() : this.noorderSequenceAsDefaults;
    }
    public List<TaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts() {
        return this.odbcTreatDecimalAsInts == null ? List.of() : this.odbcTreatDecimalAsInts;
    }
    public List<TaskParameterQueryTag> queryTags() {
        return this.queryTags == null ? List.of() : this.queryTags;
    }
    public List<TaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases() {
        return this.quotedIdentifiersIgnoreCases == null ? List.of() : this.quotedIdentifiersIgnoreCases;
    }
    public List<TaskParameterRowsPerResultset> rowsPerResultsets() {
        return this.rowsPerResultsets == null ? List.of() : this.rowsPerResultsets;
    }
    public List<TaskParameterS3StageVpceDnsName> s3StageVpceDnsNames() {
        return this.s3StageVpceDnsNames == null ? List.of() : this.s3StageVpceDnsNames;
    }
    public List<TaskParameterSearchPath> searchPaths() {
        return this.searchPaths == null ? List.of() : this.searchPaths;
    }
    public List<TaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds() {
        return this.statementQueuedTimeoutInSeconds == null ? List.of() : this.statementQueuedTimeoutInSeconds;
    }
    public List<TaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds() {
        return this.statementTimeoutInSeconds == null ? List.of() : this.statementTimeoutInSeconds;
    }
    public List<TaskParameterStrictJsonOutput> strictJsonOutputs() {
        return this.strictJsonOutputs == null ? List.of() : this.strictJsonOutputs;
    }
    public List<TaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures() {
        return this.suspendTaskAfterNumFailures == null ? List.of() : this.suspendTaskAfterNumFailures;
    }
    public List<TaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts() {
        return this.taskAutoRetryAttempts == null ? List.of() : this.taskAutoRetryAttempts;
    }
    public List<TaskParameterTimeInputFormat> timeInputFormats() {
        return this.timeInputFormats == null ? List.of() : this.timeInputFormats;
    }
    public List<TaskParameterTimeOutputFormat> timeOutputFormats() {
        return this.timeOutputFormats == null ? List.of() : this.timeOutputFormats;
    }
    public List<TaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs() {
        return this.timestampDayIsAlways24hs == null ? List.of() : this.timestampDayIsAlways24hs;
    }
    public List<TaskParameterTimestampInputFormat> timestampInputFormats() {
        return this.timestampInputFormats == null ? List.of() : this.timestampInputFormats;
    }
    public List<TaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats() {
        return this.timestampLtzOutputFormats == null ? List.of() : this.timestampLtzOutputFormats;
    }
    public List<TaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats() {
        return this.timestampNtzOutputFormats == null ? List.of() : this.timestampNtzOutputFormats;
    }
    public List<TaskParameterTimestampOutputFormat> timestampOutputFormats() {
        return this.timestampOutputFormats == null ? List.of() : this.timestampOutputFormats;
    }
    public List<TaskParameterTimestampTypeMapping> timestampTypeMappings() {
        return this.timestampTypeMappings == null ? List.of() : this.timestampTypeMappings;
    }
    public List<TaskParameterTimestampTzOutputFormat> timestampTzOutputFormats() {
        return this.timestampTzOutputFormats == null ? List.of() : this.timestampTzOutputFormats;
    }
    public List<TaskParameterTimezone> timezones() {
        return this.timezones == null ? List.of() : this.timezones;
    }
    public List<TaskParameterTraceLevel> traceLevels() {
        return this.traceLevels == null ? List.of() : this.traceLevels;
    }
    public List<TaskParameterTransactionAbortOnError> transactionAbortOnErrors() {
        return this.transactionAbortOnErrors == null ? List.of() : this.transactionAbortOnErrors;
    }
    public List<TaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels() {
        return this.transactionDefaultIsolationLevels == null ? List.of() : this.transactionDefaultIsolationLevels;
    }
    public List<TaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts() {
        return this.twoDigitCenturyStarts == null ? List.of() : this.twoDigitCenturyStarts;
    }
    public List<TaskParameterUnsupportedDdlAction> unsupportedDdlActions() {
        return this.unsupportedDdlActions == null ? List.of() : this.unsupportedDdlActions;
    }
    public List<TaskParameterUseCachedResult> useCachedResults() {
        return this.useCachedResults == null ? List.of() : this.useCachedResults;
    }
    public List<TaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes() {
        return this.userTaskManagedInitialWarehouseSizes == null ? List.of() : this.userTaskManagedInitialWarehouseSizes;
    }
    public List<TaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds() {
        return this.userTaskMinimumTriggerIntervalInSeconds == null ? List.of() : this.userTaskMinimumTriggerIntervalInSeconds;
    }
    public List<TaskParameterUserTaskTimeoutM> userTaskTimeoutMs() {
        return this.userTaskTimeoutMs == null ? List.of() : this.userTaskTimeoutMs;
    }
    public List<TaskParameterWeekOfYearPolicy> weekOfYearPolicies() {
        return this.weekOfYearPolicies == null ? List.of() : this.weekOfYearPolicies;
    }
    public List<TaskParameterWeekStart> weekStarts() {
        return this.weekStarts == null ? List.of() : this.weekStarts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<TaskParameterAbortDetachedQuery> abortDetachedQueries;
        private @Nullable List<TaskParameterAutocommit> autocommits;
        private @Nullable List<TaskParameterBinaryInputFormat> binaryInputFormats;
        private @Nullable List<TaskParameterBinaryOutputFormat> binaryOutputFormats;
        private @Nullable List<TaskParameterClientMemoryLimit> clientMemoryLimits;
        private @Nullable List<TaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes;
        private @Nullable List<TaskParameterClientPrefetchThread> clientPrefetchThreads;
        private @Nullable List<TaskParameterClientResultChunkSize> clientResultChunkSizes;
        private @Nullable List<TaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives;
        private @Nullable List<TaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies;
        private @Nullable List<TaskParameterClientSessionKeepAlife> clientSessionKeepAlives;
        private @Nullable List<TaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings;
        private @Nullable List<TaskParameterDateInputFormat> dateInputFormats;
        private @Nullable List<TaskParameterDateOutputFormat> dateOutputFormats;
        private @Nullable List<TaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations;
        private @Nullable List<TaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges;
        private @Nullable List<TaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates;
        private @Nullable List<TaskParameterGeographyOutputFormat> geographyOutputFormats;
        private @Nullable List<TaskParameterGeometryOutputFormat> geometryOutputFormats;
        private @Nullable List<TaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs;
        private @Nullable List<TaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones;
        private @Nullable List<TaskParameterJsonIndent> jsonIndents;
        private @Nullable List<TaskParameterLockTimeout> lockTimeouts;
        private @Nullable List<TaskParameterLogLevel> logLevels;
        private @Nullable List<TaskParameterMultiStatementCount> multiStatementCounts;
        private @Nullable List<TaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults;
        private @Nullable List<TaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts;
        private @Nullable List<TaskParameterQueryTag> queryTags;
        private @Nullable List<TaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
        private @Nullable List<TaskParameterRowsPerResultset> rowsPerResultsets;
        private @Nullable List<TaskParameterS3StageVpceDnsName> s3StageVpceDnsNames;
        private @Nullable List<TaskParameterSearchPath> searchPaths;
        private @Nullable List<TaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
        private @Nullable List<TaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds;
        private @Nullable List<TaskParameterStrictJsonOutput> strictJsonOutputs;
        private @Nullable List<TaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
        private @Nullable List<TaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
        private @Nullable List<TaskParameterTimeInputFormat> timeInputFormats;
        private @Nullable List<TaskParameterTimeOutputFormat> timeOutputFormats;
        private @Nullable List<TaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs;
        private @Nullable List<TaskParameterTimestampInputFormat> timestampInputFormats;
        private @Nullable List<TaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats;
        private @Nullable List<TaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats;
        private @Nullable List<TaskParameterTimestampOutputFormat> timestampOutputFormats;
        private @Nullable List<TaskParameterTimestampTypeMapping> timestampTypeMappings;
        private @Nullable List<TaskParameterTimestampTzOutputFormat> timestampTzOutputFormats;
        private @Nullable List<TaskParameterTimezone> timezones;
        private @Nullable List<TaskParameterTraceLevel> traceLevels;
        private @Nullable List<TaskParameterTransactionAbortOnError> transactionAbortOnErrors;
        private @Nullable List<TaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels;
        private @Nullable List<TaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts;
        private @Nullable List<TaskParameterUnsupportedDdlAction> unsupportedDdlActions;
        private @Nullable List<TaskParameterUseCachedResult> useCachedResults;
        private @Nullable List<TaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
        private @Nullable List<TaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
        private @Nullable List<TaskParameterUserTaskTimeoutM> userTaskTimeoutMs;
        private @Nullable List<TaskParameterWeekOfYearPolicy> weekOfYearPolicies;
        private @Nullable List<TaskParameterWeekStart> weekStarts;
        public Builder() {}
        public Builder(TaskParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abortDetachedQueries = defaults.abortDetachedQueries;
    	      this.autocommits = defaults.autocommits;
    	      this.binaryInputFormats = defaults.binaryInputFormats;
    	      this.binaryOutputFormats = defaults.binaryOutputFormats;
    	      this.clientMemoryLimits = defaults.clientMemoryLimits;
    	      this.clientMetadataRequestUseConnectionCtxes = defaults.clientMetadataRequestUseConnectionCtxes;
    	      this.clientPrefetchThreads = defaults.clientPrefetchThreads;
    	      this.clientResultChunkSizes = defaults.clientResultChunkSizes;
    	      this.clientResultColumnCaseInsensitives = defaults.clientResultColumnCaseInsensitives;
    	      this.clientSessionKeepAliveHeartbeatFrequencies = defaults.clientSessionKeepAliveHeartbeatFrequencies;
    	      this.clientSessionKeepAlives = defaults.clientSessionKeepAlives;
    	      this.clientTimestampTypeMappings = defaults.clientTimestampTypeMappings;
    	      this.dateInputFormats = defaults.dateInputFormats;
    	      this.dateOutputFormats = defaults.dateOutputFormats;
    	      this.enableUnloadPhysicalTypeOptimizations = defaults.enableUnloadPhysicalTypeOptimizations;
    	      this.errorOnNondeterministicMerges = defaults.errorOnNondeterministicMerges;
    	      this.errorOnNondeterministicUpdates = defaults.errorOnNondeterministicUpdates;
    	      this.geographyOutputFormats = defaults.geographyOutputFormats;
    	      this.geometryOutputFormats = defaults.geometryOutputFormats;
    	      this.jdbcTreatTimestampNtzAsUtcs = defaults.jdbcTreatTimestampNtzAsUtcs;
    	      this.jdbcUseSessionTimezones = defaults.jdbcUseSessionTimezones;
    	      this.jsonIndents = defaults.jsonIndents;
    	      this.lockTimeouts = defaults.lockTimeouts;
    	      this.logLevels = defaults.logLevels;
    	      this.multiStatementCounts = defaults.multiStatementCounts;
    	      this.noorderSequenceAsDefaults = defaults.noorderSequenceAsDefaults;
    	      this.odbcTreatDecimalAsInts = defaults.odbcTreatDecimalAsInts;
    	      this.queryTags = defaults.queryTags;
    	      this.quotedIdentifiersIgnoreCases = defaults.quotedIdentifiersIgnoreCases;
    	      this.rowsPerResultsets = defaults.rowsPerResultsets;
    	      this.s3StageVpceDnsNames = defaults.s3StageVpceDnsNames;
    	      this.searchPaths = defaults.searchPaths;
    	      this.statementQueuedTimeoutInSeconds = defaults.statementQueuedTimeoutInSeconds;
    	      this.statementTimeoutInSeconds = defaults.statementTimeoutInSeconds;
    	      this.strictJsonOutputs = defaults.strictJsonOutputs;
    	      this.suspendTaskAfterNumFailures = defaults.suspendTaskAfterNumFailures;
    	      this.taskAutoRetryAttempts = defaults.taskAutoRetryAttempts;
    	      this.timeInputFormats = defaults.timeInputFormats;
    	      this.timeOutputFormats = defaults.timeOutputFormats;
    	      this.timestampDayIsAlways24hs = defaults.timestampDayIsAlways24hs;
    	      this.timestampInputFormats = defaults.timestampInputFormats;
    	      this.timestampLtzOutputFormats = defaults.timestampLtzOutputFormats;
    	      this.timestampNtzOutputFormats = defaults.timestampNtzOutputFormats;
    	      this.timestampOutputFormats = defaults.timestampOutputFormats;
    	      this.timestampTypeMappings = defaults.timestampTypeMappings;
    	      this.timestampTzOutputFormats = defaults.timestampTzOutputFormats;
    	      this.timezones = defaults.timezones;
    	      this.traceLevels = defaults.traceLevels;
    	      this.transactionAbortOnErrors = defaults.transactionAbortOnErrors;
    	      this.transactionDefaultIsolationLevels = defaults.transactionDefaultIsolationLevels;
    	      this.twoDigitCenturyStarts = defaults.twoDigitCenturyStarts;
    	      this.unsupportedDdlActions = defaults.unsupportedDdlActions;
    	      this.useCachedResults = defaults.useCachedResults;
    	      this.userTaskManagedInitialWarehouseSizes = defaults.userTaskManagedInitialWarehouseSizes;
    	      this.userTaskMinimumTriggerIntervalInSeconds = defaults.userTaskMinimumTriggerIntervalInSeconds;
    	      this.userTaskTimeoutMs = defaults.userTaskTimeoutMs;
    	      this.weekOfYearPolicies = defaults.weekOfYearPolicies;
    	      this.weekStarts = defaults.weekStarts;
        }

        @CustomType.Setter
        public Builder abortDetachedQueries(@Nullable List<TaskParameterAbortDetachedQuery> abortDetachedQueries) {

            this.abortDetachedQueries = abortDetachedQueries;
            return this;
        }
        public Builder abortDetachedQueries(TaskParameterAbortDetachedQuery... abortDetachedQueries) {
            return abortDetachedQueries(List.of(abortDetachedQueries));
        }
        @CustomType.Setter
        public Builder autocommits(@Nullable List<TaskParameterAutocommit> autocommits) {

            this.autocommits = autocommits;
            return this;
        }
        public Builder autocommits(TaskParameterAutocommit... autocommits) {
            return autocommits(List.of(autocommits));
        }
        @CustomType.Setter
        public Builder binaryInputFormats(@Nullable List<TaskParameterBinaryInputFormat> binaryInputFormats) {

            this.binaryInputFormats = binaryInputFormats;
            return this;
        }
        public Builder binaryInputFormats(TaskParameterBinaryInputFormat... binaryInputFormats) {
            return binaryInputFormats(List.of(binaryInputFormats));
        }
        @CustomType.Setter
        public Builder binaryOutputFormats(@Nullable List<TaskParameterBinaryOutputFormat> binaryOutputFormats) {

            this.binaryOutputFormats = binaryOutputFormats;
            return this;
        }
        public Builder binaryOutputFormats(TaskParameterBinaryOutputFormat... binaryOutputFormats) {
            return binaryOutputFormats(List.of(binaryOutputFormats));
        }
        @CustomType.Setter
        public Builder clientMemoryLimits(@Nullable List<TaskParameterClientMemoryLimit> clientMemoryLimits) {

            this.clientMemoryLimits = clientMemoryLimits;
            return this;
        }
        public Builder clientMemoryLimits(TaskParameterClientMemoryLimit... clientMemoryLimits) {
            return clientMemoryLimits(List.of(clientMemoryLimits));
        }
        @CustomType.Setter
        public Builder clientMetadataRequestUseConnectionCtxes(@Nullable List<TaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes) {

            this.clientMetadataRequestUseConnectionCtxes = clientMetadataRequestUseConnectionCtxes;
            return this;
        }
        public Builder clientMetadataRequestUseConnectionCtxes(TaskParameterClientMetadataRequestUseConnectionCtx... clientMetadataRequestUseConnectionCtxes) {
            return clientMetadataRequestUseConnectionCtxes(List.of(clientMetadataRequestUseConnectionCtxes));
        }
        @CustomType.Setter
        public Builder clientPrefetchThreads(@Nullable List<TaskParameterClientPrefetchThread> clientPrefetchThreads) {

            this.clientPrefetchThreads = clientPrefetchThreads;
            return this;
        }
        public Builder clientPrefetchThreads(TaskParameterClientPrefetchThread... clientPrefetchThreads) {
            return clientPrefetchThreads(List.of(clientPrefetchThreads));
        }
        @CustomType.Setter
        public Builder clientResultChunkSizes(@Nullable List<TaskParameterClientResultChunkSize> clientResultChunkSizes) {

            this.clientResultChunkSizes = clientResultChunkSizes;
            return this;
        }
        public Builder clientResultChunkSizes(TaskParameterClientResultChunkSize... clientResultChunkSizes) {
            return clientResultChunkSizes(List.of(clientResultChunkSizes));
        }
        @CustomType.Setter
        public Builder clientResultColumnCaseInsensitives(@Nullable List<TaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives) {

            this.clientResultColumnCaseInsensitives = clientResultColumnCaseInsensitives;
            return this;
        }
        public Builder clientResultColumnCaseInsensitives(TaskParameterClientResultColumnCaseInsensitive... clientResultColumnCaseInsensitives) {
            return clientResultColumnCaseInsensitives(List.of(clientResultColumnCaseInsensitives));
        }
        @CustomType.Setter
        public Builder clientSessionKeepAliveHeartbeatFrequencies(@Nullable List<TaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies) {

            this.clientSessionKeepAliveHeartbeatFrequencies = clientSessionKeepAliveHeartbeatFrequencies;
            return this;
        }
        public Builder clientSessionKeepAliveHeartbeatFrequencies(TaskParameterClientSessionKeepAliveHeartbeatFrequency... clientSessionKeepAliveHeartbeatFrequencies) {
            return clientSessionKeepAliveHeartbeatFrequencies(List.of(clientSessionKeepAliveHeartbeatFrequencies));
        }
        @CustomType.Setter
        public Builder clientSessionKeepAlives(@Nullable List<TaskParameterClientSessionKeepAlife> clientSessionKeepAlives) {

            this.clientSessionKeepAlives = clientSessionKeepAlives;
            return this;
        }
        public Builder clientSessionKeepAlives(TaskParameterClientSessionKeepAlife... clientSessionKeepAlives) {
            return clientSessionKeepAlives(List.of(clientSessionKeepAlives));
        }
        @CustomType.Setter
        public Builder clientTimestampTypeMappings(@Nullable List<TaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings) {

            this.clientTimestampTypeMappings = clientTimestampTypeMappings;
            return this;
        }
        public Builder clientTimestampTypeMappings(TaskParameterClientTimestampTypeMapping... clientTimestampTypeMappings) {
            return clientTimestampTypeMappings(List.of(clientTimestampTypeMappings));
        }
        @CustomType.Setter
        public Builder dateInputFormats(@Nullable List<TaskParameterDateInputFormat> dateInputFormats) {

            this.dateInputFormats = dateInputFormats;
            return this;
        }
        public Builder dateInputFormats(TaskParameterDateInputFormat... dateInputFormats) {
            return dateInputFormats(List.of(dateInputFormats));
        }
        @CustomType.Setter
        public Builder dateOutputFormats(@Nullable List<TaskParameterDateOutputFormat> dateOutputFormats) {

            this.dateOutputFormats = dateOutputFormats;
            return this;
        }
        public Builder dateOutputFormats(TaskParameterDateOutputFormat... dateOutputFormats) {
            return dateOutputFormats(List.of(dateOutputFormats));
        }
        @CustomType.Setter
        public Builder enableUnloadPhysicalTypeOptimizations(@Nullable List<TaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations) {

            this.enableUnloadPhysicalTypeOptimizations = enableUnloadPhysicalTypeOptimizations;
            return this;
        }
        public Builder enableUnloadPhysicalTypeOptimizations(TaskParameterEnableUnloadPhysicalTypeOptimization... enableUnloadPhysicalTypeOptimizations) {
            return enableUnloadPhysicalTypeOptimizations(List.of(enableUnloadPhysicalTypeOptimizations));
        }
        @CustomType.Setter
        public Builder errorOnNondeterministicMerges(@Nullable List<TaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges) {

            this.errorOnNondeterministicMerges = errorOnNondeterministicMerges;
            return this;
        }
        public Builder errorOnNondeterministicMerges(TaskParameterErrorOnNondeterministicMerge... errorOnNondeterministicMerges) {
            return errorOnNondeterministicMerges(List.of(errorOnNondeterministicMerges));
        }
        @CustomType.Setter
        public Builder errorOnNondeterministicUpdates(@Nullable List<TaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates) {

            this.errorOnNondeterministicUpdates = errorOnNondeterministicUpdates;
            return this;
        }
        public Builder errorOnNondeterministicUpdates(TaskParameterErrorOnNondeterministicUpdate... errorOnNondeterministicUpdates) {
            return errorOnNondeterministicUpdates(List.of(errorOnNondeterministicUpdates));
        }
        @CustomType.Setter
        public Builder geographyOutputFormats(@Nullable List<TaskParameterGeographyOutputFormat> geographyOutputFormats) {

            this.geographyOutputFormats = geographyOutputFormats;
            return this;
        }
        public Builder geographyOutputFormats(TaskParameterGeographyOutputFormat... geographyOutputFormats) {
            return geographyOutputFormats(List.of(geographyOutputFormats));
        }
        @CustomType.Setter
        public Builder geometryOutputFormats(@Nullable List<TaskParameterGeometryOutputFormat> geometryOutputFormats) {

            this.geometryOutputFormats = geometryOutputFormats;
            return this;
        }
        public Builder geometryOutputFormats(TaskParameterGeometryOutputFormat... geometryOutputFormats) {
            return geometryOutputFormats(List.of(geometryOutputFormats));
        }
        @CustomType.Setter
        public Builder jdbcTreatTimestampNtzAsUtcs(@Nullable List<TaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs) {

            this.jdbcTreatTimestampNtzAsUtcs = jdbcTreatTimestampNtzAsUtcs;
            return this;
        }
        public Builder jdbcTreatTimestampNtzAsUtcs(TaskParameterJdbcTreatTimestampNtzAsUtc... jdbcTreatTimestampNtzAsUtcs) {
            return jdbcTreatTimestampNtzAsUtcs(List.of(jdbcTreatTimestampNtzAsUtcs));
        }
        @CustomType.Setter
        public Builder jdbcUseSessionTimezones(@Nullable List<TaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones) {

            this.jdbcUseSessionTimezones = jdbcUseSessionTimezones;
            return this;
        }
        public Builder jdbcUseSessionTimezones(TaskParameterJdbcUseSessionTimezone... jdbcUseSessionTimezones) {
            return jdbcUseSessionTimezones(List.of(jdbcUseSessionTimezones));
        }
        @CustomType.Setter
        public Builder jsonIndents(@Nullable List<TaskParameterJsonIndent> jsonIndents) {

            this.jsonIndents = jsonIndents;
            return this;
        }
        public Builder jsonIndents(TaskParameterJsonIndent... jsonIndents) {
            return jsonIndents(List.of(jsonIndents));
        }
        @CustomType.Setter
        public Builder lockTimeouts(@Nullable List<TaskParameterLockTimeout> lockTimeouts) {

            this.lockTimeouts = lockTimeouts;
            return this;
        }
        public Builder lockTimeouts(TaskParameterLockTimeout... lockTimeouts) {
            return lockTimeouts(List.of(lockTimeouts));
        }
        @CustomType.Setter
        public Builder logLevels(@Nullable List<TaskParameterLogLevel> logLevels) {

            this.logLevels = logLevels;
            return this;
        }
        public Builder logLevels(TaskParameterLogLevel... logLevels) {
            return logLevels(List.of(logLevels));
        }
        @CustomType.Setter
        public Builder multiStatementCounts(@Nullable List<TaskParameterMultiStatementCount> multiStatementCounts) {

            this.multiStatementCounts = multiStatementCounts;
            return this;
        }
        public Builder multiStatementCounts(TaskParameterMultiStatementCount... multiStatementCounts) {
            return multiStatementCounts(List.of(multiStatementCounts));
        }
        @CustomType.Setter
        public Builder noorderSequenceAsDefaults(@Nullable List<TaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults) {

            this.noorderSequenceAsDefaults = noorderSequenceAsDefaults;
            return this;
        }
        public Builder noorderSequenceAsDefaults(TaskParameterNoorderSequenceAsDefault... noorderSequenceAsDefaults) {
            return noorderSequenceAsDefaults(List.of(noorderSequenceAsDefaults));
        }
        @CustomType.Setter
        public Builder odbcTreatDecimalAsInts(@Nullable List<TaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts) {

            this.odbcTreatDecimalAsInts = odbcTreatDecimalAsInts;
            return this;
        }
        public Builder odbcTreatDecimalAsInts(TaskParameterOdbcTreatDecimalAsInt... odbcTreatDecimalAsInts) {
            return odbcTreatDecimalAsInts(List.of(odbcTreatDecimalAsInts));
        }
        @CustomType.Setter
        public Builder queryTags(@Nullable List<TaskParameterQueryTag> queryTags) {

            this.queryTags = queryTags;
            return this;
        }
        public Builder queryTags(TaskParameterQueryTag... queryTags) {
            return queryTags(List.of(queryTags));
        }
        @CustomType.Setter
        public Builder quotedIdentifiersIgnoreCases(@Nullable List<TaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases) {

            this.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            return this;
        }
        public Builder quotedIdentifiersIgnoreCases(TaskParameterQuotedIdentifiersIgnoreCase... quotedIdentifiersIgnoreCases) {
            return quotedIdentifiersIgnoreCases(List.of(quotedIdentifiersIgnoreCases));
        }
        @CustomType.Setter
        public Builder rowsPerResultsets(@Nullable List<TaskParameterRowsPerResultset> rowsPerResultsets) {

            this.rowsPerResultsets = rowsPerResultsets;
            return this;
        }
        public Builder rowsPerResultsets(TaskParameterRowsPerResultset... rowsPerResultsets) {
            return rowsPerResultsets(List.of(rowsPerResultsets));
        }
        @CustomType.Setter
        public Builder s3StageVpceDnsNames(@Nullable List<TaskParameterS3StageVpceDnsName> s3StageVpceDnsNames) {

            this.s3StageVpceDnsNames = s3StageVpceDnsNames;
            return this;
        }
        public Builder s3StageVpceDnsNames(TaskParameterS3StageVpceDnsName... s3StageVpceDnsNames) {
            return s3StageVpceDnsNames(List.of(s3StageVpceDnsNames));
        }
        @CustomType.Setter
        public Builder searchPaths(@Nullable List<TaskParameterSearchPath> searchPaths) {

            this.searchPaths = searchPaths;
            return this;
        }
        public Builder searchPaths(TaskParameterSearchPath... searchPaths) {
            return searchPaths(List.of(searchPaths));
        }
        @CustomType.Setter
        public Builder statementQueuedTimeoutInSeconds(@Nullable List<TaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds) {

            this.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            return this;
        }
        public Builder statementQueuedTimeoutInSeconds(TaskParameterStatementQueuedTimeoutInSecond... statementQueuedTimeoutInSeconds) {
            return statementQueuedTimeoutInSeconds(List.of(statementQueuedTimeoutInSeconds));
        }
        @CustomType.Setter
        public Builder statementTimeoutInSeconds(@Nullable List<TaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds) {

            this.statementTimeoutInSeconds = statementTimeoutInSeconds;
            return this;
        }
        public Builder statementTimeoutInSeconds(TaskParameterStatementTimeoutInSecond... statementTimeoutInSeconds) {
            return statementTimeoutInSeconds(List.of(statementTimeoutInSeconds));
        }
        @CustomType.Setter
        public Builder strictJsonOutputs(@Nullable List<TaskParameterStrictJsonOutput> strictJsonOutputs) {

            this.strictJsonOutputs = strictJsonOutputs;
            return this;
        }
        public Builder strictJsonOutputs(TaskParameterStrictJsonOutput... strictJsonOutputs) {
            return strictJsonOutputs(List.of(strictJsonOutputs));
        }
        @CustomType.Setter
        public Builder suspendTaskAfterNumFailures(@Nullable List<TaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures) {

            this.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            return this;
        }
        public Builder suspendTaskAfterNumFailures(TaskParameterSuspendTaskAfterNumFailure... suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(List.of(suspendTaskAfterNumFailures));
        }
        @CustomType.Setter
        public Builder taskAutoRetryAttempts(@Nullable List<TaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts) {

            this.taskAutoRetryAttempts = taskAutoRetryAttempts;
            return this;
        }
        public Builder taskAutoRetryAttempts(TaskParameterTaskAutoRetryAttempt... taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(List.of(taskAutoRetryAttempts));
        }
        @CustomType.Setter
        public Builder timeInputFormats(@Nullable List<TaskParameterTimeInputFormat> timeInputFormats) {

            this.timeInputFormats = timeInputFormats;
            return this;
        }
        public Builder timeInputFormats(TaskParameterTimeInputFormat... timeInputFormats) {
            return timeInputFormats(List.of(timeInputFormats));
        }
        @CustomType.Setter
        public Builder timeOutputFormats(@Nullable List<TaskParameterTimeOutputFormat> timeOutputFormats) {

            this.timeOutputFormats = timeOutputFormats;
            return this;
        }
        public Builder timeOutputFormats(TaskParameterTimeOutputFormat... timeOutputFormats) {
            return timeOutputFormats(List.of(timeOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampDayIsAlways24hs(@Nullable List<TaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs) {

            this.timestampDayIsAlways24hs = timestampDayIsAlways24hs;
            return this;
        }
        public Builder timestampDayIsAlways24hs(TaskParameterTimestampDayIsAlways24h... timestampDayIsAlways24hs) {
            return timestampDayIsAlways24hs(List.of(timestampDayIsAlways24hs));
        }
        @CustomType.Setter
        public Builder timestampInputFormats(@Nullable List<TaskParameterTimestampInputFormat> timestampInputFormats) {

            this.timestampInputFormats = timestampInputFormats;
            return this;
        }
        public Builder timestampInputFormats(TaskParameterTimestampInputFormat... timestampInputFormats) {
            return timestampInputFormats(List.of(timestampInputFormats));
        }
        @CustomType.Setter
        public Builder timestampLtzOutputFormats(@Nullable List<TaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats) {

            this.timestampLtzOutputFormats = timestampLtzOutputFormats;
            return this;
        }
        public Builder timestampLtzOutputFormats(TaskParameterTimestampLtzOutputFormat... timestampLtzOutputFormats) {
            return timestampLtzOutputFormats(List.of(timestampLtzOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampNtzOutputFormats(@Nullable List<TaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats) {

            this.timestampNtzOutputFormats = timestampNtzOutputFormats;
            return this;
        }
        public Builder timestampNtzOutputFormats(TaskParameterTimestampNtzOutputFormat... timestampNtzOutputFormats) {
            return timestampNtzOutputFormats(List.of(timestampNtzOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampOutputFormats(@Nullable List<TaskParameterTimestampOutputFormat> timestampOutputFormats) {

            this.timestampOutputFormats = timestampOutputFormats;
            return this;
        }
        public Builder timestampOutputFormats(TaskParameterTimestampOutputFormat... timestampOutputFormats) {
            return timestampOutputFormats(List.of(timestampOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampTypeMappings(@Nullable List<TaskParameterTimestampTypeMapping> timestampTypeMappings) {

            this.timestampTypeMappings = timestampTypeMappings;
            return this;
        }
        public Builder timestampTypeMappings(TaskParameterTimestampTypeMapping... timestampTypeMappings) {
            return timestampTypeMappings(List.of(timestampTypeMappings));
        }
        @CustomType.Setter
        public Builder timestampTzOutputFormats(@Nullable List<TaskParameterTimestampTzOutputFormat> timestampTzOutputFormats) {

            this.timestampTzOutputFormats = timestampTzOutputFormats;
            return this;
        }
        public Builder timestampTzOutputFormats(TaskParameterTimestampTzOutputFormat... timestampTzOutputFormats) {
            return timestampTzOutputFormats(List.of(timestampTzOutputFormats));
        }
        @CustomType.Setter
        public Builder timezones(@Nullable List<TaskParameterTimezone> timezones) {

            this.timezones = timezones;
            return this;
        }
        public Builder timezones(TaskParameterTimezone... timezones) {
            return timezones(List.of(timezones));
        }
        @CustomType.Setter
        public Builder traceLevels(@Nullable List<TaskParameterTraceLevel> traceLevels) {

            this.traceLevels = traceLevels;
            return this;
        }
        public Builder traceLevels(TaskParameterTraceLevel... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }
        @CustomType.Setter
        public Builder transactionAbortOnErrors(@Nullable List<TaskParameterTransactionAbortOnError> transactionAbortOnErrors) {

            this.transactionAbortOnErrors = transactionAbortOnErrors;
            return this;
        }
        public Builder transactionAbortOnErrors(TaskParameterTransactionAbortOnError... transactionAbortOnErrors) {
            return transactionAbortOnErrors(List.of(transactionAbortOnErrors));
        }
        @CustomType.Setter
        public Builder transactionDefaultIsolationLevels(@Nullable List<TaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels) {

            this.transactionDefaultIsolationLevels = transactionDefaultIsolationLevels;
            return this;
        }
        public Builder transactionDefaultIsolationLevels(TaskParameterTransactionDefaultIsolationLevel... transactionDefaultIsolationLevels) {
            return transactionDefaultIsolationLevels(List.of(transactionDefaultIsolationLevels));
        }
        @CustomType.Setter
        public Builder twoDigitCenturyStarts(@Nullable List<TaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts) {

            this.twoDigitCenturyStarts = twoDigitCenturyStarts;
            return this;
        }
        public Builder twoDigitCenturyStarts(TaskParameterTwoDigitCenturyStart... twoDigitCenturyStarts) {
            return twoDigitCenturyStarts(List.of(twoDigitCenturyStarts));
        }
        @CustomType.Setter
        public Builder unsupportedDdlActions(@Nullable List<TaskParameterUnsupportedDdlAction> unsupportedDdlActions) {

            this.unsupportedDdlActions = unsupportedDdlActions;
            return this;
        }
        public Builder unsupportedDdlActions(TaskParameterUnsupportedDdlAction... unsupportedDdlActions) {
            return unsupportedDdlActions(List.of(unsupportedDdlActions));
        }
        @CustomType.Setter
        public Builder useCachedResults(@Nullable List<TaskParameterUseCachedResult> useCachedResults) {

            this.useCachedResults = useCachedResults;
            return this;
        }
        public Builder useCachedResults(TaskParameterUseCachedResult... useCachedResults) {
            return useCachedResults(List.of(useCachedResults));
        }
        @CustomType.Setter
        public Builder userTaskManagedInitialWarehouseSizes(@Nullable List<TaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes) {

            this.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            return this;
        }
        public Builder userTaskManagedInitialWarehouseSizes(TaskParameterUserTaskManagedInitialWarehouseSize... userTaskManagedInitialWarehouseSizes) {
            return userTaskManagedInitialWarehouseSizes(List.of(userTaskManagedInitialWarehouseSizes));
        }
        @CustomType.Setter
        public Builder userTaskMinimumTriggerIntervalInSeconds(@Nullable List<TaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds) {

            this.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            return this;
        }
        public Builder userTaskMinimumTriggerIntervalInSeconds(TaskParameterUserTaskMinimumTriggerIntervalInSecond... userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(List.of(userTaskMinimumTriggerIntervalInSeconds));
        }
        @CustomType.Setter
        public Builder userTaskTimeoutMs(@Nullable List<TaskParameterUserTaskTimeoutM> userTaskTimeoutMs) {

            this.userTaskTimeoutMs = userTaskTimeoutMs;
            return this;
        }
        public Builder userTaskTimeoutMs(TaskParameterUserTaskTimeoutM... userTaskTimeoutMs) {
            return userTaskTimeoutMs(List.of(userTaskTimeoutMs));
        }
        @CustomType.Setter
        public Builder weekOfYearPolicies(@Nullable List<TaskParameterWeekOfYearPolicy> weekOfYearPolicies) {

            this.weekOfYearPolicies = weekOfYearPolicies;
            return this;
        }
        public Builder weekOfYearPolicies(TaskParameterWeekOfYearPolicy... weekOfYearPolicies) {
            return weekOfYearPolicies(List.of(weekOfYearPolicies));
        }
        @CustomType.Setter
        public Builder weekStarts(@Nullable List<TaskParameterWeekStart> weekStarts) {

            this.weekStarts = weekStarts;
            return this;
        }
        public Builder weekStarts(TaskParameterWeekStart... weekStarts) {
            return weekStarts(List.of(weekStarts));
        }
        public TaskParameter build() {
            final var _resultValue = new TaskParameter();
            _resultValue.abortDetachedQueries = abortDetachedQueries;
            _resultValue.autocommits = autocommits;
            _resultValue.binaryInputFormats = binaryInputFormats;
            _resultValue.binaryOutputFormats = binaryOutputFormats;
            _resultValue.clientMemoryLimits = clientMemoryLimits;
            _resultValue.clientMetadataRequestUseConnectionCtxes = clientMetadataRequestUseConnectionCtxes;
            _resultValue.clientPrefetchThreads = clientPrefetchThreads;
            _resultValue.clientResultChunkSizes = clientResultChunkSizes;
            _resultValue.clientResultColumnCaseInsensitives = clientResultColumnCaseInsensitives;
            _resultValue.clientSessionKeepAliveHeartbeatFrequencies = clientSessionKeepAliveHeartbeatFrequencies;
            _resultValue.clientSessionKeepAlives = clientSessionKeepAlives;
            _resultValue.clientTimestampTypeMappings = clientTimestampTypeMappings;
            _resultValue.dateInputFormats = dateInputFormats;
            _resultValue.dateOutputFormats = dateOutputFormats;
            _resultValue.enableUnloadPhysicalTypeOptimizations = enableUnloadPhysicalTypeOptimizations;
            _resultValue.errorOnNondeterministicMerges = errorOnNondeterministicMerges;
            _resultValue.errorOnNondeterministicUpdates = errorOnNondeterministicUpdates;
            _resultValue.geographyOutputFormats = geographyOutputFormats;
            _resultValue.geometryOutputFormats = geometryOutputFormats;
            _resultValue.jdbcTreatTimestampNtzAsUtcs = jdbcTreatTimestampNtzAsUtcs;
            _resultValue.jdbcUseSessionTimezones = jdbcUseSessionTimezones;
            _resultValue.jsonIndents = jsonIndents;
            _resultValue.lockTimeouts = lockTimeouts;
            _resultValue.logLevels = logLevels;
            _resultValue.multiStatementCounts = multiStatementCounts;
            _resultValue.noorderSequenceAsDefaults = noorderSequenceAsDefaults;
            _resultValue.odbcTreatDecimalAsInts = odbcTreatDecimalAsInts;
            _resultValue.queryTags = queryTags;
            _resultValue.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            _resultValue.rowsPerResultsets = rowsPerResultsets;
            _resultValue.s3StageVpceDnsNames = s3StageVpceDnsNames;
            _resultValue.searchPaths = searchPaths;
            _resultValue.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            _resultValue.statementTimeoutInSeconds = statementTimeoutInSeconds;
            _resultValue.strictJsonOutputs = strictJsonOutputs;
            _resultValue.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            _resultValue.taskAutoRetryAttempts = taskAutoRetryAttempts;
            _resultValue.timeInputFormats = timeInputFormats;
            _resultValue.timeOutputFormats = timeOutputFormats;
            _resultValue.timestampDayIsAlways24hs = timestampDayIsAlways24hs;
            _resultValue.timestampInputFormats = timestampInputFormats;
            _resultValue.timestampLtzOutputFormats = timestampLtzOutputFormats;
            _resultValue.timestampNtzOutputFormats = timestampNtzOutputFormats;
            _resultValue.timestampOutputFormats = timestampOutputFormats;
            _resultValue.timestampTypeMappings = timestampTypeMappings;
            _resultValue.timestampTzOutputFormats = timestampTzOutputFormats;
            _resultValue.timezones = timezones;
            _resultValue.traceLevels = traceLevels;
            _resultValue.transactionAbortOnErrors = transactionAbortOnErrors;
            _resultValue.transactionDefaultIsolationLevels = transactionDefaultIsolationLevels;
            _resultValue.twoDigitCenturyStarts = twoDigitCenturyStarts;
            _resultValue.unsupportedDdlActions = unsupportedDdlActions;
            _resultValue.useCachedResults = useCachedResults;
            _resultValue.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            _resultValue.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            _resultValue.userTaskTimeoutMs = userTaskTimeoutMs;
            _resultValue.weekOfYearPolicies = weekOfYearPolicies;
            _resultValue.weekStarts = weekStarts;
            return _resultValue;
        }
    }
}
