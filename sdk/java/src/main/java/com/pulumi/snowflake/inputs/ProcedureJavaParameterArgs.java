// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.ProcedureJavaParameterEnableConsoleOutputArgs;
import com.pulumi.snowflake.inputs.ProcedureJavaParameterLogLevelArgs;
import com.pulumi.snowflake.inputs.ProcedureJavaParameterMetricLevelArgs;
import com.pulumi.snowflake.inputs.ProcedureJavaParameterTraceLevelArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProcedureJavaParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProcedureJavaParameterArgs Empty = new ProcedureJavaParameterArgs();

    @Import(name="enableConsoleOutputs")
    private @Nullable Output<List<ProcedureJavaParameterEnableConsoleOutputArgs>> enableConsoleOutputs;

    public Optional<Output<List<ProcedureJavaParameterEnableConsoleOutputArgs>>> enableConsoleOutputs() {
        return Optional.ofNullable(this.enableConsoleOutputs);
    }

    @Import(name="logLevels")
    private @Nullable Output<List<ProcedureJavaParameterLogLevelArgs>> logLevels;

    public Optional<Output<List<ProcedureJavaParameterLogLevelArgs>>> logLevels() {
        return Optional.ofNullable(this.logLevels);
    }

    @Import(name="metricLevels")
    private @Nullable Output<List<ProcedureJavaParameterMetricLevelArgs>> metricLevels;

    public Optional<Output<List<ProcedureJavaParameterMetricLevelArgs>>> metricLevels() {
        return Optional.ofNullable(this.metricLevels);
    }

    @Import(name="traceLevels")
    private @Nullable Output<List<ProcedureJavaParameterTraceLevelArgs>> traceLevels;

    public Optional<Output<List<ProcedureJavaParameterTraceLevelArgs>>> traceLevels() {
        return Optional.ofNullable(this.traceLevels);
    }

    private ProcedureJavaParameterArgs() {}

    private ProcedureJavaParameterArgs(ProcedureJavaParameterArgs $) {
        this.enableConsoleOutputs = $.enableConsoleOutputs;
        this.logLevels = $.logLevels;
        this.metricLevels = $.metricLevels;
        this.traceLevels = $.traceLevels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProcedureJavaParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProcedureJavaParameterArgs $;

        public Builder() {
            $ = new ProcedureJavaParameterArgs();
        }

        public Builder(ProcedureJavaParameterArgs defaults) {
            $ = new ProcedureJavaParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder enableConsoleOutputs(@Nullable Output<List<ProcedureJavaParameterEnableConsoleOutputArgs>> enableConsoleOutputs) {
            $.enableConsoleOutputs = enableConsoleOutputs;
            return this;
        }

        public Builder enableConsoleOutputs(List<ProcedureJavaParameterEnableConsoleOutputArgs> enableConsoleOutputs) {
            return enableConsoleOutputs(Output.of(enableConsoleOutputs));
        }

        public Builder enableConsoleOutputs(ProcedureJavaParameterEnableConsoleOutputArgs... enableConsoleOutputs) {
            return enableConsoleOutputs(List.of(enableConsoleOutputs));
        }

        public Builder logLevels(@Nullable Output<List<ProcedureJavaParameterLogLevelArgs>> logLevels) {
            $.logLevels = logLevels;
            return this;
        }

        public Builder logLevels(List<ProcedureJavaParameterLogLevelArgs> logLevels) {
            return logLevels(Output.of(logLevels));
        }

        public Builder logLevels(ProcedureJavaParameterLogLevelArgs... logLevels) {
            return logLevels(List.of(logLevels));
        }

        public Builder metricLevels(@Nullable Output<List<ProcedureJavaParameterMetricLevelArgs>> metricLevels) {
            $.metricLevels = metricLevels;
            return this;
        }

        public Builder metricLevels(List<ProcedureJavaParameterMetricLevelArgs> metricLevels) {
            return metricLevels(Output.of(metricLevels));
        }

        public Builder metricLevels(ProcedureJavaParameterMetricLevelArgs... metricLevels) {
            return metricLevels(List.of(metricLevels));
        }

        public Builder traceLevels(@Nullable Output<List<ProcedureJavaParameterTraceLevelArgs>> traceLevels) {
            $.traceLevels = traceLevels;
            return this;
        }

        public Builder traceLevels(List<ProcedureJavaParameterTraceLevelArgs> traceLevels) {
            return traceLevels(Output.of(traceLevels));
        }

        public Builder traceLevels(ProcedureJavaParameterTraceLevelArgs... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }

        public ProcedureJavaParameterArgs build() {
            return $;
        }
    }

}
