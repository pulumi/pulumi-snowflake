// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListingShowOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListingShowOutputArgs Empty = new ListingShowOutputArgs();

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    @Import(name="detailedTargetAccounts")
    private @Nullable Output<String> detailedTargetAccounts;

    public Optional<Output<String>> detailedTargetAccounts() {
        return Optional.ofNullable(this.detailedTargetAccounts);
    }

    @Import(name="distribution")
    private @Nullable Output<String> distribution;

    public Optional<Output<String>> distribution() {
        return Optional.ofNullable(this.distribution);
    }

    @Import(name="globalName")
    private @Nullable Output<String> globalName;

    public Optional<Output<String>> globalName() {
        return Optional.ofNullable(this.globalName);
    }

    @Import(name="isApplication")
    private @Nullable Output<Boolean> isApplication;

    public Optional<Output<Boolean>> isApplication() {
        return Optional.ofNullable(this.isApplication);
    }

    @Import(name="isByRequest")
    private @Nullable Output<Boolean> isByRequest;

    public Optional<Output<Boolean>> isByRequest() {
        return Optional.ofNullable(this.isByRequest);
    }

    @Import(name="isLimitedTrial")
    private @Nullable Output<Boolean> isLimitedTrial;

    public Optional<Output<Boolean>> isLimitedTrial() {
        return Optional.ofNullable(this.isLimitedTrial);
    }

    @Import(name="isMonetized")
    private @Nullable Output<Boolean> isMonetized;

    public Optional<Output<Boolean>> isMonetized() {
        return Optional.ofNullable(this.isMonetized);
    }

    @Import(name="isMountlessQueryable")
    private @Nullable Output<Boolean> isMountlessQueryable;

    public Optional<Output<Boolean>> isMountlessQueryable() {
        return Optional.ofNullable(this.isMountlessQueryable);
    }

    @Import(name="isTargeted")
    private @Nullable Output<Boolean> isTargeted;

    public Optional<Output<Boolean>> isTargeted() {
        return Optional.ofNullable(this.isTargeted);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="organizationProfileName")
    private @Nullable Output<String> organizationProfileName;

    public Optional<Output<String>> organizationProfileName() {
        return Optional.ofNullable(this.organizationProfileName);
    }

    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="ownerRoleType")
    private @Nullable Output<String> ownerRoleType;

    public Optional<Output<String>> ownerRoleType() {
        return Optional.ofNullable(this.ownerRoleType);
    }

    @Import(name="profile")
    private @Nullable Output<String> profile;

    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    @Import(name="publishedOn")
    private @Nullable Output<String> publishedOn;

    public Optional<Output<String>> publishedOn() {
        return Optional.ofNullable(this.publishedOn);
    }

    @Import(name="regions")
    private @Nullable Output<String> regions;

    public Optional<Output<String>> regions() {
        return Optional.ofNullable(this.regions);
    }

    @Import(name="rejectedOn")
    private @Nullable Output<String> rejectedOn;

    public Optional<Output<String>> rejectedOn() {
        return Optional.ofNullable(this.rejectedOn);
    }

    @Import(name="reviewState")
    private @Nullable Output<String> reviewState;

    public Optional<Output<String>> reviewState() {
        return Optional.ofNullable(this.reviewState);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="subtitle")
    private @Nullable Output<String> subtitle;

    public Optional<Output<String>> subtitle() {
        return Optional.ofNullable(this.subtitle);
    }

    @Import(name="targetAccounts")
    private @Nullable Output<String> targetAccounts;

    public Optional<Output<String>> targetAccounts() {
        return Optional.ofNullable(this.targetAccounts);
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="uniformListingLocator")
    private @Nullable Output<String> uniformListingLocator;

    public Optional<Output<String>> uniformListingLocator() {
        return Optional.ofNullable(this.uniformListingLocator);
    }

    @Import(name="updatedOn")
    private @Nullable Output<String> updatedOn;

    public Optional<Output<String>> updatedOn() {
        return Optional.ofNullable(this.updatedOn);
    }

    private ListingShowOutputArgs() {}

    private ListingShowOutputArgs(ListingShowOutputArgs $) {
        this.comment = $.comment;
        this.createdOn = $.createdOn;
        this.detailedTargetAccounts = $.detailedTargetAccounts;
        this.distribution = $.distribution;
        this.globalName = $.globalName;
        this.isApplication = $.isApplication;
        this.isByRequest = $.isByRequest;
        this.isLimitedTrial = $.isLimitedTrial;
        this.isMonetized = $.isMonetized;
        this.isMountlessQueryable = $.isMountlessQueryable;
        this.isTargeted = $.isTargeted;
        this.name = $.name;
        this.organizationProfileName = $.organizationProfileName;
        this.owner = $.owner;
        this.ownerRoleType = $.ownerRoleType;
        this.profile = $.profile;
        this.publishedOn = $.publishedOn;
        this.regions = $.regions;
        this.rejectedOn = $.rejectedOn;
        this.reviewState = $.reviewState;
        this.state = $.state;
        this.subtitle = $.subtitle;
        this.targetAccounts = $.targetAccounts;
        this.title = $.title;
        this.uniformListingLocator = $.uniformListingLocator;
        this.updatedOn = $.updatedOn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListingShowOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListingShowOutputArgs $;

        public Builder() {
            $ = new ListingShowOutputArgs();
        }

        public Builder(ListingShowOutputArgs defaults) {
            $ = new ListingShowOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        public Builder detailedTargetAccounts(@Nullable Output<String> detailedTargetAccounts) {
            $.detailedTargetAccounts = detailedTargetAccounts;
            return this;
        }

        public Builder detailedTargetAccounts(String detailedTargetAccounts) {
            return detailedTargetAccounts(Output.of(detailedTargetAccounts));
        }

        public Builder distribution(@Nullable Output<String> distribution) {
            $.distribution = distribution;
            return this;
        }

        public Builder distribution(String distribution) {
            return distribution(Output.of(distribution));
        }

        public Builder globalName(@Nullable Output<String> globalName) {
            $.globalName = globalName;
            return this;
        }

        public Builder globalName(String globalName) {
            return globalName(Output.of(globalName));
        }

        public Builder isApplication(@Nullable Output<Boolean> isApplication) {
            $.isApplication = isApplication;
            return this;
        }

        public Builder isApplication(Boolean isApplication) {
            return isApplication(Output.of(isApplication));
        }

        public Builder isByRequest(@Nullable Output<Boolean> isByRequest) {
            $.isByRequest = isByRequest;
            return this;
        }

        public Builder isByRequest(Boolean isByRequest) {
            return isByRequest(Output.of(isByRequest));
        }

        public Builder isLimitedTrial(@Nullable Output<Boolean> isLimitedTrial) {
            $.isLimitedTrial = isLimitedTrial;
            return this;
        }

        public Builder isLimitedTrial(Boolean isLimitedTrial) {
            return isLimitedTrial(Output.of(isLimitedTrial));
        }

        public Builder isMonetized(@Nullable Output<Boolean> isMonetized) {
            $.isMonetized = isMonetized;
            return this;
        }

        public Builder isMonetized(Boolean isMonetized) {
            return isMonetized(Output.of(isMonetized));
        }

        public Builder isMountlessQueryable(@Nullable Output<Boolean> isMountlessQueryable) {
            $.isMountlessQueryable = isMountlessQueryable;
            return this;
        }

        public Builder isMountlessQueryable(Boolean isMountlessQueryable) {
            return isMountlessQueryable(Output.of(isMountlessQueryable));
        }

        public Builder isTargeted(@Nullable Output<Boolean> isTargeted) {
            $.isTargeted = isTargeted;
            return this;
        }

        public Builder isTargeted(Boolean isTargeted) {
            return isTargeted(Output.of(isTargeted));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder organizationProfileName(@Nullable Output<String> organizationProfileName) {
            $.organizationProfileName = organizationProfileName;
            return this;
        }

        public Builder organizationProfileName(String organizationProfileName) {
            return organizationProfileName(Output.of(organizationProfileName));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder ownerRoleType(@Nullable Output<String> ownerRoleType) {
            $.ownerRoleType = ownerRoleType;
            return this;
        }

        public Builder ownerRoleType(String ownerRoleType) {
            return ownerRoleType(Output.of(ownerRoleType));
        }

        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public Builder publishedOn(@Nullable Output<String> publishedOn) {
            $.publishedOn = publishedOn;
            return this;
        }

        public Builder publishedOn(String publishedOn) {
            return publishedOn(Output.of(publishedOn));
        }

        public Builder regions(@Nullable Output<String> regions) {
            $.regions = regions;
            return this;
        }

        public Builder regions(String regions) {
            return regions(Output.of(regions));
        }

        public Builder rejectedOn(@Nullable Output<String> rejectedOn) {
            $.rejectedOn = rejectedOn;
            return this;
        }

        public Builder rejectedOn(String rejectedOn) {
            return rejectedOn(Output.of(rejectedOn));
        }

        public Builder reviewState(@Nullable Output<String> reviewState) {
            $.reviewState = reviewState;
            return this;
        }

        public Builder reviewState(String reviewState) {
            return reviewState(Output.of(reviewState));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder subtitle(@Nullable Output<String> subtitle) {
            $.subtitle = subtitle;
            return this;
        }

        public Builder subtitle(String subtitle) {
            return subtitle(Output.of(subtitle));
        }

        public Builder targetAccounts(@Nullable Output<String> targetAccounts) {
            $.targetAccounts = targetAccounts;
            return this;
        }

        public Builder targetAccounts(String targetAccounts) {
            return targetAccounts(Output.of(targetAccounts));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder uniformListingLocator(@Nullable Output<String> uniformListingLocator) {
            $.uniformListingLocator = uniformListingLocator;
            return this;
        }

        public Builder uniformListingLocator(String uniformListingLocator) {
            return uniformListingLocator(Output.of(uniformListingLocator));
        }

        public Builder updatedOn(@Nullable Output<String> updatedOn) {
            $.updatedOn = updatedOn;
            return this;
        }

        public Builder updatedOn(String updatedOn) {
            return updatedOn(Output.of(updatedOn));
        }

        public ListingShowOutputArgs build() {
            return $;
        }
    }

}
