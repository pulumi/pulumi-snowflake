// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TagMaskingPolicyAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final TagMaskingPolicyAssociationState Empty = new TagMaskingPolicyAssociationState();

    /**
     * The resource id of the masking policy
     * 
     */
    @Import(name="maskingPolicyId")
    private @Nullable Output<String> maskingPolicyId;

    /**
     * @return The resource id of the masking policy
     * 
     */
    public Optional<Output<String>> maskingPolicyId() {
        return Optional.ofNullable(this.maskingPolicyId);
    }

    /**
     * Specifies the identifier for the tag. Note: format must follow: &#34;databaseName&#34;.&#34;schemaName&#34;.&#34;tagName&#34; or &#34;databaseName.schemaName.tagName&#34; or &#34;databaseName|schemaName.tagName&#34; (snowflake_tag.tag.id)
     * 
     */
    @Import(name="tagId")
    private @Nullable Output<String> tagId;

    /**
     * @return Specifies the identifier for the tag. Note: format must follow: &#34;databaseName&#34;.&#34;schemaName&#34;.&#34;tagName&#34; or &#34;databaseName.schemaName.tagName&#34; or &#34;databaseName|schemaName.tagName&#34; (snowflake_tag.tag.id)
     * 
     */
    public Optional<Output<String>> tagId() {
        return Optional.ofNullable(this.tagId);
    }

    private TagMaskingPolicyAssociationState() {}

    private TagMaskingPolicyAssociationState(TagMaskingPolicyAssociationState $) {
        this.maskingPolicyId = $.maskingPolicyId;
        this.tagId = $.tagId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagMaskingPolicyAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagMaskingPolicyAssociationState $;

        public Builder() {
            $ = new TagMaskingPolicyAssociationState();
        }

        public Builder(TagMaskingPolicyAssociationState defaults) {
            $ = new TagMaskingPolicyAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param maskingPolicyId The resource id of the masking policy
         * 
         * @return builder
         * 
         */
        public Builder maskingPolicyId(@Nullable Output<String> maskingPolicyId) {
            $.maskingPolicyId = maskingPolicyId;
            return this;
        }

        /**
         * @param maskingPolicyId The resource id of the masking policy
         * 
         * @return builder
         * 
         */
        public Builder maskingPolicyId(String maskingPolicyId) {
            return maskingPolicyId(Output.of(maskingPolicyId));
        }

        /**
         * @param tagId Specifies the identifier for the tag. Note: format must follow: &#34;databaseName&#34;.&#34;schemaName&#34;.&#34;tagName&#34; or &#34;databaseName.schemaName.tagName&#34; or &#34;databaseName|schemaName.tagName&#34; (snowflake_tag.tag.id)
         * 
         * @return builder
         * 
         */
        public Builder tagId(@Nullable Output<String> tagId) {
            $.tagId = tagId;
            return this;
        }

        /**
         * @param tagId Specifies the identifier for the tag. Note: format must follow: &#34;databaseName&#34;.&#34;schemaName&#34;.&#34;tagName&#34; or &#34;databaseName.schemaName.tagName&#34; or &#34;databaseName|schemaName.tagName&#34; (snowflake_tag.tag.id)
         * 
         * @return builder
         * 
         */
        public Builder tagId(String tagId) {
            return tagId(Output.of(tagId));
        }

        public TagMaskingPolicyAssociationState build() {
            return $;
        }
    }

}
