// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterAbortDetachedQuery;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterAutocommit;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterBinaryInputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterBinaryOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientMemoryLimit;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientMetadataRequestUseConnectionCtx;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientPrefetchThread;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientResultChunkSize;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientResultColumnCaseInsensitive;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientSessionKeepAlife;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterClientTimestampTypeMapping;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterDateInputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterDateOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterErrorOnNondeterministicMerge;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterErrorOnNondeterministicUpdate;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterGeographyOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterGeometryOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterJdbcUseSessionTimezone;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterJsonIndent;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterLockTimeout;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterLogLevel;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterMultiStatementCount;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterNoorderSequenceAsDefault;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterOdbcTreatDecimalAsInt;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterQueryTag;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterQuotedIdentifiersIgnoreCase;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterRowsPerResultset;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterS3StageVpceDnsName;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterSearchPath;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterStatementQueuedTimeoutInSecond;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterStatementTimeoutInSecond;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterStrictJsonOutput;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterSuspendTaskAfterNumFailure;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTaskAutoRetryAttempt;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimeInputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimeOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampDayIsAlways24h;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampInputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampLtzOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampNtzOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampTypeMapping;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimestampTzOutputFormat;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTimezone;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTraceLevel;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTransactionAbortOnError;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTransactionDefaultIsolationLevel;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterTwoDigitCenturyStart;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterUnsupportedDdlAction;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterUseCachedResult;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterUserTaskManagedInitialWarehouseSize;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterUserTaskTimeoutM;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterWeekOfYearPolicy;
import com.pulumi.snowflake.outputs.GetTasksTaskParameterWeekStart;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTasksTaskParameter {
    private List<GetTasksTaskParameterAbortDetachedQuery> abortDetachedQueries;
    private List<GetTasksTaskParameterAutocommit> autocommits;
    private List<GetTasksTaskParameterBinaryInputFormat> binaryInputFormats;
    private List<GetTasksTaskParameterBinaryOutputFormat> binaryOutputFormats;
    private List<GetTasksTaskParameterClientMemoryLimit> clientMemoryLimits;
    private List<GetTasksTaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes;
    private List<GetTasksTaskParameterClientPrefetchThread> clientPrefetchThreads;
    private List<GetTasksTaskParameterClientResultChunkSize> clientResultChunkSizes;
    private List<GetTasksTaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives;
    private List<GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies;
    private List<GetTasksTaskParameterClientSessionKeepAlife> clientSessionKeepAlives;
    private List<GetTasksTaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings;
    private List<GetTasksTaskParameterDateInputFormat> dateInputFormats;
    private List<GetTasksTaskParameterDateOutputFormat> dateOutputFormats;
    private List<GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations;
    private List<GetTasksTaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges;
    private List<GetTasksTaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates;
    private List<GetTasksTaskParameterGeographyOutputFormat> geographyOutputFormats;
    private List<GetTasksTaskParameterGeometryOutputFormat> geometryOutputFormats;
    private List<GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs;
    private List<GetTasksTaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones;
    private List<GetTasksTaskParameterJsonIndent> jsonIndents;
    private List<GetTasksTaskParameterLockTimeout> lockTimeouts;
    private List<GetTasksTaskParameterLogLevel> logLevels;
    private List<GetTasksTaskParameterMultiStatementCount> multiStatementCounts;
    private List<GetTasksTaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults;
    private List<GetTasksTaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts;
    private List<GetTasksTaskParameterQueryTag> queryTags;
    private List<GetTasksTaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
    private List<GetTasksTaskParameterRowsPerResultset> rowsPerResultsets;
    private List<GetTasksTaskParameterS3StageVpceDnsName> s3StageVpceDnsNames;
    private List<GetTasksTaskParameterSearchPath> searchPaths;
    private List<GetTasksTaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
    private List<GetTasksTaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds;
    private List<GetTasksTaskParameterStrictJsonOutput> strictJsonOutputs;
    private List<GetTasksTaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
    private List<GetTasksTaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
    private List<GetTasksTaskParameterTimeInputFormat> timeInputFormats;
    private List<GetTasksTaskParameterTimeOutputFormat> timeOutputFormats;
    private List<GetTasksTaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs;
    private List<GetTasksTaskParameterTimestampInputFormat> timestampInputFormats;
    private List<GetTasksTaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats;
    private List<GetTasksTaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats;
    private List<GetTasksTaskParameterTimestampOutputFormat> timestampOutputFormats;
    private List<GetTasksTaskParameterTimestampTypeMapping> timestampTypeMappings;
    private List<GetTasksTaskParameterTimestampTzOutputFormat> timestampTzOutputFormats;
    private List<GetTasksTaskParameterTimezone> timezones;
    private List<GetTasksTaskParameterTraceLevel> traceLevels;
    private List<GetTasksTaskParameterTransactionAbortOnError> transactionAbortOnErrors;
    private List<GetTasksTaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels;
    private List<GetTasksTaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts;
    private List<GetTasksTaskParameterUnsupportedDdlAction> unsupportedDdlActions;
    private List<GetTasksTaskParameterUseCachedResult> useCachedResults;
    private List<GetTasksTaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
    private List<GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
    private List<GetTasksTaskParameterUserTaskTimeoutM> userTaskTimeoutMs;
    private List<GetTasksTaskParameterWeekOfYearPolicy> weekOfYearPolicies;
    private List<GetTasksTaskParameterWeekStart> weekStarts;

    private GetTasksTaskParameter() {}
    public List<GetTasksTaskParameterAbortDetachedQuery> abortDetachedQueries() {
        return this.abortDetachedQueries;
    }
    public List<GetTasksTaskParameterAutocommit> autocommits() {
        return this.autocommits;
    }
    public List<GetTasksTaskParameterBinaryInputFormat> binaryInputFormats() {
        return this.binaryInputFormats;
    }
    public List<GetTasksTaskParameterBinaryOutputFormat> binaryOutputFormats() {
        return this.binaryOutputFormats;
    }
    public List<GetTasksTaskParameterClientMemoryLimit> clientMemoryLimits() {
        return this.clientMemoryLimits;
    }
    public List<GetTasksTaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes() {
        return this.clientMetadataRequestUseConnectionCtxes;
    }
    public List<GetTasksTaskParameterClientPrefetchThread> clientPrefetchThreads() {
        return this.clientPrefetchThreads;
    }
    public List<GetTasksTaskParameterClientResultChunkSize> clientResultChunkSizes() {
        return this.clientResultChunkSizes;
    }
    public List<GetTasksTaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives() {
        return this.clientResultColumnCaseInsensitives;
    }
    public List<GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies() {
        return this.clientSessionKeepAliveHeartbeatFrequencies;
    }
    public List<GetTasksTaskParameterClientSessionKeepAlife> clientSessionKeepAlives() {
        return this.clientSessionKeepAlives;
    }
    public List<GetTasksTaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings() {
        return this.clientTimestampTypeMappings;
    }
    public List<GetTasksTaskParameterDateInputFormat> dateInputFormats() {
        return this.dateInputFormats;
    }
    public List<GetTasksTaskParameterDateOutputFormat> dateOutputFormats() {
        return this.dateOutputFormats;
    }
    public List<GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations() {
        return this.enableUnloadPhysicalTypeOptimizations;
    }
    public List<GetTasksTaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges() {
        return this.errorOnNondeterministicMerges;
    }
    public List<GetTasksTaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates() {
        return this.errorOnNondeterministicUpdates;
    }
    public List<GetTasksTaskParameterGeographyOutputFormat> geographyOutputFormats() {
        return this.geographyOutputFormats;
    }
    public List<GetTasksTaskParameterGeometryOutputFormat> geometryOutputFormats() {
        return this.geometryOutputFormats;
    }
    public List<GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs() {
        return this.jdbcTreatTimestampNtzAsUtcs;
    }
    public List<GetTasksTaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones() {
        return this.jdbcUseSessionTimezones;
    }
    public List<GetTasksTaskParameterJsonIndent> jsonIndents() {
        return this.jsonIndents;
    }
    public List<GetTasksTaskParameterLockTimeout> lockTimeouts() {
        return this.lockTimeouts;
    }
    public List<GetTasksTaskParameterLogLevel> logLevels() {
        return this.logLevels;
    }
    public List<GetTasksTaskParameterMultiStatementCount> multiStatementCounts() {
        return this.multiStatementCounts;
    }
    public List<GetTasksTaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults() {
        return this.noorderSequenceAsDefaults;
    }
    public List<GetTasksTaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts() {
        return this.odbcTreatDecimalAsInts;
    }
    public List<GetTasksTaskParameterQueryTag> queryTags() {
        return this.queryTags;
    }
    public List<GetTasksTaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases() {
        return this.quotedIdentifiersIgnoreCases;
    }
    public List<GetTasksTaskParameterRowsPerResultset> rowsPerResultsets() {
        return this.rowsPerResultsets;
    }
    public List<GetTasksTaskParameterS3StageVpceDnsName> s3StageVpceDnsNames() {
        return this.s3StageVpceDnsNames;
    }
    public List<GetTasksTaskParameterSearchPath> searchPaths() {
        return this.searchPaths;
    }
    public List<GetTasksTaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds() {
        return this.statementQueuedTimeoutInSeconds;
    }
    public List<GetTasksTaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds() {
        return this.statementTimeoutInSeconds;
    }
    public List<GetTasksTaskParameterStrictJsonOutput> strictJsonOutputs() {
        return this.strictJsonOutputs;
    }
    public List<GetTasksTaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures() {
        return this.suspendTaskAfterNumFailures;
    }
    public List<GetTasksTaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts() {
        return this.taskAutoRetryAttempts;
    }
    public List<GetTasksTaskParameterTimeInputFormat> timeInputFormats() {
        return this.timeInputFormats;
    }
    public List<GetTasksTaskParameterTimeOutputFormat> timeOutputFormats() {
        return this.timeOutputFormats;
    }
    public List<GetTasksTaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs() {
        return this.timestampDayIsAlways24hs;
    }
    public List<GetTasksTaskParameterTimestampInputFormat> timestampInputFormats() {
        return this.timestampInputFormats;
    }
    public List<GetTasksTaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats() {
        return this.timestampLtzOutputFormats;
    }
    public List<GetTasksTaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats() {
        return this.timestampNtzOutputFormats;
    }
    public List<GetTasksTaskParameterTimestampOutputFormat> timestampOutputFormats() {
        return this.timestampOutputFormats;
    }
    public List<GetTasksTaskParameterTimestampTypeMapping> timestampTypeMappings() {
        return this.timestampTypeMappings;
    }
    public List<GetTasksTaskParameterTimestampTzOutputFormat> timestampTzOutputFormats() {
        return this.timestampTzOutputFormats;
    }
    public List<GetTasksTaskParameterTimezone> timezones() {
        return this.timezones;
    }
    public List<GetTasksTaskParameterTraceLevel> traceLevels() {
        return this.traceLevels;
    }
    public List<GetTasksTaskParameterTransactionAbortOnError> transactionAbortOnErrors() {
        return this.transactionAbortOnErrors;
    }
    public List<GetTasksTaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels() {
        return this.transactionDefaultIsolationLevels;
    }
    public List<GetTasksTaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts() {
        return this.twoDigitCenturyStarts;
    }
    public List<GetTasksTaskParameterUnsupportedDdlAction> unsupportedDdlActions() {
        return this.unsupportedDdlActions;
    }
    public List<GetTasksTaskParameterUseCachedResult> useCachedResults() {
        return this.useCachedResults;
    }
    public List<GetTasksTaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes() {
        return this.userTaskManagedInitialWarehouseSizes;
    }
    public List<GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds() {
        return this.userTaskMinimumTriggerIntervalInSeconds;
    }
    public List<GetTasksTaskParameterUserTaskTimeoutM> userTaskTimeoutMs() {
        return this.userTaskTimeoutMs;
    }
    public List<GetTasksTaskParameterWeekOfYearPolicy> weekOfYearPolicies() {
        return this.weekOfYearPolicies;
    }
    public List<GetTasksTaskParameterWeekStart> weekStarts() {
        return this.weekStarts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTasksTaskParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTasksTaskParameterAbortDetachedQuery> abortDetachedQueries;
        private List<GetTasksTaskParameterAutocommit> autocommits;
        private List<GetTasksTaskParameterBinaryInputFormat> binaryInputFormats;
        private List<GetTasksTaskParameterBinaryOutputFormat> binaryOutputFormats;
        private List<GetTasksTaskParameterClientMemoryLimit> clientMemoryLimits;
        private List<GetTasksTaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes;
        private List<GetTasksTaskParameterClientPrefetchThread> clientPrefetchThreads;
        private List<GetTasksTaskParameterClientResultChunkSize> clientResultChunkSizes;
        private List<GetTasksTaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives;
        private List<GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies;
        private List<GetTasksTaskParameterClientSessionKeepAlife> clientSessionKeepAlives;
        private List<GetTasksTaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings;
        private List<GetTasksTaskParameterDateInputFormat> dateInputFormats;
        private List<GetTasksTaskParameterDateOutputFormat> dateOutputFormats;
        private List<GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations;
        private List<GetTasksTaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges;
        private List<GetTasksTaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates;
        private List<GetTasksTaskParameterGeographyOutputFormat> geographyOutputFormats;
        private List<GetTasksTaskParameterGeometryOutputFormat> geometryOutputFormats;
        private List<GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs;
        private List<GetTasksTaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones;
        private List<GetTasksTaskParameterJsonIndent> jsonIndents;
        private List<GetTasksTaskParameterLockTimeout> lockTimeouts;
        private List<GetTasksTaskParameterLogLevel> logLevels;
        private List<GetTasksTaskParameterMultiStatementCount> multiStatementCounts;
        private List<GetTasksTaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults;
        private List<GetTasksTaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts;
        private List<GetTasksTaskParameterQueryTag> queryTags;
        private List<GetTasksTaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases;
        private List<GetTasksTaskParameterRowsPerResultset> rowsPerResultsets;
        private List<GetTasksTaskParameterS3StageVpceDnsName> s3StageVpceDnsNames;
        private List<GetTasksTaskParameterSearchPath> searchPaths;
        private List<GetTasksTaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds;
        private List<GetTasksTaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds;
        private List<GetTasksTaskParameterStrictJsonOutput> strictJsonOutputs;
        private List<GetTasksTaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures;
        private List<GetTasksTaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts;
        private List<GetTasksTaskParameterTimeInputFormat> timeInputFormats;
        private List<GetTasksTaskParameterTimeOutputFormat> timeOutputFormats;
        private List<GetTasksTaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs;
        private List<GetTasksTaskParameterTimestampInputFormat> timestampInputFormats;
        private List<GetTasksTaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats;
        private List<GetTasksTaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats;
        private List<GetTasksTaskParameterTimestampOutputFormat> timestampOutputFormats;
        private List<GetTasksTaskParameterTimestampTypeMapping> timestampTypeMappings;
        private List<GetTasksTaskParameterTimestampTzOutputFormat> timestampTzOutputFormats;
        private List<GetTasksTaskParameterTimezone> timezones;
        private List<GetTasksTaskParameterTraceLevel> traceLevels;
        private List<GetTasksTaskParameterTransactionAbortOnError> transactionAbortOnErrors;
        private List<GetTasksTaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels;
        private List<GetTasksTaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts;
        private List<GetTasksTaskParameterUnsupportedDdlAction> unsupportedDdlActions;
        private List<GetTasksTaskParameterUseCachedResult> useCachedResults;
        private List<GetTasksTaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes;
        private List<GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds;
        private List<GetTasksTaskParameterUserTaskTimeoutM> userTaskTimeoutMs;
        private List<GetTasksTaskParameterWeekOfYearPolicy> weekOfYearPolicies;
        private List<GetTasksTaskParameterWeekStart> weekStarts;
        public Builder() {}
        public Builder(GetTasksTaskParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abortDetachedQueries = defaults.abortDetachedQueries;
    	      this.autocommits = defaults.autocommits;
    	      this.binaryInputFormats = defaults.binaryInputFormats;
    	      this.binaryOutputFormats = defaults.binaryOutputFormats;
    	      this.clientMemoryLimits = defaults.clientMemoryLimits;
    	      this.clientMetadataRequestUseConnectionCtxes = defaults.clientMetadataRequestUseConnectionCtxes;
    	      this.clientPrefetchThreads = defaults.clientPrefetchThreads;
    	      this.clientResultChunkSizes = defaults.clientResultChunkSizes;
    	      this.clientResultColumnCaseInsensitives = defaults.clientResultColumnCaseInsensitives;
    	      this.clientSessionKeepAliveHeartbeatFrequencies = defaults.clientSessionKeepAliveHeartbeatFrequencies;
    	      this.clientSessionKeepAlives = defaults.clientSessionKeepAlives;
    	      this.clientTimestampTypeMappings = defaults.clientTimestampTypeMappings;
    	      this.dateInputFormats = defaults.dateInputFormats;
    	      this.dateOutputFormats = defaults.dateOutputFormats;
    	      this.enableUnloadPhysicalTypeOptimizations = defaults.enableUnloadPhysicalTypeOptimizations;
    	      this.errorOnNondeterministicMerges = defaults.errorOnNondeterministicMerges;
    	      this.errorOnNondeterministicUpdates = defaults.errorOnNondeterministicUpdates;
    	      this.geographyOutputFormats = defaults.geographyOutputFormats;
    	      this.geometryOutputFormats = defaults.geometryOutputFormats;
    	      this.jdbcTreatTimestampNtzAsUtcs = defaults.jdbcTreatTimestampNtzAsUtcs;
    	      this.jdbcUseSessionTimezones = defaults.jdbcUseSessionTimezones;
    	      this.jsonIndents = defaults.jsonIndents;
    	      this.lockTimeouts = defaults.lockTimeouts;
    	      this.logLevels = defaults.logLevels;
    	      this.multiStatementCounts = defaults.multiStatementCounts;
    	      this.noorderSequenceAsDefaults = defaults.noorderSequenceAsDefaults;
    	      this.odbcTreatDecimalAsInts = defaults.odbcTreatDecimalAsInts;
    	      this.queryTags = defaults.queryTags;
    	      this.quotedIdentifiersIgnoreCases = defaults.quotedIdentifiersIgnoreCases;
    	      this.rowsPerResultsets = defaults.rowsPerResultsets;
    	      this.s3StageVpceDnsNames = defaults.s3StageVpceDnsNames;
    	      this.searchPaths = defaults.searchPaths;
    	      this.statementQueuedTimeoutInSeconds = defaults.statementQueuedTimeoutInSeconds;
    	      this.statementTimeoutInSeconds = defaults.statementTimeoutInSeconds;
    	      this.strictJsonOutputs = defaults.strictJsonOutputs;
    	      this.suspendTaskAfterNumFailures = defaults.suspendTaskAfterNumFailures;
    	      this.taskAutoRetryAttempts = defaults.taskAutoRetryAttempts;
    	      this.timeInputFormats = defaults.timeInputFormats;
    	      this.timeOutputFormats = defaults.timeOutputFormats;
    	      this.timestampDayIsAlways24hs = defaults.timestampDayIsAlways24hs;
    	      this.timestampInputFormats = defaults.timestampInputFormats;
    	      this.timestampLtzOutputFormats = defaults.timestampLtzOutputFormats;
    	      this.timestampNtzOutputFormats = defaults.timestampNtzOutputFormats;
    	      this.timestampOutputFormats = defaults.timestampOutputFormats;
    	      this.timestampTypeMappings = defaults.timestampTypeMappings;
    	      this.timestampTzOutputFormats = defaults.timestampTzOutputFormats;
    	      this.timezones = defaults.timezones;
    	      this.traceLevels = defaults.traceLevels;
    	      this.transactionAbortOnErrors = defaults.transactionAbortOnErrors;
    	      this.transactionDefaultIsolationLevels = defaults.transactionDefaultIsolationLevels;
    	      this.twoDigitCenturyStarts = defaults.twoDigitCenturyStarts;
    	      this.unsupportedDdlActions = defaults.unsupportedDdlActions;
    	      this.useCachedResults = defaults.useCachedResults;
    	      this.userTaskManagedInitialWarehouseSizes = defaults.userTaskManagedInitialWarehouseSizes;
    	      this.userTaskMinimumTriggerIntervalInSeconds = defaults.userTaskMinimumTriggerIntervalInSeconds;
    	      this.userTaskTimeoutMs = defaults.userTaskTimeoutMs;
    	      this.weekOfYearPolicies = defaults.weekOfYearPolicies;
    	      this.weekStarts = defaults.weekStarts;
        }

        @CustomType.Setter
        public Builder abortDetachedQueries(List<GetTasksTaskParameterAbortDetachedQuery> abortDetachedQueries) {
            if (abortDetachedQueries == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "abortDetachedQueries");
            }
            this.abortDetachedQueries = abortDetachedQueries;
            return this;
        }
        public Builder abortDetachedQueries(GetTasksTaskParameterAbortDetachedQuery... abortDetachedQueries) {
            return abortDetachedQueries(List.of(abortDetachedQueries));
        }
        @CustomType.Setter
        public Builder autocommits(List<GetTasksTaskParameterAutocommit> autocommits) {
            if (autocommits == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "autocommits");
            }
            this.autocommits = autocommits;
            return this;
        }
        public Builder autocommits(GetTasksTaskParameterAutocommit... autocommits) {
            return autocommits(List.of(autocommits));
        }
        @CustomType.Setter
        public Builder binaryInputFormats(List<GetTasksTaskParameterBinaryInputFormat> binaryInputFormats) {
            if (binaryInputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "binaryInputFormats");
            }
            this.binaryInputFormats = binaryInputFormats;
            return this;
        }
        public Builder binaryInputFormats(GetTasksTaskParameterBinaryInputFormat... binaryInputFormats) {
            return binaryInputFormats(List.of(binaryInputFormats));
        }
        @CustomType.Setter
        public Builder binaryOutputFormats(List<GetTasksTaskParameterBinaryOutputFormat> binaryOutputFormats) {
            if (binaryOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "binaryOutputFormats");
            }
            this.binaryOutputFormats = binaryOutputFormats;
            return this;
        }
        public Builder binaryOutputFormats(GetTasksTaskParameterBinaryOutputFormat... binaryOutputFormats) {
            return binaryOutputFormats(List.of(binaryOutputFormats));
        }
        @CustomType.Setter
        public Builder clientMemoryLimits(List<GetTasksTaskParameterClientMemoryLimit> clientMemoryLimits) {
            if (clientMemoryLimits == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientMemoryLimits");
            }
            this.clientMemoryLimits = clientMemoryLimits;
            return this;
        }
        public Builder clientMemoryLimits(GetTasksTaskParameterClientMemoryLimit... clientMemoryLimits) {
            return clientMemoryLimits(List.of(clientMemoryLimits));
        }
        @CustomType.Setter
        public Builder clientMetadataRequestUseConnectionCtxes(List<GetTasksTaskParameterClientMetadataRequestUseConnectionCtx> clientMetadataRequestUseConnectionCtxes) {
            if (clientMetadataRequestUseConnectionCtxes == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientMetadataRequestUseConnectionCtxes");
            }
            this.clientMetadataRequestUseConnectionCtxes = clientMetadataRequestUseConnectionCtxes;
            return this;
        }
        public Builder clientMetadataRequestUseConnectionCtxes(GetTasksTaskParameterClientMetadataRequestUseConnectionCtx... clientMetadataRequestUseConnectionCtxes) {
            return clientMetadataRequestUseConnectionCtxes(List.of(clientMetadataRequestUseConnectionCtxes));
        }
        @CustomType.Setter
        public Builder clientPrefetchThreads(List<GetTasksTaskParameterClientPrefetchThread> clientPrefetchThreads) {
            if (clientPrefetchThreads == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientPrefetchThreads");
            }
            this.clientPrefetchThreads = clientPrefetchThreads;
            return this;
        }
        public Builder clientPrefetchThreads(GetTasksTaskParameterClientPrefetchThread... clientPrefetchThreads) {
            return clientPrefetchThreads(List.of(clientPrefetchThreads));
        }
        @CustomType.Setter
        public Builder clientResultChunkSizes(List<GetTasksTaskParameterClientResultChunkSize> clientResultChunkSizes) {
            if (clientResultChunkSizes == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientResultChunkSizes");
            }
            this.clientResultChunkSizes = clientResultChunkSizes;
            return this;
        }
        public Builder clientResultChunkSizes(GetTasksTaskParameterClientResultChunkSize... clientResultChunkSizes) {
            return clientResultChunkSizes(List.of(clientResultChunkSizes));
        }
        @CustomType.Setter
        public Builder clientResultColumnCaseInsensitives(List<GetTasksTaskParameterClientResultColumnCaseInsensitive> clientResultColumnCaseInsensitives) {
            if (clientResultColumnCaseInsensitives == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientResultColumnCaseInsensitives");
            }
            this.clientResultColumnCaseInsensitives = clientResultColumnCaseInsensitives;
            return this;
        }
        public Builder clientResultColumnCaseInsensitives(GetTasksTaskParameterClientResultColumnCaseInsensitive... clientResultColumnCaseInsensitives) {
            return clientResultColumnCaseInsensitives(List.of(clientResultColumnCaseInsensitives));
        }
        @CustomType.Setter
        public Builder clientSessionKeepAliveHeartbeatFrequencies(List<GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency> clientSessionKeepAliveHeartbeatFrequencies) {
            if (clientSessionKeepAliveHeartbeatFrequencies == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientSessionKeepAliveHeartbeatFrequencies");
            }
            this.clientSessionKeepAliveHeartbeatFrequencies = clientSessionKeepAliveHeartbeatFrequencies;
            return this;
        }
        public Builder clientSessionKeepAliveHeartbeatFrequencies(GetTasksTaskParameterClientSessionKeepAliveHeartbeatFrequency... clientSessionKeepAliveHeartbeatFrequencies) {
            return clientSessionKeepAliveHeartbeatFrequencies(List.of(clientSessionKeepAliveHeartbeatFrequencies));
        }
        @CustomType.Setter
        public Builder clientSessionKeepAlives(List<GetTasksTaskParameterClientSessionKeepAlife> clientSessionKeepAlives) {
            if (clientSessionKeepAlives == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientSessionKeepAlives");
            }
            this.clientSessionKeepAlives = clientSessionKeepAlives;
            return this;
        }
        public Builder clientSessionKeepAlives(GetTasksTaskParameterClientSessionKeepAlife... clientSessionKeepAlives) {
            return clientSessionKeepAlives(List.of(clientSessionKeepAlives));
        }
        @CustomType.Setter
        public Builder clientTimestampTypeMappings(List<GetTasksTaskParameterClientTimestampTypeMapping> clientTimestampTypeMappings) {
            if (clientTimestampTypeMappings == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "clientTimestampTypeMappings");
            }
            this.clientTimestampTypeMappings = clientTimestampTypeMappings;
            return this;
        }
        public Builder clientTimestampTypeMappings(GetTasksTaskParameterClientTimestampTypeMapping... clientTimestampTypeMappings) {
            return clientTimestampTypeMappings(List.of(clientTimestampTypeMappings));
        }
        @CustomType.Setter
        public Builder dateInputFormats(List<GetTasksTaskParameterDateInputFormat> dateInputFormats) {
            if (dateInputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "dateInputFormats");
            }
            this.dateInputFormats = dateInputFormats;
            return this;
        }
        public Builder dateInputFormats(GetTasksTaskParameterDateInputFormat... dateInputFormats) {
            return dateInputFormats(List.of(dateInputFormats));
        }
        @CustomType.Setter
        public Builder dateOutputFormats(List<GetTasksTaskParameterDateOutputFormat> dateOutputFormats) {
            if (dateOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "dateOutputFormats");
            }
            this.dateOutputFormats = dateOutputFormats;
            return this;
        }
        public Builder dateOutputFormats(GetTasksTaskParameterDateOutputFormat... dateOutputFormats) {
            return dateOutputFormats(List.of(dateOutputFormats));
        }
        @CustomType.Setter
        public Builder enableUnloadPhysicalTypeOptimizations(List<GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization> enableUnloadPhysicalTypeOptimizations) {
            if (enableUnloadPhysicalTypeOptimizations == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "enableUnloadPhysicalTypeOptimizations");
            }
            this.enableUnloadPhysicalTypeOptimizations = enableUnloadPhysicalTypeOptimizations;
            return this;
        }
        public Builder enableUnloadPhysicalTypeOptimizations(GetTasksTaskParameterEnableUnloadPhysicalTypeOptimization... enableUnloadPhysicalTypeOptimizations) {
            return enableUnloadPhysicalTypeOptimizations(List.of(enableUnloadPhysicalTypeOptimizations));
        }
        @CustomType.Setter
        public Builder errorOnNondeterministicMerges(List<GetTasksTaskParameterErrorOnNondeterministicMerge> errorOnNondeterministicMerges) {
            if (errorOnNondeterministicMerges == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "errorOnNondeterministicMerges");
            }
            this.errorOnNondeterministicMerges = errorOnNondeterministicMerges;
            return this;
        }
        public Builder errorOnNondeterministicMerges(GetTasksTaskParameterErrorOnNondeterministicMerge... errorOnNondeterministicMerges) {
            return errorOnNondeterministicMerges(List.of(errorOnNondeterministicMerges));
        }
        @CustomType.Setter
        public Builder errorOnNondeterministicUpdates(List<GetTasksTaskParameterErrorOnNondeterministicUpdate> errorOnNondeterministicUpdates) {
            if (errorOnNondeterministicUpdates == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "errorOnNondeterministicUpdates");
            }
            this.errorOnNondeterministicUpdates = errorOnNondeterministicUpdates;
            return this;
        }
        public Builder errorOnNondeterministicUpdates(GetTasksTaskParameterErrorOnNondeterministicUpdate... errorOnNondeterministicUpdates) {
            return errorOnNondeterministicUpdates(List.of(errorOnNondeterministicUpdates));
        }
        @CustomType.Setter
        public Builder geographyOutputFormats(List<GetTasksTaskParameterGeographyOutputFormat> geographyOutputFormats) {
            if (geographyOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "geographyOutputFormats");
            }
            this.geographyOutputFormats = geographyOutputFormats;
            return this;
        }
        public Builder geographyOutputFormats(GetTasksTaskParameterGeographyOutputFormat... geographyOutputFormats) {
            return geographyOutputFormats(List.of(geographyOutputFormats));
        }
        @CustomType.Setter
        public Builder geometryOutputFormats(List<GetTasksTaskParameterGeometryOutputFormat> geometryOutputFormats) {
            if (geometryOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "geometryOutputFormats");
            }
            this.geometryOutputFormats = geometryOutputFormats;
            return this;
        }
        public Builder geometryOutputFormats(GetTasksTaskParameterGeometryOutputFormat... geometryOutputFormats) {
            return geometryOutputFormats(List.of(geometryOutputFormats));
        }
        @CustomType.Setter
        public Builder jdbcTreatTimestampNtzAsUtcs(List<GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc> jdbcTreatTimestampNtzAsUtcs) {
            if (jdbcTreatTimestampNtzAsUtcs == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "jdbcTreatTimestampNtzAsUtcs");
            }
            this.jdbcTreatTimestampNtzAsUtcs = jdbcTreatTimestampNtzAsUtcs;
            return this;
        }
        public Builder jdbcTreatTimestampNtzAsUtcs(GetTasksTaskParameterJdbcTreatTimestampNtzAsUtc... jdbcTreatTimestampNtzAsUtcs) {
            return jdbcTreatTimestampNtzAsUtcs(List.of(jdbcTreatTimestampNtzAsUtcs));
        }
        @CustomType.Setter
        public Builder jdbcUseSessionTimezones(List<GetTasksTaskParameterJdbcUseSessionTimezone> jdbcUseSessionTimezones) {
            if (jdbcUseSessionTimezones == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "jdbcUseSessionTimezones");
            }
            this.jdbcUseSessionTimezones = jdbcUseSessionTimezones;
            return this;
        }
        public Builder jdbcUseSessionTimezones(GetTasksTaskParameterJdbcUseSessionTimezone... jdbcUseSessionTimezones) {
            return jdbcUseSessionTimezones(List.of(jdbcUseSessionTimezones));
        }
        @CustomType.Setter
        public Builder jsonIndents(List<GetTasksTaskParameterJsonIndent> jsonIndents) {
            if (jsonIndents == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "jsonIndents");
            }
            this.jsonIndents = jsonIndents;
            return this;
        }
        public Builder jsonIndents(GetTasksTaskParameterJsonIndent... jsonIndents) {
            return jsonIndents(List.of(jsonIndents));
        }
        @CustomType.Setter
        public Builder lockTimeouts(List<GetTasksTaskParameterLockTimeout> lockTimeouts) {
            if (lockTimeouts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "lockTimeouts");
            }
            this.lockTimeouts = lockTimeouts;
            return this;
        }
        public Builder lockTimeouts(GetTasksTaskParameterLockTimeout... lockTimeouts) {
            return lockTimeouts(List.of(lockTimeouts));
        }
        @CustomType.Setter
        public Builder logLevels(List<GetTasksTaskParameterLogLevel> logLevels) {
            if (logLevels == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "logLevels");
            }
            this.logLevels = logLevels;
            return this;
        }
        public Builder logLevels(GetTasksTaskParameterLogLevel... logLevels) {
            return logLevels(List.of(logLevels));
        }
        @CustomType.Setter
        public Builder multiStatementCounts(List<GetTasksTaskParameterMultiStatementCount> multiStatementCounts) {
            if (multiStatementCounts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "multiStatementCounts");
            }
            this.multiStatementCounts = multiStatementCounts;
            return this;
        }
        public Builder multiStatementCounts(GetTasksTaskParameterMultiStatementCount... multiStatementCounts) {
            return multiStatementCounts(List.of(multiStatementCounts));
        }
        @CustomType.Setter
        public Builder noorderSequenceAsDefaults(List<GetTasksTaskParameterNoorderSequenceAsDefault> noorderSequenceAsDefaults) {
            if (noorderSequenceAsDefaults == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "noorderSequenceAsDefaults");
            }
            this.noorderSequenceAsDefaults = noorderSequenceAsDefaults;
            return this;
        }
        public Builder noorderSequenceAsDefaults(GetTasksTaskParameterNoorderSequenceAsDefault... noorderSequenceAsDefaults) {
            return noorderSequenceAsDefaults(List.of(noorderSequenceAsDefaults));
        }
        @CustomType.Setter
        public Builder odbcTreatDecimalAsInts(List<GetTasksTaskParameterOdbcTreatDecimalAsInt> odbcTreatDecimalAsInts) {
            if (odbcTreatDecimalAsInts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "odbcTreatDecimalAsInts");
            }
            this.odbcTreatDecimalAsInts = odbcTreatDecimalAsInts;
            return this;
        }
        public Builder odbcTreatDecimalAsInts(GetTasksTaskParameterOdbcTreatDecimalAsInt... odbcTreatDecimalAsInts) {
            return odbcTreatDecimalAsInts(List.of(odbcTreatDecimalAsInts));
        }
        @CustomType.Setter
        public Builder queryTags(List<GetTasksTaskParameterQueryTag> queryTags) {
            if (queryTags == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "queryTags");
            }
            this.queryTags = queryTags;
            return this;
        }
        public Builder queryTags(GetTasksTaskParameterQueryTag... queryTags) {
            return queryTags(List.of(queryTags));
        }
        @CustomType.Setter
        public Builder quotedIdentifiersIgnoreCases(List<GetTasksTaskParameterQuotedIdentifiersIgnoreCase> quotedIdentifiersIgnoreCases) {
            if (quotedIdentifiersIgnoreCases == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "quotedIdentifiersIgnoreCases");
            }
            this.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            return this;
        }
        public Builder quotedIdentifiersIgnoreCases(GetTasksTaskParameterQuotedIdentifiersIgnoreCase... quotedIdentifiersIgnoreCases) {
            return quotedIdentifiersIgnoreCases(List.of(quotedIdentifiersIgnoreCases));
        }
        @CustomType.Setter
        public Builder rowsPerResultsets(List<GetTasksTaskParameterRowsPerResultset> rowsPerResultsets) {
            if (rowsPerResultsets == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "rowsPerResultsets");
            }
            this.rowsPerResultsets = rowsPerResultsets;
            return this;
        }
        public Builder rowsPerResultsets(GetTasksTaskParameterRowsPerResultset... rowsPerResultsets) {
            return rowsPerResultsets(List.of(rowsPerResultsets));
        }
        @CustomType.Setter
        public Builder s3StageVpceDnsNames(List<GetTasksTaskParameterS3StageVpceDnsName> s3StageVpceDnsNames) {
            if (s3StageVpceDnsNames == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "s3StageVpceDnsNames");
            }
            this.s3StageVpceDnsNames = s3StageVpceDnsNames;
            return this;
        }
        public Builder s3StageVpceDnsNames(GetTasksTaskParameterS3StageVpceDnsName... s3StageVpceDnsNames) {
            return s3StageVpceDnsNames(List.of(s3StageVpceDnsNames));
        }
        @CustomType.Setter
        public Builder searchPaths(List<GetTasksTaskParameterSearchPath> searchPaths) {
            if (searchPaths == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "searchPaths");
            }
            this.searchPaths = searchPaths;
            return this;
        }
        public Builder searchPaths(GetTasksTaskParameterSearchPath... searchPaths) {
            return searchPaths(List.of(searchPaths));
        }
        @CustomType.Setter
        public Builder statementQueuedTimeoutInSeconds(List<GetTasksTaskParameterStatementQueuedTimeoutInSecond> statementQueuedTimeoutInSeconds) {
            if (statementQueuedTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "statementQueuedTimeoutInSeconds");
            }
            this.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            return this;
        }
        public Builder statementQueuedTimeoutInSeconds(GetTasksTaskParameterStatementQueuedTimeoutInSecond... statementQueuedTimeoutInSeconds) {
            return statementQueuedTimeoutInSeconds(List.of(statementQueuedTimeoutInSeconds));
        }
        @CustomType.Setter
        public Builder statementTimeoutInSeconds(List<GetTasksTaskParameterStatementTimeoutInSecond> statementTimeoutInSeconds) {
            if (statementTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "statementTimeoutInSeconds");
            }
            this.statementTimeoutInSeconds = statementTimeoutInSeconds;
            return this;
        }
        public Builder statementTimeoutInSeconds(GetTasksTaskParameterStatementTimeoutInSecond... statementTimeoutInSeconds) {
            return statementTimeoutInSeconds(List.of(statementTimeoutInSeconds));
        }
        @CustomType.Setter
        public Builder strictJsonOutputs(List<GetTasksTaskParameterStrictJsonOutput> strictJsonOutputs) {
            if (strictJsonOutputs == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "strictJsonOutputs");
            }
            this.strictJsonOutputs = strictJsonOutputs;
            return this;
        }
        public Builder strictJsonOutputs(GetTasksTaskParameterStrictJsonOutput... strictJsonOutputs) {
            return strictJsonOutputs(List.of(strictJsonOutputs));
        }
        @CustomType.Setter
        public Builder suspendTaskAfterNumFailures(List<GetTasksTaskParameterSuspendTaskAfterNumFailure> suspendTaskAfterNumFailures) {
            if (suspendTaskAfterNumFailures == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "suspendTaskAfterNumFailures");
            }
            this.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            return this;
        }
        public Builder suspendTaskAfterNumFailures(GetTasksTaskParameterSuspendTaskAfterNumFailure... suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(List.of(suspendTaskAfterNumFailures));
        }
        @CustomType.Setter
        public Builder taskAutoRetryAttempts(List<GetTasksTaskParameterTaskAutoRetryAttempt> taskAutoRetryAttempts) {
            if (taskAutoRetryAttempts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "taskAutoRetryAttempts");
            }
            this.taskAutoRetryAttempts = taskAutoRetryAttempts;
            return this;
        }
        public Builder taskAutoRetryAttempts(GetTasksTaskParameterTaskAutoRetryAttempt... taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(List.of(taskAutoRetryAttempts));
        }
        @CustomType.Setter
        public Builder timeInputFormats(List<GetTasksTaskParameterTimeInputFormat> timeInputFormats) {
            if (timeInputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timeInputFormats");
            }
            this.timeInputFormats = timeInputFormats;
            return this;
        }
        public Builder timeInputFormats(GetTasksTaskParameterTimeInputFormat... timeInputFormats) {
            return timeInputFormats(List.of(timeInputFormats));
        }
        @CustomType.Setter
        public Builder timeOutputFormats(List<GetTasksTaskParameterTimeOutputFormat> timeOutputFormats) {
            if (timeOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timeOutputFormats");
            }
            this.timeOutputFormats = timeOutputFormats;
            return this;
        }
        public Builder timeOutputFormats(GetTasksTaskParameterTimeOutputFormat... timeOutputFormats) {
            return timeOutputFormats(List.of(timeOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampDayIsAlways24hs(List<GetTasksTaskParameterTimestampDayIsAlways24h> timestampDayIsAlways24hs) {
            if (timestampDayIsAlways24hs == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampDayIsAlways24hs");
            }
            this.timestampDayIsAlways24hs = timestampDayIsAlways24hs;
            return this;
        }
        public Builder timestampDayIsAlways24hs(GetTasksTaskParameterTimestampDayIsAlways24h... timestampDayIsAlways24hs) {
            return timestampDayIsAlways24hs(List.of(timestampDayIsAlways24hs));
        }
        @CustomType.Setter
        public Builder timestampInputFormats(List<GetTasksTaskParameterTimestampInputFormat> timestampInputFormats) {
            if (timestampInputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampInputFormats");
            }
            this.timestampInputFormats = timestampInputFormats;
            return this;
        }
        public Builder timestampInputFormats(GetTasksTaskParameterTimestampInputFormat... timestampInputFormats) {
            return timestampInputFormats(List.of(timestampInputFormats));
        }
        @CustomType.Setter
        public Builder timestampLtzOutputFormats(List<GetTasksTaskParameterTimestampLtzOutputFormat> timestampLtzOutputFormats) {
            if (timestampLtzOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampLtzOutputFormats");
            }
            this.timestampLtzOutputFormats = timestampLtzOutputFormats;
            return this;
        }
        public Builder timestampLtzOutputFormats(GetTasksTaskParameterTimestampLtzOutputFormat... timestampLtzOutputFormats) {
            return timestampLtzOutputFormats(List.of(timestampLtzOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampNtzOutputFormats(List<GetTasksTaskParameterTimestampNtzOutputFormat> timestampNtzOutputFormats) {
            if (timestampNtzOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampNtzOutputFormats");
            }
            this.timestampNtzOutputFormats = timestampNtzOutputFormats;
            return this;
        }
        public Builder timestampNtzOutputFormats(GetTasksTaskParameterTimestampNtzOutputFormat... timestampNtzOutputFormats) {
            return timestampNtzOutputFormats(List.of(timestampNtzOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampOutputFormats(List<GetTasksTaskParameterTimestampOutputFormat> timestampOutputFormats) {
            if (timestampOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampOutputFormats");
            }
            this.timestampOutputFormats = timestampOutputFormats;
            return this;
        }
        public Builder timestampOutputFormats(GetTasksTaskParameterTimestampOutputFormat... timestampOutputFormats) {
            return timestampOutputFormats(List.of(timestampOutputFormats));
        }
        @CustomType.Setter
        public Builder timestampTypeMappings(List<GetTasksTaskParameterTimestampTypeMapping> timestampTypeMappings) {
            if (timestampTypeMappings == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampTypeMappings");
            }
            this.timestampTypeMappings = timestampTypeMappings;
            return this;
        }
        public Builder timestampTypeMappings(GetTasksTaskParameterTimestampTypeMapping... timestampTypeMappings) {
            return timestampTypeMappings(List.of(timestampTypeMappings));
        }
        @CustomType.Setter
        public Builder timestampTzOutputFormats(List<GetTasksTaskParameterTimestampTzOutputFormat> timestampTzOutputFormats) {
            if (timestampTzOutputFormats == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timestampTzOutputFormats");
            }
            this.timestampTzOutputFormats = timestampTzOutputFormats;
            return this;
        }
        public Builder timestampTzOutputFormats(GetTasksTaskParameterTimestampTzOutputFormat... timestampTzOutputFormats) {
            return timestampTzOutputFormats(List.of(timestampTzOutputFormats));
        }
        @CustomType.Setter
        public Builder timezones(List<GetTasksTaskParameterTimezone> timezones) {
            if (timezones == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "timezones");
            }
            this.timezones = timezones;
            return this;
        }
        public Builder timezones(GetTasksTaskParameterTimezone... timezones) {
            return timezones(List.of(timezones));
        }
        @CustomType.Setter
        public Builder traceLevels(List<GetTasksTaskParameterTraceLevel> traceLevels) {
            if (traceLevels == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "traceLevels");
            }
            this.traceLevels = traceLevels;
            return this;
        }
        public Builder traceLevels(GetTasksTaskParameterTraceLevel... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }
        @CustomType.Setter
        public Builder transactionAbortOnErrors(List<GetTasksTaskParameterTransactionAbortOnError> transactionAbortOnErrors) {
            if (transactionAbortOnErrors == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "transactionAbortOnErrors");
            }
            this.transactionAbortOnErrors = transactionAbortOnErrors;
            return this;
        }
        public Builder transactionAbortOnErrors(GetTasksTaskParameterTransactionAbortOnError... transactionAbortOnErrors) {
            return transactionAbortOnErrors(List.of(transactionAbortOnErrors));
        }
        @CustomType.Setter
        public Builder transactionDefaultIsolationLevels(List<GetTasksTaskParameterTransactionDefaultIsolationLevel> transactionDefaultIsolationLevels) {
            if (transactionDefaultIsolationLevels == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "transactionDefaultIsolationLevels");
            }
            this.transactionDefaultIsolationLevels = transactionDefaultIsolationLevels;
            return this;
        }
        public Builder transactionDefaultIsolationLevels(GetTasksTaskParameterTransactionDefaultIsolationLevel... transactionDefaultIsolationLevels) {
            return transactionDefaultIsolationLevels(List.of(transactionDefaultIsolationLevels));
        }
        @CustomType.Setter
        public Builder twoDigitCenturyStarts(List<GetTasksTaskParameterTwoDigitCenturyStart> twoDigitCenturyStarts) {
            if (twoDigitCenturyStarts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "twoDigitCenturyStarts");
            }
            this.twoDigitCenturyStarts = twoDigitCenturyStarts;
            return this;
        }
        public Builder twoDigitCenturyStarts(GetTasksTaskParameterTwoDigitCenturyStart... twoDigitCenturyStarts) {
            return twoDigitCenturyStarts(List.of(twoDigitCenturyStarts));
        }
        @CustomType.Setter
        public Builder unsupportedDdlActions(List<GetTasksTaskParameterUnsupportedDdlAction> unsupportedDdlActions) {
            if (unsupportedDdlActions == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "unsupportedDdlActions");
            }
            this.unsupportedDdlActions = unsupportedDdlActions;
            return this;
        }
        public Builder unsupportedDdlActions(GetTasksTaskParameterUnsupportedDdlAction... unsupportedDdlActions) {
            return unsupportedDdlActions(List.of(unsupportedDdlActions));
        }
        @CustomType.Setter
        public Builder useCachedResults(List<GetTasksTaskParameterUseCachedResult> useCachedResults) {
            if (useCachedResults == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "useCachedResults");
            }
            this.useCachedResults = useCachedResults;
            return this;
        }
        public Builder useCachedResults(GetTasksTaskParameterUseCachedResult... useCachedResults) {
            return useCachedResults(List.of(useCachedResults));
        }
        @CustomType.Setter
        public Builder userTaskManagedInitialWarehouseSizes(List<GetTasksTaskParameterUserTaskManagedInitialWarehouseSize> userTaskManagedInitialWarehouseSizes) {
            if (userTaskManagedInitialWarehouseSizes == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "userTaskManagedInitialWarehouseSizes");
            }
            this.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            return this;
        }
        public Builder userTaskManagedInitialWarehouseSizes(GetTasksTaskParameterUserTaskManagedInitialWarehouseSize... userTaskManagedInitialWarehouseSizes) {
            return userTaskManagedInitialWarehouseSizes(List.of(userTaskManagedInitialWarehouseSizes));
        }
        @CustomType.Setter
        public Builder userTaskMinimumTriggerIntervalInSeconds(List<GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond> userTaskMinimumTriggerIntervalInSeconds) {
            if (userTaskMinimumTriggerIntervalInSeconds == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "userTaskMinimumTriggerIntervalInSeconds");
            }
            this.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            return this;
        }
        public Builder userTaskMinimumTriggerIntervalInSeconds(GetTasksTaskParameterUserTaskMinimumTriggerIntervalInSecond... userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(List.of(userTaskMinimumTriggerIntervalInSeconds));
        }
        @CustomType.Setter
        public Builder userTaskTimeoutMs(List<GetTasksTaskParameterUserTaskTimeoutM> userTaskTimeoutMs) {
            if (userTaskTimeoutMs == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "userTaskTimeoutMs");
            }
            this.userTaskTimeoutMs = userTaskTimeoutMs;
            return this;
        }
        public Builder userTaskTimeoutMs(GetTasksTaskParameterUserTaskTimeoutM... userTaskTimeoutMs) {
            return userTaskTimeoutMs(List.of(userTaskTimeoutMs));
        }
        @CustomType.Setter
        public Builder weekOfYearPolicies(List<GetTasksTaskParameterWeekOfYearPolicy> weekOfYearPolicies) {
            if (weekOfYearPolicies == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "weekOfYearPolicies");
            }
            this.weekOfYearPolicies = weekOfYearPolicies;
            return this;
        }
        public Builder weekOfYearPolicies(GetTasksTaskParameterWeekOfYearPolicy... weekOfYearPolicies) {
            return weekOfYearPolicies(List.of(weekOfYearPolicies));
        }
        @CustomType.Setter
        public Builder weekStarts(List<GetTasksTaskParameterWeekStart> weekStarts) {
            if (weekStarts == null) {
              throw new MissingRequiredPropertyException("GetTasksTaskParameter", "weekStarts");
            }
            this.weekStarts = weekStarts;
            return this;
        }
        public Builder weekStarts(GetTasksTaskParameterWeekStart... weekStarts) {
            return weekStarts(List.of(weekStarts));
        }
        public GetTasksTaskParameter build() {
            final var _resultValue = new GetTasksTaskParameter();
            _resultValue.abortDetachedQueries = abortDetachedQueries;
            _resultValue.autocommits = autocommits;
            _resultValue.binaryInputFormats = binaryInputFormats;
            _resultValue.binaryOutputFormats = binaryOutputFormats;
            _resultValue.clientMemoryLimits = clientMemoryLimits;
            _resultValue.clientMetadataRequestUseConnectionCtxes = clientMetadataRequestUseConnectionCtxes;
            _resultValue.clientPrefetchThreads = clientPrefetchThreads;
            _resultValue.clientResultChunkSizes = clientResultChunkSizes;
            _resultValue.clientResultColumnCaseInsensitives = clientResultColumnCaseInsensitives;
            _resultValue.clientSessionKeepAliveHeartbeatFrequencies = clientSessionKeepAliveHeartbeatFrequencies;
            _resultValue.clientSessionKeepAlives = clientSessionKeepAlives;
            _resultValue.clientTimestampTypeMappings = clientTimestampTypeMappings;
            _resultValue.dateInputFormats = dateInputFormats;
            _resultValue.dateOutputFormats = dateOutputFormats;
            _resultValue.enableUnloadPhysicalTypeOptimizations = enableUnloadPhysicalTypeOptimizations;
            _resultValue.errorOnNondeterministicMerges = errorOnNondeterministicMerges;
            _resultValue.errorOnNondeterministicUpdates = errorOnNondeterministicUpdates;
            _resultValue.geographyOutputFormats = geographyOutputFormats;
            _resultValue.geometryOutputFormats = geometryOutputFormats;
            _resultValue.jdbcTreatTimestampNtzAsUtcs = jdbcTreatTimestampNtzAsUtcs;
            _resultValue.jdbcUseSessionTimezones = jdbcUseSessionTimezones;
            _resultValue.jsonIndents = jsonIndents;
            _resultValue.lockTimeouts = lockTimeouts;
            _resultValue.logLevels = logLevels;
            _resultValue.multiStatementCounts = multiStatementCounts;
            _resultValue.noorderSequenceAsDefaults = noorderSequenceAsDefaults;
            _resultValue.odbcTreatDecimalAsInts = odbcTreatDecimalAsInts;
            _resultValue.queryTags = queryTags;
            _resultValue.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            _resultValue.rowsPerResultsets = rowsPerResultsets;
            _resultValue.s3StageVpceDnsNames = s3StageVpceDnsNames;
            _resultValue.searchPaths = searchPaths;
            _resultValue.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            _resultValue.statementTimeoutInSeconds = statementTimeoutInSeconds;
            _resultValue.strictJsonOutputs = strictJsonOutputs;
            _resultValue.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            _resultValue.taskAutoRetryAttempts = taskAutoRetryAttempts;
            _resultValue.timeInputFormats = timeInputFormats;
            _resultValue.timeOutputFormats = timeOutputFormats;
            _resultValue.timestampDayIsAlways24hs = timestampDayIsAlways24hs;
            _resultValue.timestampInputFormats = timestampInputFormats;
            _resultValue.timestampLtzOutputFormats = timestampLtzOutputFormats;
            _resultValue.timestampNtzOutputFormats = timestampNtzOutputFormats;
            _resultValue.timestampOutputFormats = timestampOutputFormats;
            _resultValue.timestampTypeMappings = timestampTypeMappings;
            _resultValue.timestampTzOutputFormats = timestampTzOutputFormats;
            _resultValue.timezones = timezones;
            _resultValue.traceLevels = traceLevels;
            _resultValue.transactionAbortOnErrors = transactionAbortOnErrors;
            _resultValue.transactionDefaultIsolationLevels = transactionDefaultIsolationLevels;
            _resultValue.twoDigitCenturyStarts = twoDigitCenturyStarts;
            _resultValue.unsupportedDdlActions = unsupportedDdlActions;
            _resultValue.useCachedResults = useCachedResults;
            _resultValue.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            _resultValue.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            _resultValue.userTaskTimeoutMs = userTaskTimeoutMs;
            _resultValue.weekOfYearPolicies = weekOfYearPolicies;
            _resultValue.weekStarts = weekStarts;
            return _resultValue;
        }
    }
}
