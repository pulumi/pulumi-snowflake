// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetGrantsFutureGrantsToArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGrantsFutureGrantsToArgs Empty = new GetGrantsFutureGrantsToArgs();

    /**
     * Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the role.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the role.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    private GetGrantsFutureGrantsToArgs() {}

    private GetGrantsFutureGrantsToArgs(GetGrantsFutureGrantsToArgs $) {
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsFutureGrantsToArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsFutureGrantsToArgs $;

        public Builder() {
            $ = new GetGrantsFutureGrantsToArgs();
        }

        public Builder(GetGrantsFutureGrantsToArgs defaults) {
            $ = new GetGrantsFutureGrantsToArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param role Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the role.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Lists all privileges on new (i.e. future) objects of a specified type in a database or schema granted to the role.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public GetGrantsFutureGrantsToArgs build() {
            if ($.role == null) {
                throw new MissingRequiredPropertyException("GetGrantsFutureGrantsToArgs", "role");
            }
            return $;
        }
    }

}
