// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.GetCortexSearchServicesIn;
import com.pulumi.snowflake.inputs.GetCortexSearchServicesLimit;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCortexSearchServicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCortexSearchServicesPlainArgs Empty = new GetCortexSearchServicesPlainArgs();

    /**
     * IN clause to filter the list of cortex search services.
     * 
     */
    @Import(name="in")
    private @Nullable GetCortexSearchServicesIn in;

    /**
     * @return IN clause to filter the list of cortex search services.
     * 
     */
    public Optional<GetCortexSearchServicesIn> in() {
        return Optional.ofNullable(this.in);
    }

    /**
     * Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    @Import(name="like")
    private @Nullable String like;

    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }

    /**
     * Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    @Import(name="limit")
    private @Nullable GetCortexSearchServicesLimit limit;

    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    public Optional<GetCortexSearchServicesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    @Import(name="startsWith")
    private @Nullable String startsWith;

    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }

    private GetCortexSearchServicesPlainArgs() {}

    private GetCortexSearchServicesPlainArgs(GetCortexSearchServicesPlainArgs $) {
        this.in = $.in;
        this.like = $.like;
        this.limit = $.limit;
        this.startsWith = $.startsWith;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCortexSearchServicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCortexSearchServicesPlainArgs $;

        public Builder() {
            $ = new GetCortexSearchServicesPlainArgs();
        }

        public Builder(GetCortexSearchServicesPlainArgs defaults) {
            $ = new GetCortexSearchServicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param in IN clause to filter the list of cortex search services.
         * 
         * @return builder
         * 
         */
        public Builder in(@Nullable GetCortexSearchServicesIn in) {
            $.in = in;
            return this;
        }

        /**
         * @param like Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
         * 
         * @return builder
         * 
         */
        public Builder like(@Nullable String like) {
            $.like = like;
            return this;
        }

        /**
         * @param limit Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable GetCortexSearchServicesLimit limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param startsWith Filters the output with **case-sensitive** characters indicating the beginning of the object name.
         * 
         * @return builder
         * 
         */
        public Builder startsWith(@Nullable String startsWith) {
            $.startsWith = startsWith;
            return this;
        }

        public GetCortexSearchServicesPlainArgs build() {
            return $;
        }
    }

}
