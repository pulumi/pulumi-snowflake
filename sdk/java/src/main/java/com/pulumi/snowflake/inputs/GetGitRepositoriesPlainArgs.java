// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.GetGitRepositoriesIn;
import com.pulumi.snowflake.inputs.GetGitRepositoriesLimit;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitRepositoriesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitRepositoriesPlainArgs Empty = new GetGitRepositoriesPlainArgs();

    /**
     * IN clause to filter the list of objects
     * 
     */
    @Import(name="in")
    private @Nullable GetGitRepositoriesIn in;

    /**
     * @return IN clause to filter the list of objects
     * 
     */
    public Optional<GetGitRepositoriesIn> in() {
        return Optional.ofNullable(this.in);
    }

    /**
     * Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    @Import(name="like")
    private @Nullable String like;

    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }

    /**
     * Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    @Import(name="limit")
    private @Nullable GetGitRepositoriesLimit limit;

    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    public Optional<GetGitRepositoriesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * (Default: `true`) Runs DESC GIT REPOSITORY for each git repository returned by SHOW GIT REPOSITORIES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    @Import(name="withDescribe")
    private @Nullable Boolean withDescribe;

    /**
     * @return (Default: `true`) Runs DESC GIT REPOSITORY for each git repository returned by SHOW GIT REPOSITORIES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    private GetGitRepositoriesPlainArgs() {}

    private GetGitRepositoriesPlainArgs(GetGitRepositoriesPlainArgs $) {
        this.in = $.in;
        this.like = $.like;
        this.limit = $.limit;
        this.withDescribe = $.withDescribe;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitRepositoriesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitRepositoriesPlainArgs $;

        public Builder() {
            $ = new GetGitRepositoriesPlainArgs();
        }

        public Builder(GetGitRepositoriesPlainArgs defaults) {
            $ = new GetGitRepositoriesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param in IN clause to filter the list of objects
         * 
         * @return builder
         * 
         */
        public Builder in(@Nullable GetGitRepositoriesIn in) {
            $.in = in;
            return this;
        }

        /**
         * @param like Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
         * 
         * @return builder
         * 
         */
        public Builder like(@Nullable String like) {
            $.like = like;
            return this;
        }

        /**
         * @param limit Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable GetGitRepositoriesLimit limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param withDescribe (Default: `true`) Runs DESC GIT REPOSITORY for each git repository returned by SHOW GIT REPOSITORIES. The output of describe is saved to the description field. By default this value is set to true.
         * 
         * @return builder
         * 
         */
        public Builder withDescribe(@Nullable Boolean withDescribe) {
            $.withDescribe = withDescribe;
            return this;
        }

        public GetGitRepositoriesPlainArgs build() {
            return $;
        }
    }

}
