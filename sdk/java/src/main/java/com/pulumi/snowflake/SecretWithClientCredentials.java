// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.SecretWithClientCredentialsArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.SecretWithClientCredentialsState;
import com.pulumi.snowflake.outputs.SecretWithClientCredentialsDescribeOutput;
import com.pulumi.snowflake.outputs.SecretWithClientCredentialsShowOutput;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/secretWithClientCredentials:SecretWithClientCredentials example &#39;&#34;&lt;database_name&gt;&#34;.&#34;&lt;schema_name&gt;&#34;.&#34;&lt;secret_name&gt;&#34;&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/secretWithClientCredentials:SecretWithClientCredentials")
public class SecretWithClientCredentials extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name value of the Snowflake security integration that connects Snowflake to an external service.
     * 
     */
    @Export(name="apiAuthentication", refs={String.class}, tree="[0]")
    private Output<String> apiAuthentication;

    /**
     * @return Specifies the name value of the Snowflake security integration that connects Snowflake to an external service.
     * 
     */
    public Output<String> apiAuthentication() {
        return this.apiAuthentication;
    }
    /**
     * Specifies a comment for the secret.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the secret.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * The database in which to create the secret Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The database in which to create the secret Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * Outputs the result of `DESCRIBE SECRET` for the given secret.
     * 
     */
    @Export(name="describeOutputs", refs={List.class,SecretWithClientCredentialsDescribeOutput.class}, tree="[0,1]")
    private Output<List<SecretWithClientCredentialsDescribeOutput>> describeOutputs;

    /**
     * @return Outputs the result of `DESCRIBE SECRET` for the given secret.
     * 
     */
    public Output<List<SecretWithClientCredentialsDescribeOutput>> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * String that specifies the identifier (i.e. name) for the secret, must be unique in your schema. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return String that specifies the identifier (i.e. name) for the secret, must be unique in your schema. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a list of scopes to use when making a request from the OAuth server by a role with USAGE on the integration during the OAuth client credentials flow.
     * 
     */
    @Export(name="oauthScopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> oauthScopes;

    /**
     * @return Specifies a list of scopes to use when making a request from the OAuth server by a role with USAGE on the integration during the OAuth client credentials flow.
     * 
     */
    public Output<List<String>> oauthScopes() {
        return this.oauthScopes;
    }
    /**
     * The schema in which to create the secret. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema in which to create the secret. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Specifies a type for the secret. This field is used for checking external changes and recreating the resources if needed.
     * 
     */
    @Export(name="secretType", refs={String.class}, tree="[0]")
    private Output<String> secretType;

    /**
     * @return Specifies a type for the secret. This field is used for checking external changes and recreating the resources if needed.
     * 
     */
    public Output<String> secretType() {
        return this.secretType;
    }
    /**
     * Outputs the result of `SHOW SECRETS` for the given secret.
     * 
     */
    @Export(name="showOutputs", refs={List.class,SecretWithClientCredentialsShowOutput.class}, tree="[0,1]")
    private Output<List<SecretWithClientCredentialsShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW SECRETS` for the given secret.
     * 
     */
    public Output<List<SecretWithClientCredentialsShowOutput>> showOutputs() {
        return this.showOutputs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecretWithClientCredentials(java.lang.String name) {
        this(name, SecretWithClientCredentialsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecretWithClientCredentials(java.lang.String name, SecretWithClientCredentialsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecretWithClientCredentials(java.lang.String name, SecretWithClientCredentialsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/secretWithClientCredentials:SecretWithClientCredentials", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecretWithClientCredentials(java.lang.String name, Output<java.lang.String> id, @Nullable SecretWithClientCredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/secretWithClientCredentials:SecretWithClientCredentials", name, state, makeResourceOptions(options, id), false);
    }

    private static SecretWithClientCredentialsArgs makeArgs(SecretWithClientCredentialsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecretWithClientCredentialsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecretWithClientCredentials get(java.lang.String name, Output<java.lang.String> id, @Nullable SecretWithClientCredentialsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecretWithClientCredentials(name, id, state, options);
    }
}
