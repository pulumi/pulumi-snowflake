// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGrantsGrantsTo extends com.pulumi.resources.InvokeArgs {

    public static final GetGrantsGrantsTo Empty = new GetGrantsGrantsTo();

    /**
     * Lists all privileges and roles granted to the role
     * 
     */
    @Import(name="role")
    private @Nullable String role;

    /**
     * @return Lists all privileges and roles granted to the role
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * Lists all the privileges granted to the share
     * 
     */
    @Import(name="share")
    private @Nullable String share;

    /**
     * @return Lists all the privileges granted to the share
     * 
     */
    public Optional<String> share() {
        return Optional.ofNullable(this.share);
    }

    /**
     * Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed
     * 
     */
    @Import(name="user")
    private @Nullable String user;

    /**
     * @return Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed
     * 
     */
    public Optional<String> user() {
        return Optional.ofNullable(this.user);
    }

    private GetGrantsGrantsTo() {}

    private GetGrantsGrantsTo(GetGrantsGrantsTo $) {
        this.role = $.role;
        this.share = $.share;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsGrantsTo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsGrantsTo $;

        public Builder() {
            $ = new GetGrantsGrantsTo();
        }

        public Builder(GetGrantsGrantsTo defaults) {
            $ = new GetGrantsGrantsTo(Objects.requireNonNull(defaults));
        }

        /**
         * @param role Lists all privileges and roles granted to the role
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable String role) {
            $.role = role;
            return this;
        }

        /**
         * @param share Lists all the privileges granted to the share
         * 
         * @return builder
         * 
         */
        public Builder share(@Nullable String share) {
            $.share = share;
            return this;
        }

        /**
         * @param user Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed
         * 
         * @return builder
         * 
         */
        public Builder user(@Nullable String user) {
            $.user = user;
            return this;
        }

        public GetGrantsGrantsTo build() {
            return $;
        }
    }

}
