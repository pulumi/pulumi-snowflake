// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.DatabaseOldArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.DatabaseOldState;
import com.pulumi.snowflake.outputs.DatabaseOldReplicationConfiguration;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **Deprecation** This resource is deprecated and will be removed in a future major version release. Please use snowflake.Database or snowflake.SharedDatabase or snowflake.SecondaryDatabase instead. &lt;deprecation&gt;
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.snowflake.DatabaseOld;
 * import com.pulumi.snowflake.DatabaseOldArgs;
 * import com.pulumi.snowflake.inputs.DatabaseOldReplicationConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var simple = new DatabaseOld("simple", DatabaseOldArgs.builder()
 *             .name("testing")
 *             .comment("test comment")
 *             .dataRetentionTimeInDays(3)
 *             .build());
 * 
 *         var withReplication = new DatabaseOld("withReplication", DatabaseOldArgs.builder()
 *             .name("testing_2")
 *             .comment("test comment 2")
 *             .replicationConfiguration(DatabaseOldReplicationConfigurationArgs.builder()
 *                 .accounts(                
 *                     "test_account1",
 *                     "test_account_2")
 *                 .ignoreEditionCheck(true)
 *                 .build())
 *             .build());
 * 
 *         var fromReplica = new DatabaseOld("fromReplica", DatabaseOldArgs.builder()
 *             .name("testing_3")
 *             .comment("test comment")
 *             .dataRetentionTimeInDays(3)
 *             .fromReplica("\"org1\".\"account1\".\"primary_db_name\"")
 *             .build());
 * 
 *         var fromShare = new DatabaseOld("fromShare", DatabaseOldArgs.builder()
 *             .name("testing_4")
 *             .comment("test comment")
 *             .fromShare(Map.ofEntries(
 *                 Map.entry("provider", "account1_locator"),
 *                 Map.entry("share", "share1")
 *             ))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/databaseOld:DatabaseOld example &#39;database_name&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/databaseOld:DatabaseOld")
public class DatabaseOld extends com.pulumi.resources.CustomResource {
    /**
     * Specifies a comment for the database.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the database.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database. Default value for this field is set to -1, which is a fallback to use Snowflake default. For more information, see [Understanding &amp; Using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel).
     * 
     */
    @Export(name="dataRetentionTimeInDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> dataRetentionTimeInDays;

    /**
     * @return Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database. Default value for this field is set to -1, which is a fallback to use Snowflake default. For more information, see [Understanding &amp; Using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel).
     * 
     */
    public Output<Optional<Integer>> dataRetentionTimeInDays() {
        return Codegen.optional(this.dataRetentionTimeInDays);
    }
    /**
     * Specify a database to create a clone from.
     * 
     */
    @Export(name="fromDatabase", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fromDatabase;

    /**
     * @return Specify a database to create a clone from.
     * 
     */
    public Output<Optional<String>> fromDatabase() {
        return Codegen.optional(this.fromDatabase);
    }
    /**
     * Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of `&#34;&lt;organization_name&gt;&#34;.&#34;&lt;account_name&gt;&#34;.&#34;&lt;db_name&gt;&#34;`. An example would be: `&#34;myorg1&#34;.&#34;account1&#34;.&#34;db1&#34;`
     * 
     */
    @Export(name="fromReplica", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fromReplica;

    /**
     * @return Specify a fully-qualified path to a database to create a replica from. A fully qualified path follows the format of `&#34;&lt;organization_name&gt;&#34;.&#34;&lt;account_name&gt;&#34;.&#34;&lt;db_name&gt;&#34;`. An example would be: `&#34;myorg1&#34;.&#34;account1&#34;.&#34;db1&#34;`
     * 
     */
    public Output<Optional<String>> fromReplica() {
        return Codegen.optional(this.fromReplica);
    }
    /**
     * Specify a provider and a share in this map to create a database from a share. As of version 0.87.0, the provider field is the account locator.
     * 
     */
    @Export(name="fromShare", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> fromShare;

    /**
     * @return Specify a provider and a share in this map to create a database from a share. As of version 0.87.0, the provider field is the account locator.
     * 
     */
    public Output<Optional<Map<String,String>>> fromShare() {
        return Codegen.optional(this.fromShare);
    }
    /**
     * Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss.
     * 
     */
    @Export(name="isTransient", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isTransient;

    /**
     * @return Specifies a database as transient. Transient databases do not have a Fail-safe period so they do not incur additional storage costs once they leave Time Travel; however, this means they are also not protected by Fail-safe in the event of a data loss.
     * 
     */
    public Output<Optional<Boolean>> isTransient() {
        return Codegen.optional(this.isTransient);
    }
    /**
     * Specifies the identifier for the database; must be unique for your account.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the identifier for the database; must be unique for your account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * When set, specifies the configurations for database replication.
     * 
     */
    @Export(name="replicationConfiguration", refs={DatabaseOldReplicationConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ DatabaseOldReplicationConfiguration> replicationConfiguration;

    /**
     * @return When set, specifies the configurations for database replication.
     * 
     */
    public Output<Optional<DatabaseOldReplicationConfiguration>> replicationConfiguration() {
        return Codegen.optional(this.replicationConfiguration);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseOld(String name) {
        this(name, DatabaseOldArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseOld(String name, @Nullable DatabaseOldArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseOld(String name, @Nullable DatabaseOldArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/databaseOld:DatabaseOld", name, args == null ? DatabaseOldArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabaseOld(String name, Output<String> id, @Nullable DatabaseOldState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/databaseOld:DatabaseOld", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseOld get(String name, Output<String> id, @Nullable DatabaseOldState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseOld(name, id, state, options);
    }
}
