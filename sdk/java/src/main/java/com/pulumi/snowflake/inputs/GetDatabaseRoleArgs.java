// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDatabaseRoleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseRoleArgs Empty = new GetDatabaseRoleArgs();

    /**
     * The database from which to return the database role from.
     * 
     */
    @Import(name="database", required=true)
    private Output<String> database;

    /**
     * @return The database from which to return the database role from.
     * 
     */
    public Output<String> database() {
        return this.database;
    }

    /**
     * Database role name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Database role name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetDatabaseRoleArgs() {}

    private GetDatabaseRoleArgs(GetDatabaseRoleArgs $) {
        this.database = $.database;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseRoleArgs $;

        public Builder() {
            $ = new GetDatabaseRoleArgs();
        }

        public Builder(GetDatabaseRoleArgs defaults) {
            $ = new GetDatabaseRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param database The database from which to return the database role from.
         * 
         * @return builder
         * 
         */
        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The database from which to return the database role from.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param name Database role name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Database role name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetDatabaseRoleArgs build() {
            if ($.database == null) {
                throw new MissingRequiredPropertyException("GetDatabaseRoleArgs", "database");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDatabaseRoleArgs", "name");
            }
            return $;
        }
    }

}
