// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScimIntegrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScimIntegrationArgs Empty = new ScimIntegrationArgs();

    /**
     * Specifies a comment for the integration.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Specifies a comment for the integration.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Specify whether the security integration is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Specify whether the security integration is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical
     * limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical
     * limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see
     * docs.
     * 
     */
    @Import(name="networkPolicy")
    private @Nullable Output<String> networkPolicy;

    /**
     * @return Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see
     * docs.
     * 
     */
    public Optional<Output<String>> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }

    /**
     * Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into
     * Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are:
     * `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
     * 
     */
    @Import(name="runAsRole", required=true)
    private Output<String> runAsRole;

    /**
     * @return Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into
     * Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are:
     * `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
     * 
     */
    public Output<String> runAsRole() {
        return this.runAsRole;
    }

    /**
     * Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
     * 
     */
    @Import(name="scimClient", required=true)
    private Output<String> scimClient;

    /**
     * @return Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
     * 
     */
    public Output<String> scimClient() {
        return this.scimClient;
    }

    /**
     * Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the
     * API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When
     * the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default
     * for this value.
     * 
     */
    @Import(name="syncPassword")
    private @Nullable Output<String> syncPassword;

    /**
     * @return Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the
     * API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When
     * the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default
     * for this value.
     * 
     */
    public Optional<Output<String>> syncPassword() {
        return Optional.ofNullable(this.syncPassword);
    }

    private ScimIntegrationArgs() {}

    private ScimIntegrationArgs(ScimIntegrationArgs $) {
        this.comment = $.comment;
        this.enabled = $.enabled;
        this.name = $.name;
        this.networkPolicy = $.networkPolicy;
        this.runAsRole = $.runAsRole;
        this.scimClient = $.scimClient;
        this.syncPassword = $.syncPassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScimIntegrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScimIntegrationArgs $;

        public Builder() {
            $ = new ScimIntegrationArgs();
        }

        public Builder(ScimIntegrationArgs defaults) {
            $ = new ScimIntegrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comment Specifies a comment for the integration.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Specifies a comment for the integration.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param enabled Specify whether the security integration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specify whether the security integration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical
         * limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name String that specifies the identifier (i.e. name) for the integration; must be unique in your account. Due to technical
         * limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkPolicy Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see
         * docs.
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(@Nullable Output<String> networkPolicy) {
            $.networkPolicy = networkPolicy;
            return this;
        }

        /**
         * @param networkPolicy Specifies an existing network policy that controls SCIM network traffic. For more information about this resource, see
         * docs.
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(String networkPolicy) {
            return networkPolicy(Output.of(networkPolicy));
        }

        /**
         * @param runAsRole Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into
         * Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are:
         * `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
         * 
         * @return builder
         * 
         */
        public Builder runAsRole(Output<String> runAsRole) {
            $.runAsRole = runAsRole;
            return this;
        }

        /**
         * @param runAsRole Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into
         * Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are:
         * `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
         * 
         * @return builder
         * 
         */
        public Builder runAsRole(String runAsRole) {
            return runAsRole(Output.of(runAsRole));
        }

        /**
         * @param scimClient Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
         * 
         * @return builder
         * 
         */
        public Builder scimClient(Output<String> scimClient) {
            $.scimClient = scimClient;
            return this;
        }

        /**
         * @param scimClient Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
         * 
         * @return builder
         * 
         */
        public Builder scimClient(String scimClient) {
            return scimClient(Output.of(scimClient));
        }

        /**
         * @param syncPassword Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the
         * API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When
         * the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default
         * for this value.
         * 
         * @return builder
         * 
         */
        public Builder syncPassword(@Nullable Output<String> syncPassword) {
            $.syncPassword = syncPassword;
            return this;
        }

        /**
         * @param syncPassword Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the
         * API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When
         * the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default
         * for this value.
         * 
         * @return builder
         * 
         */
        public Builder syncPassword(String syncPassword) {
            return syncPassword(Output.of(syncPassword));
        }

        public ScimIntegrationArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ScimIntegrationArgs", "enabled");
            }
            if ($.runAsRole == null) {
                throw new MissingRequiredPropertyException("ScimIntegrationArgs", "runAsRole");
            }
            if ($.scimClient == null) {
                throw new MissingRequiredPropertyException("ScimIntegrationArgs", "scimClient");
            }
            return $;
        }
    }

}
