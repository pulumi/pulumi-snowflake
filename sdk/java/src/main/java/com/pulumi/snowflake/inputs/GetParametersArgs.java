// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetParametersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetParametersArgs Empty = new GetParametersArgs();

    @Import(name="objectName")
    private @Nullable Output<String> objectName;

    public Optional<Output<String>> objectName() {
        return Optional.ofNullable(this.objectName);
    }

    @Import(name="objectType")
    private @Nullable Output<String> objectType;

    public Optional<Output<String>> objectType() {
        return Optional.ofNullable(this.objectType);
    }

    @Import(name="parameterType")
    private @Nullable Output<String> parameterType;

    public Optional<Output<String>> parameterType() {
        return Optional.ofNullable(this.parameterType);
    }

    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    @Import(name="user")
    private @Nullable Output<String> user;

    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private GetParametersArgs() {}

    private GetParametersArgs(GetParametersArgs $) {
        this.objectName = $.objectName;
        this.objectType = $.objectType;
        this.parameterType = $.parameterType;
        this.pattern = $.pattern;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetParametersArgs $;

        public Builder() {
            $ = new GetParametersArgs();
        }

        public Builder(GetParametersArgs defaults) {
            $ = new GetParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder objectName(@Nullable Output<String> objectName) {
            $.objectName = objectName;
            return this;
        }

        public Builder objectName(String objectName) {
            return objectName(Output.of(objectName));
        }

        public Builder objectType(@Nullable Output<String> objectType) {
            $.objectType = objectType;
            return this;
        }

        public Builder objectType(String objectType) {
            return objectType(Output.of(objectType));
        }

        public Builder parameterType(@Nullable Output<String> parameterType) {
            $.parameterType = parameterType;
            return this;
        }

        public Builder parameterType(String parameterType) {
            return parameterType(Output.of(parameterType));
        }

        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        public Builder user(String user) {
            return user(Output.of(user));
        }

        public GetParametersArgs build() {
            return $;
        }
    }

}
