// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.StreamOnDirectoryTableArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.StreamOnDirectoryTableState;
import com.pulumi.snowflake.outputs.StreamOnDirectoryTableDescribeOutput;
import com.pulumi.snowflake.outputs.StreamOnDirectoryTableShowOutput;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/streamOnDirectoryTable:StreamOnDirectoryTable example &#39;&#34;&lt;database_name&gt;&#34;.&#34;&lt;schema_name&gt;&#34;.&#34;&lt;stream_name&gt;&#34;&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/streamOnDirectoryTable:StreamOnDirectoryTable")
public class StreamOnDirectoryTable extends com.pulumi.resources.CustomResource {
    /**
     * Specifies a comment for the stream.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the stream.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    @Export(name="copyGrants", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> copyGrants;

    public Output<Optional<Boolean>> copyGrants() {
        return Codegen.optional(this.copyGrants);
    }
    /**
     * The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The database in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * Outputs the result of `DESCRIBE STREAM` for the given stream.
     * 
     */
    @Export(name="describeOutputs", refs={List.class,StreamOnDirectoryTableDescribeOutput.class}, tree="[0,1]")
    private Output<List<StreamOnDirectoryTableDescribeOutput>> describeOutputs;

    /**
     * @return Outputs the result of `DESCRIBE STREAM` for the given stream.
     * 
     */
    public Output<List<StreamOnDirectoryTableDescribeOutput>> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the identifier for the stream; must be unique for the database and schema in which the stream is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema in which to create the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Outputs the result of `SHOW STREAMS` for the given stream.
     * 
     */
    @Export(name="showOutputs", refs={List.class,StreamOnDirectoryTableShowOutput.class}, tree="[0,1]")
    private Output<List<StreamOnDirectoryTableShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW STREAMS` for the given stream.
     * 
     */
    public Output<List<StreamOnDirectoryTableShowOutput>> showOutputs() {
        return this.showOutputs;
    }
    /**
     * Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
     * 
     */
    @Export(name="stage", refs={String.class}, tree="[0]")
    private Output<String> stage;

    /**
     * @return Specifies an identifier for the stage the stream will monitor. Due to Snowflake limitations, the provider can not read the stage&#39;s database and schema. For stages, Snowflake returns only partially qualified name instead of fully qualified name. Please use stages located in the same schema as the stream. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information about this resource, see docs.
     * 
     */
    public Output<String> stage() {
        return this.stage;
    }
    @Export(name="stale", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> stale;

    public Output<Boolean> stale() {
        return this.stale;
    }
    /**
     * Specifies a type for the stream. This field is used for checking external changes and recreating the resources if needed.
     * 
     */
    @Export(name="streamType", refs={String.class}, tree="[0]")
    private Output<String> streamType;

    /**
     * @return Specifies a type for the stream. This field is used for checking external changes and recreating the resources if needed.
     * 
     */
    public Output<String> streamType() {
        return this.streamType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamOnDirectoryTable(java.lang.String name) {
        this(name, StreamOnDirectoryTableArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamOnDirectoryTable(java.lang.String name, StreamOnDirectoryTableArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamOnDirectoryTable(java.lang.String name, StreamOnDirectoryTableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/streamOnDirectoryTable:StreamOnDirectoryTable", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StreamOnDirectoryTable(java.lang.String name, Output<java.lang.String> id, @Nullable StreamOnDirectoryTableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/streamOnDirectoryTable:StreamOnDirectoryTable", name, state, makeResourceOptions(options, id), false);
    }

    private static StreamOnDirectoryTableArgs makeArgs(StreamOnDirectoryTableArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StreamOnDirectoryTableArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamOnDirectoryTable get(java.lang.String name, Output<java.lang.String> id, @Nullable StreamOnDirectoryTableState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamOnDirectoryTable(name, id, state, options);
    }
}
