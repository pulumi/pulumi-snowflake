// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ListingArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ListingState;
import com.pulumi.snowflake.outputs.ListingManifest;
import com.pulumi.snowflake.outputs.ListingShowOutput;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/listing:Listing example &#39;&#34;&lt;listing_name&gt;&#34;&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/listing:Listing")
public class Listing extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the application package attached to the listing.
     * 
     */
    @Export(name="applicationPackage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationPackage;

    /**
     * @return Specifies the application package attached to the listing.
     * 
     */
    public Output<Optional<String>> applicationPackage() {
        return Codegen.optional(this.applicationPackage);
    }
    /**
     * Specifies a comment for the listing.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the listing.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    @Export(name="manifest", refs={ListingManifest.class}, tree="[0]")
    private Output<ListingManifest> manifest;

    public Output<ListingManifest> manifest() {
        return this.manifest;
    }
    /**
     * Specifies the listing identifier (name). It must be unique within the organization, regardless of which Snowflake region the account is located in. Must start with an alphabetic character and cannot contain spaces or special characters except for underscores.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the listing identifier (name). It must be unique within the organization, regardless of which Snowflake region the account is located in. Must start with an alphabetic character and cannot contain spaces or special characters except for underscores.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Determines if the listing should be published.
     * 
     */
    @Export(name="publish", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> publish;

    /**
     * @return (Default: fallback to Snowflake default - uses special value that cannot be set in the configuration manually (`default`)) Determines if the listing should be published.
     * 
     */
    public Output<Optional<String>> publish() {
        return Codegen.optional(this.publish);
    }
    /**
     * Specifies the identifier for the share to attach to the listing.
     * 
     */
    @Export(name="share", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> share;

    /**
     * @return Specifies the identifier for the share to attach to the listing.
     * 
     */
    public Output<Optional<String>> share() {
        return Codegen.optional(this.share);
    }
    /**
     * Outputs the result of `SHOW LISTINGS` for the given listing.
     * 
     */
    @Export(name="showOutputs", refs={List.class,ListingShowOutput.class}, tree="[0,1]")
    private Output<List<ListingShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW LISTINGS` for the given listing.
     * 
     */
    public Output<List<ListingShowOutput>> showOutputs() {
        return this.showOutputs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listing(java.lang.String name) {
        this(name, ListingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listing(java.lang.String name, ListingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listing(java.lang.String name, ListingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/listing:Listing", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Listing(java.lang.String name, Output<java.lang.String> id, @Nullable ListingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/listing:Listing", name, state, makeResourceOptions(options, id), false);
    }

    private static ListingArgs makeArgs(ListingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ListingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listing get(java.lang.String name, Output<java.lang.String> id, @Nullable ListingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Listing(name, id, state, options);
    }
}
