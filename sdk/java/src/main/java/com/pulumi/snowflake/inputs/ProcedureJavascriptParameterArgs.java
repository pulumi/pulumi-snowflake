// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.ProcedureJavascriptParameterEnableConsoleOutputArgs;
import com.pulumi.snowflake.inputs.ProcedureJavascriptParameterLogLevelArgs;
import com.pulumi.snowflake.inputs.ProcedureJavascriptParameterMetricLevelArgs;
import com.pulumi.snowflake.inputs.ProcedureJavascriptParameterTraceLevelArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProcedureJavascriptParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProcedureJavascriptParameterArgs Empty = new ProcedureJavascriptParameterArgs();

    @Import(name="enableConsoleOutputs")
    private @Nullable Output<List<ProcedureJavascriptParameterEnableConsoleOutputArgs>> enableConsoleOutputs;

    public Optional<Output<List<ProcedureJavascriptParameterEnableConsoleOutputArgs>>> enableConsoleOutputs() {
        return Optional.ofNullable(this.enableConsoleOutputs);
    }

    @Import(name="logLevels")
    private @Nullable Output<List<ProcedureJavascriptParameterLogLevelArgs>> logLevels;

    public Optional<Output<List<ProcedureJavascriptParameterLogLevelArgs>>> logLevels() {
        return Optional.ofNullable(this.logLevels);
    }

    @Import(name="metricLevels")
    private @Nullable Output<List<ProcedureJavascriptParameterMetricLevelArgs>> metricLevels;

    public Optional<Output<List<ProcedureJavascriptParameterMetricLevelArgs>>> metricLevels() {
        return Optional.ofNullable(this.metricLevels);
    }

    @Import(name="traceLevels")
    private @Nullable Output<List<ProcedureJavascriptParameterTraceLevelArgs>> traceLevels;

    public Optional<Output<List<ProcedureJavascriptParameterTraceLevelArgs>>> traceLevels() {
        return Optional.ofNullable(this.traceLevels);
    }

    private ProcedureJavascriptParameterArgs() {}

    private ProcedureJavascriptParameterArgs(ProcedureJavascriptParameterArgs $) {
        this.enableConsoleOutputs = $.enableConsoleOutputs;
        this.logLevels = $.logLevels;
        this.metricLevels = $.metricLevels;
        this.traceLevels = $.traceLevels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProcedureJavascriptParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProcedureJavascriptParameterArgs $;

        public Builder() {
            $ = new ProcedureJavascriptParameterArgs();
        }

        public Builder(ProcedureJavascriptParameterArgs defaults) {
            $ = new ProcedureJavascriptParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder enableConsoleOutputs(@Nullable Output<List<ProcedureJavascriptParameterEnableConsoleOutputArgs>> enableConsoleOutputs) {
            $.enableConsoleOutputs = enableConsoleOutputs;
            return this;
        }

        public Builder enableConsoleOutputs(List<ProcedureJavascriptParameterEnableConsoleOutputArgs> enableConsoleOutputs) {
            return enableConsoleOutputs(Output.of(enableConsoleOutputs));
        }

        public Builder enableConsoleOutputs(ProcedureJavascriptParameterEnableConsoleOutputArgs... enableConsoleOutputs) {
            return enableConsoleOutputs(List.of(enableConsoleOutputs));
        }

        public Builder logLevels(@Nullable Output<List<ProcedureJavascriptParameterLogLevelArgs>> logLevels) {
            $.logLevels = logLevels;
            return this;
        }

        public Builder logLevels(List<ProcedureJavascriptParameterLogLevelArgs> logLevels) {
            return logLevels(Output.of(logLevels));
        }

        public Builder logLevels(ProcedureJavascriptParameterLogLevelArgs... logLevels) {
            return logLevels(List.of(logLevels));
        }

        public Builder metricLevels(@Nullable Output<List<ProcedureJavascriptParameterMetricLevelArgs>> metricLevels) {
            $.metricLevels = metricLevels;
            return this;
        }

        public Builder metricLevels(List<ProcedureJavascriptParameterMetricLevelArgs> metricLevels) {
            return metricLevels(Output.of(metricLevels));
        }

        public Builder metricLevels(ProcedureJavascriptParameterMetricLevelArgs... metricLevels) {
            return metricLevels(List.of(metricLevels));
        }

        public Builder traceLevels(@Nullable Output<List<ProcedureJavascriptParameterTraceLevelArgs>> traceLevels) {
            $.traceLevels = traceLevels;
            return this;
        }

        public Builder traceLevels(List<ProcedureJavascriptParameterTraceLevelArgs> traceLevels) {
            return traceLevels(Output.of(traceLevels));
        }

        public Builder traceLevels(ProcedureJavascriptParameterTraceLevelArgs... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }

        public ProcedureJavascriptParameterArgs build() {
            return $;
        }
    }

}
