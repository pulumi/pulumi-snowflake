// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput {
    private String comment;
    private String createdBy;
    private String createdOn;
    private String expiresAt;
    private Integer minsToBypassNetworkPolicyRequirement;
    private String name;
    private String roleRestriction;
    private String rotatedTo;
    private String status;
    private String userName;

    private GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput() {}
    public String comment() {
        return this.comment;
    }
    public String createdBy() {
        return this.createdBy;
    }
    public String createdOn() {
        return this.createdOn;
    }
    public String expiresAt() {
        return this.expiresAt;
    }
    public Integer minsToBypassNetworkPolicyRequirement() {
        return this.minsToBypassNetworkPolicyRequirement;
    }
    public String name() {
        return this.name;
    }
    public String roleRestriction() {
        return this.roleRestriction;
    }
    public String rotatedTo() {
        return this.rotatedTo;
    }
    public String status() {
        return this.status;
    }
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String createdBy;
        private String createdOn;
        private String expiresAt;
        private Integer minsToBypassNetworkPolicyRequirement;
        private String name;
        private String roleRestriction;
        private String rotatedTo;
        private String status;
        private String userName;
        public Builder() {}
        public Builder(GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.createdBy = defaults.createdBy;
    	      this.createdOn = defaults.createdOn;
    	      this.expiresAt = defaults.expiresAt;
    	      this.minsToBypassNetworkPolicyRequirement = defaults.minsToBypassNetworkPolicyRequirement;
    	      this.name = defaults.name;
    	      this.roleRestriction = defaults.roleRestriction;
    	      this.rotatedTo = defaults.rotatedTo;
    	      this.status = defaults.status;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(String expiresAt) {
            if (expiresAt == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "expiresAt");
            }
            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder minsToBypassNetworkPolicyRequirement(Integer minsToBypassNetworkPolicyRequirement) {
            if (minsToBypassNetworkPolicyRequirement == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "minsToBypassNetworkPolicyRequirement");
            }
            this.minsToBypassNetworkPolicyRequirement = minsToBypassNetworkPolicyRequirement;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder roleRestriction(String roleRestriction) {
            if (roleRestriction == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "roleRestriction");
            }
            this.roleRestriction = roleRestriction;
            return this;
        }
        @CustomType.Setter
        public Builder rotatedTo(String rotatedTo) {
            if (rotatedTo == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "rotatedTo");
            }
            this.rotatedTo = rotatedTo;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            if (userName == null) {
              throw new MissingRequiredPropertyException("GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput", "userName");
            }
            this.userName = userName;
            return this;
        }
        public GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput build() {
            final var _resultValue = new GetUserProgrammaticAccessTokensUserProgrammaticAccessTokenShowOutput();
            _resultValue.comment = comment;
            _resultValue.createdBy = createdBy;
            _resultValue.createdOn = createdOn;
            _resultValue.expiresAt = expiresAt;
            _resultValue.minsToBypassNetworkPolicyRequirement = minsToBypassNetworkPolicyRequirement;
            _resultValue.name = name;
            _resultValue.roleRestriction = roleRestriction;
            _resultValue.rotatedTo = rotatedTo;
            _resultValue.status = status;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
