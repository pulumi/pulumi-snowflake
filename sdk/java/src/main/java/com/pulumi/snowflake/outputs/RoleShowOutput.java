// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoleShowOutput {
    private @Nullable Integer assignedToUsers;
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable Integer grantedRoles;
    private @Nullable Integer grantedToRoles;
    private @Nullable Boolean isCurrent;
    private @Nullable Boolean isDefault;
    private @Nullable Boolean isInherited;
    private @Nullable String name;
    private @Nullable String owner;

    private RoleShowOutput() {}
    public Optional<Integer> assignedToUsers() {
        return Optional.ofNullable(this.assignedToUsers);
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<Integer> grantedRoles() {
        return Optional.ofNullable(this.grantedRoles);
    }
    public Optional<Integer> grantedToRoles() {
        return Optional.ofNullable(this.grantedToRoles);
    }
    public Optional<Boolean> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    public Optional<Boolean> isInherited() {
        return Optional.ofNullable(this.isInherited);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer assignedToUsers;
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable Integer grantedRoles;
        private @Nullable Integer grantedToRoles;
        private @Nullable Boolean isCurrent;
        private @Nullable Boolean isDefault;
        private @Nullable Boolean isInherited;
        private @Nullable String name;
        private @Nullable String owner;
        public Builder() {}
        public Builder(RoleShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedToUsers = defaults.assignedToUsers;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.grantedRoles = defaults.grantedRoles;
    	      this.grantedToRoles = defaults.grantedToRoles;
    	      this.isCurrent = defaults.isCurrent;
    	      this.isDefault = defaults.isDefault;
    	      this.isInherited = defaults.isInherited;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
        }

        @CustomType.Setter
        public Builder assignedToUsers(@Nullable Integer assignedToUsers) {

            this.assignedToUsers = assignedToUsers;
            return this;
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder grantedRoles(@Nullable Integer grantedRoles) {

            this.grantedRoles = grantedRoles;
            return this;
        }
        @CustomType.Setter
        public Builder grantedToRoles(@Nullable Integer grantedToRoles) {

            this.grantedToRoles = grantedToRoles;
            return this;
        }
        @CustomType.Setter
        public Builder isCurrent(@Nullable Boolean isCurrent) {

            this.isCurrent = isCurrent;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {

            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder isInherited(@Nullable Boolean isInherited) {

            this.isInherited = isInherited;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        public RoleShowOutput build() {
            final var _resultValue = new RoleShowOutput();
            _resultValue.assignedToUsers = assignedToUsers;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.grantedRoles = grantedRoles;
            _resultValue.grantedToRoles = grantedToRoles;
            _resultValue.isCurrent = isCurrent;
            _resultValue.isDefault = isDefault;
            _resultValue.isInherited = isInherited;
            _resultValue.name = name;
            _resultValue.owner = owner;
            return _resultValue;
        }
    }
}
