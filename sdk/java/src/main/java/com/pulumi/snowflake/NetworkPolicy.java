// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.NetworkPolicyArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.NetworkPolicyState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.snowflake.NetworkPolicy;
 * import com.pulumi.snowflake.NetworkPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new NetworkPolicy(&#34;policy&#34;, NetworkPolicyArgs.builder()        
 *             .allowedIpLists(&#34;192.168.0.100/24&#34;)
 *             .blockedIpLists(&#34;192.168.0.101&#34;)
 *             .comment(&#34;A policy.&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import snowflake:index/networkPolicy:NetworkPolicy example policyname
 * ```
 * 
 */
@ResourceType(type="snowflake:index/networkPolicy:NetworkPolicy")
public class NetworkPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account
     * 
     */
    @Export(name="allowedIpLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> allowedIpLists;

    /**
     * @return Specifies one or more IPv4 addresses (CIDR notation) that are allowed access to your Snowflake account
     * 
     */
    public Output<List<String>> allowedIpLists() {
        return this.allowedIpLists;
    }
    /**
     * Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake account\n\n\n\n**Do not** add `0.0.0.0/0` to `blocked_ip_list`
     * 
     */
    @Export(name="blockedIpLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> blockedIpLists;

    /**
     * @return Specifies one or more IPv4 addresses (CIDR notation) that are denied access to your Snowflake account\n\n\n\n**Do not** add `0.0.0.0/0` to `blocked_ip_list`
     * 
     */
    public Output<Optional<List<String>>> blockedIpLists() {
        return Codegen.optional(this.blockedIpLists);
    }
    /**
     * Specifies a comment for the network policy.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the network policy.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the identifier for the network policy; must be unique for the account in which the network policy is created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkPolicy(String name) {
        this(name, NetworkPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkPolicy(String name, NetworkPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkPolicy(String name, NetworkPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/networkPolicy:NetworkPolicy", name, args == null ? NetworkPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkPolicy(String name, Output<String> id, @Nullable NetworkPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/networkPolicy:NetworkPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkPolicy get(String name, Output<String> id, @Nullable NetworkPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkPolicy(name, id, state, options);
    }
}
