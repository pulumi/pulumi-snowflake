// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.JobServiceFromSpecificationTemplateUsing;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobServiceFromSpecificationTemplate {
    /**
     * @return The file name of the service specification template. Example: `spec.yaml`.
     * 
     */
    private @Nullable String file;
    /**
     * @return The path to the service specification template file on the given stage. When the path is specified, the `/` character is automatically added as a path prefix. Example: `path/to/spec`.
     * 
     */
    private @Nullable String path;
    /**
     * @return The fully qualified name of the stage containing the service specification template file. At symbol (`{@literal @}`) is added automatically. Example: `&#34;\&#34;&lt;db_name&gt;\&#34;.\&#34;&lt;schema_name&gt;\&#34;.\&#34;&lt;stage_name&gt;\&#34;&#34;`. For more information about this resource, see docs.
     * 
     */
    private @Nullable String stage;
    /**
     * @return The embedded text of the service specification template.
     * 
     */
    private @Nullable String text;
    /**
     * @return List of the specified template variables and the values of those variables.
     * 
     */
    private List<JobServiceFromSpecificationTemplateUsing> usings;

    private JobServiceFromSpecificationTemplate() {}
    /**
     * @return The file name of the service specification template. Example: `spec.yaml`.
     * 
     */
    public Optional<String> file() {
        return Optional.ofNullable(this.file);
    }
    /**
     * @return The path to the service specification template file on the given stage. When the path is specified, the `/` character is automatically added as a path prefix. Example: `path/to/spec`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return The fully qualified name of the stage containing the service specification template file. At symbol (`{@literal @}`) is added automatically. Example: `&#34;\&#34;&lt;db_name&gt;\&#34;.\&#34;&lt;schema_name&gt;\&#34;.\&#34;&lt;stage_name&gt;\&#34;&#34;`. For more information about this resource, see docs.
     * 
     */
    public Optional<String> stage() {
        return Optional.ofNullable(this.stage);
    }
    /**
     * @return The embedded text of the service specification template.
     * 
     */
    public Optional<String> text() {
        return Optional.ofNullable(this.text);
    }
    /**
     * @return List of the specified template variables and the values of those variables.
     * 
     */
    public List<JobServiceFromSpecificationTemplateUsing> usings() {
        return this.usings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobServiceFromSpecificationTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String file;
        private @Nullable String path;
        private @Nullable String stage;
        private @Nullable String text;
        private List<JobServiceFromSpecificationTemplateUsing> usings;
        public Builder() {}
        public Builder(JobServiceFromSpecificationTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.file = defaults.file;
    	      this.path = defaults.path;
    	      this.stage = defaults.stage;
    	      this.text = defaults.text;
    	      this.usings = defaults.usings;
        }

        @CustomType.Setter
        public Builder file(@Nullable String file) {

            this.file = file;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder stage(@Nullable String stage) {

            this.stage = stage;
            return this;
        }
        @CustomType.Setter
        public Builder text(@Nullable String text) {

            this.text = text;
            return this;
        }
        @CustomType.Setter
        public Builder usings(List<JobServiceFromSpecificationTemplateUsing> usings) {
            if (usings == null) {
              throw new MissingRequiredPropertyException("JobServiceFromSpecificationTemplate", "usings");
            }
            this.usings = usings;
            return this;
        }
        public Builder usings(JobServiceFromSpecificationTemplateUsing... usings) {
            return usings(List.of(usings));
        }
        public JobServiceFromSpecificationTemplate build() {
            final var _resultValue = new JobServiceFromSpecificationTemplate();
            _resultValue.file = file;
            _resultValue.path = path;
            _resultValue.stage = stage;
            _resultValue.text = text;
            _resultValue.usings = usings;
            return _resultValue;
        }
    }
}
