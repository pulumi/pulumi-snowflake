// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserAuthenticationPolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAuthenticationPolicyAttachmentArgs Empty = new UserAuthenticationPolicyAttachmentArgs();

    /**
     * Fully qualified name of the authentication policy
     * 
     */
    @Import(name="authenticationPolicyName", required=true)
    private Output<String> authenticationPolicyName;

    /**
     * @return Fully qualified name of the authentication policy
     * 
     */
    public Output<String> authenticationPolicyName() {
        return this.authenticationPolicyName;
    }

    /**
     * User name of the user you want to attach the authentication policy to
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return User name of the user you want to attach the authentication policy to
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private UserAuthenticationPolicyAttachmentArgs() {}

    private UserAuthenticationPolicyAttachmentArgs(UserAuthenticationPolicyAttachmentArgs $) {
        this.authenticationPolicyName = $.authenticationPolicyName;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAuthenticationPolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAuthenticationPolicyAttachmentArgs $;

        public Builder() {
            $ = new UserAuthenticationPolicyAttachmentArgs();
        }

        public Builder(UserAuthenticationPolicyAttachmentArgs defaults) {
            $ = new UserAuthenticationPolicyAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationPolicyName Fully qualified name of the authentication policy
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicyName(Output<String> authenticationPolicyName) {
            $.authenticationPolicyName = authenticationPolicyName;
            return this;
        }

        /**
         * @param authenticationPolicyName Fully qualified name of the authentication policy
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicyName(String authenticationPolicyName) {
            return authenticationPolicyName(Output.of(authenticationPolicyName));
        }

        /**
         * @param userName User name of the user you want to attach the authentication policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName User name of the user you want to attach the authentication policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserAuthenticationPolicyAttachmentArgs build() {
            if ($.authenticationPolicyName == null) {
                throw new MissingRequiredPropertyException("UserAuthenticationPolicyAttachmentArgs", "authenticationPolicyName");
            }
            if ($.userName == null) {
                throw new MissingRequiredPropertyException("UserAuthenticationPolicyAttachmentArgs", "userName");
            }
            return $;
        }
    }

}
