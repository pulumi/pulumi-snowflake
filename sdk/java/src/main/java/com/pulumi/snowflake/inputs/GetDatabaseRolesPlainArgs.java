// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.inputs.GetDatabaseRolesLimit;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseRolesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseRolesPlainArgs Empty = new GetDatabaseRolesPlainArgs();

    @Import(name="inDatabase", required=true)
    private String inDatabase;

    public String inDatabase() {
        return this.inDatabase;
    }

    @Import(name="like")
    private @Nullable String like;

    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }

    @Import(name="limit")
    private @Nullable GetDatabaseRolesLimit limit;

    public Optional<GetDatabaseRolesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }

    private GetDatabaseRolesPlainArgs() {}

    private GetDatabaseRolesPlainArgs(GetDatabaseRolesPlainArgs $) {
        this.inDatabase = $.inDatabase;
        this.like = $.like;
        this.limit = $.limit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseRolesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseRolesPlainArgs $;

        public Builder() {
            $ = new GetDatabaseRolesPlainArgs();
        }

        public Builder(GetDatabaseRolesPlainArgs defaults) {
            $ = new GetDatabaseRolesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder inDatabase(String inDatabase) {
            $.inDatabase = inDatabase;
            return this;
        }

        public Builder like(@Nullable String like) {
            $.like = like;
            return this;
        }

        public Builder limit(@Nullable GetDatabaseRolesLimit limit) {
            $.limit = limit;
            return this;
        }

        public GetDatabaseRolesPlainArgs build() {
            if ($.inDatabase == null) {
                throw new MissingRequiredPropertyException("GetDatabaseRolesPlainArgs", "inDatabase");
            }
            return $;
        }
    }

}
