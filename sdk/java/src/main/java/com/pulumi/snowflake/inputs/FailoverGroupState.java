// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.FailoverGroupFromReplicaArgs;
import com.pulumi.snowflake.inputs.FailoverGroupReplicationScheduleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FailoverGroupState extends com.pulumi.resources.ResourceArgs {

    public static final FailoverGroupState Empty = new FailoverGroupState();

    /**
     * Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
     * 
     */
    @Import(name="allowedAccounts")
    private @Nullable Output<List<String>> allowedAccounts;

    /**
     * @return Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
     * 
     */
    public Optional<Output<List<String>>> allowedAccounts() {
        return Optional.ofNullable(this.allowedAccounts);
    }

    /**
     * Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
     * 
     */
    @Import(name="allowedDatabases")
    private @Nullable Output<List<String>> allowedDatabases;

    /**
     * @return Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
     * 
     */
    public Optional<Output<List<String>>> allowedDatabases() {
        return Optional.ofNullable(this.allowedDatabases);
    }

    /**
     * Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: &#34;SECURITY INTEGRATIONS&#34;, &#34;API INTEGRATIONS&#34;
     * 
     */
    @Import(name="allowedIntegrationTypes")
    private @Nullable Output<List<String>> allowedIntegrationTypes;

    /**
     * @return Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: &#34;SECURITY INTEGRATIONS&#34;, &#34;API INTEGRATIONS&#34;
     * 
     */
    public Optional<Output<List<String>>> allowedIntegrationTypes() {
        return Optional.ofNullable(this.allowedIntegrationTypes);
    }

    /**
     * Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
     * 
     */
    @Import(name="allowedShares")
    private @Nullable Output<List<String>> allowedShares;

    /**
     * @return Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
     * 
     */
    public Optional<Output<List<String>>> allowedShares() {
        return Optional.ofNullable(this.allowedShares);
    }

    /**
     * Specifies the name of the replica to use as the source for the failover group.
     * 
     */
    @Import(name="fromReplica")
    private @Nullable Output<FailoverGroupFromReplicaArgs> fromReplica;

    /**
     * @return Specifies the name of the replica to use as the source for the failover group.
     * 
     */
    public Optional<Output<FailoverGroupFromReplicaArgs>> fromReplica() {
        return Optional.ofNullable(this.fromReplica);
    }

    /**
     * Allows replicating objects to accounts on lower editions.
     * 
     */
    @Import(name="ignoreEditionCheck")
    private @Nullable Output<Boolean> ignoreEditionCheck;

    /**
     * @return Allows replicating objects to accounts on lower editions.
     * 
     */
    public Optional<Output<Boolean>> ignoreEditionCheck() {
        return Optional.ofNullable(this.ignoreEditionCheck);
    }

    /**
     * Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. &#34;My object&#34;). Identifiers enclosed in double quotes are also case-sensitive.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. &#34;My object&#34;). Identifiers enclosed in double quotes are also case-sensitive.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: &#34;ACCOUNT PARAMETERS&#34;, &#34;DATABASES&#34;, &#34;INTEGRATIONS&#34;, &#34;NETWORK POLICIES&#34;, &#34;RESOURCE MONITORS&#34;, &#34;ROLES&#34;, &#34;SHARES&#34;, &#34;USERS&#34;, &#34;WAREHOUSES&#34;
     * 
     */
    @Import(name="objectTypes")
    private @Nullable Output<List<String>> objectTypes;

    /**
     * @return Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: &#34;ACCOUNT PARAMETERS&#34;, &#34;DATABASES&#34;, &#34;INTEGRATIONS&#34;, &#34;NETWORK POLICIES&#34;, &#34;RESOURCE MONITORS&#34;, &#34;ROLES&#34;, &#34;SHARES&#34;, &#34;USERS&#34;, &#34;WAREHOUSES&#34;
     * 
     */
    public Optional<Output<List<String>>> objectTypes() {
        return Optional.ofNullable(this.objectTypes);
    }

    /**
     * Specifies the schedule for refreshing secondary failover groups.
     * 
     */
    @Import(name="replicationSchedule")
    private @Nullable Output<FailoverGroupReplicationScheduleArgs> replicationSchedule;

    /**
     * @return Specifies the schedule for refreshing secondary failover groups.
     * 
     */
    public Optional<Output<FailoverGroupReplicationScheduleArgs>> replicationSchedule() {
        return Optional.ofNullable(this.replicationSchedule);
    }

    private FailoverGroupState() {}

    private FailoverGroupState(FailoverGroupState $) {
        this.allowedAccounts = $.allowedAccounts;
        this.allowedDatabases = $.allowedDatabases;
        this.allowedIntegrationTypes = $.allowedIntegrationTypes;
        this.allowedShares = $.allowedShares;
        this.fromReplica = $.fromReplica;
        this.ignoreEditionCheck = $.ignoreEditionCheck;
        this.name = $.name;
        this.objectTypes = $.objectTypes;
        this.replicationSchedule = $.replicationSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailoverGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailoverGroupState $;

        public Builder() {
            $ = new FailoverGroupState();
        }

        public Builder(FailoverGroupState defaults) {
            $ = new FailoverGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAccounts Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
         * 
         * @return builder
         * 
         */
        public Builder allowedAccounts(@Nullable Output<List<String>> allowedAccounts) {
            $.allowedAccounts = allowedAccounts;
            return this;
        }

        /**
         * @param allowedAccounts Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
         * 
         * @return builder
         * 
         */
        public Builder allowedAccounts(List<String> allowedAccounts) {
            return allowedAccounts(Output.of(allowedAccounts));
        }

        /**
         * @param allowedAccounts Specifies the target account or list of target accounts to which replication and failover of specified objects from the source account is enabled. Secondary failover groups in the target accounts in this list can be promoted to serve as the primary failover group in case of failover. Expected in the form \n\n.\n\n
         * 
         * @return builder
         * 
         */
        public Builder allowedAccounts(String... allowedAccounts) {
            return allowedAccounts(List.of(allowedAccounts));
        }

        /**
         * @param allowedDatabases Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedDatabases(@Nullable Output<List<String>> allowedDatabases) {
            $.allowedDatabases = allowedDatabases;
            return this;
        }

        /**
         * @param allowedDatabases Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedDatabases(List<String> allowedDatabases) {
            return allowedDatabases(Output.of(allowedDatabases));
        }

        /**
         * @param allowedDatabases Specifies the database or list of databases for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include DATABASES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedDatabases(String... allowedDatabases) {
            return allowedDatabases(List.of(allowedDatabases));
        }

        /**
         * @param allowedIntegrationTypes Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: &#34;SECURITY INTEGRATIONS&#34;, &#34;API INTEGRATIONS&#34;
         * 
         * @return builder
         * 
         */
        public Builder allowedIntegrationTypes(@Nullable Output<List<String>> allowedIntegrationTypes) {
            $.allowedIntegrationTypes = allowedIntegrationTypes;
            return this;
        }

        /**
         * @param allowedIntegrationTypes Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: &#34;SECURITY INTEGRATIONS&#34;, &#34;API INTEGRATIONS&#34;
         * 
         * @return builder
         * 
         */
        public Builder allowedIntegrationTypes(List<String> allowedIntegrationTypes) {
            return allowedIntegrationTypes(Output.of(allowedIntegrationTypes));
        }

        /**
         * @param allowedIntegrationTypes Type(s) of integrations for which you are enabling replication and failover from the source account to the target account. This property requires that the OBJECT_TYPES list include INTEGRATIONS to set this parameter. The following integration types are supported: &#34;SECURITY INTEGRATIONS&#34;, &#34;API INTEGRATIONS&#34;
         * 
         * @return builder
         * 
         */
        public Builder allowedIntegrationTypes(String... allowedIntegrationTypes) {
            return allowedIntegrationTypes(List.of(allowedIntegrationTypes));
        }

        /**
         * @param allowedShares Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedShares(@Nullable Output<List<String>> allowedShares) {
            $.allowedShares = allowedShares;
            return this;
        }

        /**
         * @param allowedShares Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedShares(List<String> allowedShares) {
            return allowedShares(Output.of(allowedShares));
        }

        /**
         * @param allowedShares Specifies the share or list of shares for which you are enabling replication and failover from the source account to the target account. The OBJECT_TYPES list must include SHARES to set this parameter.
         * 
         * @return builder
         * 
         */
        public Builder allowedShares(String... allowedShares) {
            return allowedShares(List.of(allowedShares));
        }

        /**
         * @param fromReplica Specifies the name of the replica to use as the source for the failover group.
         * 
         * @return builder
         * 
         */
        public Builder fromReplica(@Nullable Output<FailoverGroupFromReplicaArgs> fromReplica) {
            $.fromReplica = fromReplica;
            return this;
        }

        /**
         * @param fromReplica Specifies the name of the replica to use as the source for the failover group.
         * 
         * @return builder
         * 
         */
        public Builder fromReplica(FailoverGroupFromReplicaArgs fromReplica) {
            return fromReplica(Output.of(fromReplica));
        }

        /**
         * @param ignoreEditionCheck Allows replicating objects to accounts on lower editions.
         * 
         * @return builder
         * 
         */
        public Builder ignoreEditionCheck(@Nullable Output<Boolean> ignoreEditionCheck) {
            $.ignoreEditionCheck = ignoreEditionCheck;
            return this;
        }

        /**
         * @param ignoreEditionCheck Allows replicating objects to accounts on lower editions.
         * 
         * @return builder
         * 
         */
        public Builder ignoreEditionCheck(Boolean ignoreEditionCheck) {
            return ignoreEditionCheck(Output.of(ignoreEditionCheck));
        }

        /**
         * @param name Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. &#34;My object&#34;). Identifiers enclosed in double quotes are also case-sensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the identifier for the failover group. The identifier must start with an alphabetic character and cannot contain spaces or special characters unless the identifier string is enclosed in double quotes (e.g. &#34;My object&#34;). Identifiers enclosed in double quotes are also case-sensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectTypes Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: &#34;ACCOUNT PARAMETERS&#34;, &#34;DATABASES&#34;, &#34;INTEGRATIONS&#34;, &#34;NETWORK POLICIES&#34;, &#34;RESOURCE MONITORS&#34;, &#34;ROLES&#34;, &#34;SHARES&#34;, &#34;USERS&#34;, &#34;WAREHOUSES&#34;
         * 
         * @return builder
         * 
         */
        public Builder objectTypes(@Nullable Output<List<String>> objectTypes) {
            $.objectTypes = objectTypes;
            return this;
        }

        /**
         * @param objectTypes Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: &#34;ACCOUNT PARAMETERS&#34;, &#34;DATABASES&#34;, &#34;INTEGRATIONS&#34;, &#34;NETWORK POLICIES&#34;, &#34;RESOURCE MONITORS&#34;, &#34;ROLES&#34;, &#34;SHARES&#34;, &#34;USERS&#34;, &#34;WAREHOUSES&#34;
         * 
         * @return builder
         * 
         */
        public Builder objectTypes(List<String> objectTypes) {
            return objectTypes(Output.of(objectTypes));
        }

        /**
         * @param objectTypes Type(s) of objects for which you are enabling replication and failover from the source account to the target account. The following object types are supported: &#34;ACCOUNT PARAMETERS&#34;, &#34;DATABASES&#34;, &#34;INTEGRATIONS&#34;, &#34;NETWORK POLICIES&#34;, &#34;RESOURCE MONITORS&#34;, &#34;ROLES&#34;, &#34;SHARES&#34;, &#34;USERS&#34;, &#34;WAREHOUSES&#34;
         * 
         * @return builder
         * 
         */
        public Builder objectTypes(String... objectTypes) {
            return objectTypes(List.of(objectTypes));
        }

        /**
         * @param replicationSchedule Specifies the schedule for refreshing secondary failover groups.
         * 
         * @return builder
         * 
         */
        public Builder replicationSchedule(@Nullable Output<FailoverGroupReplicationScheduleArgs> replicationSchedule) {
            $.replicationSchedule = replicationSchedule;
            return this;
        }

        /**
         * @param replicationSchedule Specifies the schedule for refreshing secondary failover groups.
         * 
         * @return builder
         * 
         */
        public Builder replicationSchedule(FailoverGroupReplicationScheduleArgs replicationSchedule) {
            return replicationSchedule(Output.of(replicationSchedule));
        }

        public FailoverGroupState build() {
            return $;
        }
    }

}
