// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetAlertsAlert;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlertsResult {
    /**
     * @return Lists alerts for the current/specified database or schema, or across the entire account.
     * 
     */
    private List<GetAlertsAlert> alerts;
    /**
     * @return The database from which to return the alerts from.
     * 
     */
    private @Nullable String database;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Filters the command output by object name.
     * 
     */
    private @Nullable String pattern;
    /**
     * @return The schema from which to return the alerts from.
     * 
     */
    private @Nullable String schema;

    private GetAlertsResult() {}
    /**
     * @return Lists alerts for the current/specified database or schema, or across the entire account.
     * 
     */
    public List<GetAlertsAlert> alerts() {
        return this.alerts;
    }
    /**
     * @return The database from which to return the alerts from.
     * 
     */
    public Optional<String> database() {
        return Optional.ofNullable(this.database);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Filters the command output by object name.
     * 
     */
    public Optional<String> pattern() {
        return Optional.ofNullable(this.pattern);
    }
    /**
     * @return The schema from which to return the alerts from.
     * 
     */
    public Optional<String> schema() {
        return Optional.ofNullable(this.schema);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAlertsAlert> alerts;
        private @Nullable String database;
        private String id;
        private @Nullable String pattern;
        private @Nullable String schema;
        public Builder() {}
        public Builder(GetAlertsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alerts = defaults.alerts;
    	      this.database = defaults.database;
    	      this.id = defaults.id;
    	      this.pattern = defaults.pattern;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder alerts(List<GetAlertsAlert> alerts) {
            if (alerts == null) {
              throw new MissingRequiredPropertyException("GetAlertsResult", "alerts");
            }
            this.alerts = alerts;
            return this;
        }
        public Builder alerts(GetAlertsAlert... alerts) {
            return alerts(List.of(alerts));
        }
        @CustomType.Setter
        public Builder database(@Nullable String database) {

            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAlertsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pattern(@Nullable String pattern) {

            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder schema(@Nullable String schema) {

            this.schema = schema;
            return this;
        }
        public GetAlertsResult build() {
            final var _resultValue = new GetAlertsResult();
            _resultValue.alerts = alerts;
            _resultValue.database = database;
            _resultValue.id = id;
            _resultValue.pattern = pattern;
            _resultValue.schema = schema;
            return _resultValue;
        }
    }
}
