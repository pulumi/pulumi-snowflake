// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.GetTagsIn;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagsPlainArgs Empty = new GetTagsPlainArgs();

    /**
     * IN clause to filter the list of objects
     * 
     */
    @Import(name="in")
    private @Nullable GetTagsIn in;

    /**
     * @return IN clause to filter the list of objects
     * 
     */
    public Optional<GetTagsIn> in() {
        return Optional.ofNullable(this.in);
    }

    /**
     * Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    @Import(name="like")
    private @Nullable String like;

    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }

    private GetTagsPlainArgs() {}

    private GetTagsPlainArgs(GetTagsPlainArgs $) {
        this.in = $.in;
        this.like = $.like;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagsPlainArgs $;

        public Builder() {
            $ = new GetTagsPlainArgs();
        }

        public Builder(GetTagsPlainArgs defaults) {
            $ = new GetTagsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param in IN clause to filter the list of objects
         * 
         * @return builder
         * 
         */
        public Builder in(@Nullable GetTagsIn in) {
            $.in = in;
            return this;
        }

        /**
         * @param like Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
         * 
         * @return builder
         * 
         */
        public Builder like(@Nullable String like) {
            $.like = like;
            return this;
        }

        public GetTagsPlainArgs build() {
            return $;
        }
    }

}
