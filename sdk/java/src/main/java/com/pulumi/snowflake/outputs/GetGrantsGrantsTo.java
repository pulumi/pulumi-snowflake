// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.snowflake.outputs.GetGrantsGrantsToShare;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGrantsGrantsTo {
    /**
     * @return Lists all privileges and roles granted to the role.
     * 
     */
    private @Nullable String accountRole;
    /**
     * @return Lists all the privileges and roles granted to the application.
     * 
     */
    private @Nullable String application;
    /**
     * @return Lists all the privileges and roles granted to the application role. Must be a fully qualified name (&#34;&amp;lt;app*name&amp;gt;&#34;.&#34;&amp;lt;app*role_name&amp;gt;&#34;).
     * 
     */
    private @Nullable String applicationRole;
    /**
     * @return Lists all privileges and roles granted to the database role. Must be a fully qualified name (&#34;&amp;lt;db*name&amp;gt;&#34;.&#34;&amp;lt;database*role_name&amp;gt;&#34;).
     * 
     */
    private @Nullable String databaseRole;
    /**
     * @return Lists all the privileges granted to the share.
     * 
     */
    private @Nullable GetGrantsGrantsToShare share;
    /**
     * @return Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed.
     * 
     */
    private @Nullable String user;

    private GetGrantsGrantsTo() {}
    /**
     * @return Lists all privileges and roles granted to the role.
     * 
     */
    public Optional<String> accountRole() {
        return Optional.ofNullable(this.accountRole);
    }
    /**
     * @return Lists all the privileges and roles granted to the application.
     * 
     */
    public Optional<String> application() {
        return Optional.ofNullable(this.application);
    }
    /**
     * @return Lists all the privileges and roles granted to the application role. Must be a fully qualified name (&#34;&amp;lt;app*name&amp;gt;&#34;.&#34;&amp;lt;app*role_name&amp;gt;&#34;).
     * 
     */
    public Optional<String> applicationRole() {
        return Optional.ofNullable(this.applicationRole);
    }
    /**
     * @return Lists all privileges and roles granted to the database role. Must be a fully qualified name (&#34;&amp;lt;db*name&amp;gt;&#34;.&#34;&amp;lt;database*role_name&amp;gt;&#34;).
     * 
     */
    public Optional<String> databaseRole() {
        return Optional.ofNullable(this.databaseRole);
    }
    /**
     * @return Lists all the privileges granted to the share.
     * 
     */
    public Optional<GetGrantsGrantsToShare> share() {
        return Optional.ofNullable(this.share);
    }
    /**
     * @return Lists all the roles granted to the user. Note that the PUBLIC role, which is automatically available to every user, is not listed.
     * 
     */
    public Optional<String> user() {
        return Optional.ofNullable(this.user);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGrantsGrantsTo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountRole;
        private @Nullable String application;
        private @Nullable String applicationRole;
        private @Nullable String databaseRole;
        private @Nullable GetGrantsGrantsToShare share;
        private @Nullable String user;
        public Builder() {}
        public Builder(GetGrantsGrantsTo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountRole = defaults.accountRole;
    	      this.application = defaults.application;
    	      this.applicationRole = defaults.applicationRole;
    	      this.databaseRole = defaults.databaseRole;
    	      this.share = defaults.share;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder accountRole(@Nullable String accountRole) {

            this.accountRole = accountRole;
            return this;
        }
        @CustomType.Setter
        public Builder application(@Nullable String application) {

            this.application = application;
            return this;
        }
        @CustomType.Setter
        public Builder applicationRole(@Nullable String applicationRole) {

            this.applicationRole = applicationRole;
            return this;
        }
        @CustomType.Setter
        public Builder databaseRole(@Nullable String databaseRole) {

            this.databaseRole = databaseRole;
            return this;
        }
        @CustomType.Setter
        public Builder share(@Nullable GetGrantsGrantsToShare share) {

            this.share = share;
            return this;
        }
        @CustomType.Setter
        public Builder user(@Nullable String user) {

            this.user = user;
            return this;
        }
        public GetGrantsGrantsTo build() {
            final var _resultValue = new GetGrantsGrantsTo();
            _resultValue.accountRole = accountRole;
            _resultValue.application = application;
            _resultValue.applicationRole = applicationRole;
            _resultValue.databaseRole = databaseRole;
            _resultValue.share = share;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
