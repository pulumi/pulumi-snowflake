// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.UserPasswordPolicyAttachmentArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.UserPasswordPolicyAttachmentState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Specifies the password policy to use for a certain user.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.snowflake.User;
 * import com.pulumi.snowflake.PasswordPolicy;
 * import com.pulumi.snowflake.PasswordPolicyArgs;
 * import com.pulumi.snowflake.UserPasswordPolicyAttachment;
 * import com.pulumi.snowflake.UserPasswordPolicyAttachmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var user = new User(&#34;user&#34;);
 * 
 *         var pp = new PasswordPolicy(&#34;pp&#34;, PasswordPolicyArgs.builder()        
 *             .database(&#34;prod&#34;)
 *             .schema(&#34;security&#34;)
 *             .build());
 * 
 *         var ppa = new UserPasswordPolicyAttachment(&#34;ppa&#34;, UserPasswordPolicyAttachmentArgs.builder()        
 *             .passwordPolicyDatabase(pp.database())
 *             .passwordPolicySchema(pp.schema())
 *             .passwordPolicyName(pp.name())
 *             .userName(user.name())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/userPasswordPolicyAttachment:UserPasswordPolicyAttachment example &#34;MY_DATABASE|MY_SCHEMA|PASSWORD_POLICY_NAME|USER_NAME&#34;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/userPasswordPolicyAttachment:UserPasswordPolicyAttachment")
public class UserPasswordPolicyAttachment extends com.pulumi.resources.CustomResource {
    /**
     * Fully qualified name of the password policy
     * 
     */
    @Export(name="passwordPolicyName", refs={String.class}, tree="[0]")
    private Output<String> passwordPolicyName;

    /**
     * @return Fully qualified name of the password policy
     * 
     */
    public Output<String> passwordPolicyName() {
        return this.passwordPolicyName;
    }
    /**
     * User name of the user you want to attach the password policy to
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output<String> userName;

    /**
     * @return User name of the user you want to attach the password policy to
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserPasswordPolicyAttachment(String name) {
        this(name, UserPasswordPolicyAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserPasswordPolicyAttachment(String name, UserPasswordPolicyAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserPasswordPolicyAttachment(String name, UserPasswordPolicyAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/userPasswordPolicyAttachment:UserPasswordPolicyAttachment", name, args == null ? UserPasswordPolicyAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UserPasswordPolicyAttachment(String name, Output<String> id, @Nullable UserPasswordPolicyAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/userPasswordPolicyAttachment:UserPasswordPolicyAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserPasswordPolicyAttachment get(String name, Output<String> id, @Nullable UserPasswordPolicyAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserPasswordPolicyAttachment(name, id, state, options);
    }
}
