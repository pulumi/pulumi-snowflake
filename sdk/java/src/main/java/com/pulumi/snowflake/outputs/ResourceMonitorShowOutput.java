// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResourceMonitorShowOutput {
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable Double creditQuota;
    private @Nullable String endTime;
    private @Nullable String frequency;
    private @Nullable String level;
    private @Nullable String name;
    private @Nullable String owner;
    private @Nullable Double remainingCredits;
    private @Nullable String startTime;
    private @Nullable Integer suspendAt;
    private @Nullable Integer suspendImmediateAt;
    private @Nullable Double usedCredits;

    private ResourceMonitorShowOutput() {}
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<Double> creditQuota() {
        return Optional.ofNullable(this.creditQuota);
    }
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    public Optional<String> frequency() {
        return Optional.ofNullable(this.frequency);
    }
    public Optional<String> level() {
        return Optional.ofNullable(this.level);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<Double> remainingCredits() {
        return Optional.ofNullable(this.remainingCredits);
    }
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }
    public Optional<Integer> suspendAt() {
        return Optional.ofNullable(this.suspendAt);
    }
    public Optional<Integer> suspendImmediateAt() {
        return Optional.ofNullable(this.suspendImmediateAt);
    }
    public Optional<Double> usedCredits() {
        return Optional.ofNullable(this.usedCredits);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceMonitorShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable Double creditQuota;
        private @Nullable String endTime;
        private @Nullable String frequency;
        private @Nullable String level;
        private @Nullable String name;
        private @Nullable String owner;
        private @Nullable Double remainingCredits;
        private @Nullable String startTime;
        private @Nullable Integer suspendAt;
        private @Nullable Integer suspendImmediateAt;
        private @Nullable Double usedCredits;
        public Builder() {}
        public Builder(ResourceMonitorShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.creditQuota = defaults.creditQuota;
    	      this.endTime = defaults.endTime;
    	      this.frequency = defaults.frequency;
    	      this.level = defaults.level;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.remainingCredits = defaults.remainingCredits;
    	      this.startTime = defaults.startTime;
    	      this.suspendAt = defaults.suspendAt;
    	      this.suspendImmediateAt = defaults.suspendImmediateAt;
    	      this.usedCredits = defaults.usedCredits;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder creditQuota(@Nullable Double creditQuota) {

            this.creditQuota = creditQuota;
            return this;
        }
        @CustomType.Setter
        public Builder endTime(@Nullable String endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder frequency(@Nullable String frequency) {

            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder level(@Nullable String level) {

            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder remainingCredits(@Nullable Double remainingCredits) {

            this.remainingCredits = remainingCredits;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder suspendAt(@Nullable Integer suspendAt) {

            this.suspendAt = suspendAt;
            return this;
        }
        @CustomType.Setter
        public Builder suspendImmediateAt(@Nullable Integer suspendImmediateAt) {

            this.suspendImmediateAt = suspendImmediateAt;
            return this;
        }
        @CustomType.Setter
        public Builder usedCredits(@Nullable Double usedCredits) {

            this.usedCredits = usedCredits;
            return this;
        }
        public ResourceMonitorShowOutput build() {
            final var _resultValue = new ResourceMonitorShowOutput();
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.creditQuota = creditQuota;
            _resultValue.endTime = endTime;
            _resultValue.frequency = frequency;
            _resultValue.level = level;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.remainingCredits = remainingCredits;
            _resultValue.startTime = startTime;
            _resultValue.suspendAt = suspendAt;
            _resultValue.suspendImmediateAt = suspendImmediateAt;
            _resultValue.usedCredits = usedCredits;
            return _resultValue;
        }
    }
}
