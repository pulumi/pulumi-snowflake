// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UserPasswordPolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPasswordPolicyAttachmentArgs Empty = new UserPasswordPolicyAttachmentArgs();

    /**
     * Fully qualified name of the password policy
     * 
     */
    @Import(name="passwordPolicyName", required=true)
    private Output<String> passwordPolicyName;

    /**
     * @return Fully qualified name of the password policy
     * 
     */
    public Output<String> passwordPolicyName() {
        return this.passwordPolicyName;
    }

    /**
     * User name of the user you want to attach the password policy to
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return User name of the user you want to attach the password policy to
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private UserPasswordPolicyAttachmentArgs() {}

    private UserPasswordPolicyAttachmentArgs(UserPasswordPolicyAttachmentArgs $) {
        this.passwordPolicyName = $.passwordPolicyName;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPasswordPolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPasswordPolicyAttachmentArgs $;

        public Builder() {
            $ = new UserPasswordPolicyAttachmentArgs();
        }

        public Builder(UserPasswordPolicyAttachmentArgs defaults) {
            $ = new UserPasswordPolicyAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passwordPolicyName Fully qualified name of the password policy
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicyName(Output<String> passwordPolicyName) {
            $.passwordPolicyName = passwordPolicyName;
            return this;
        }

        /**
         * @param passwordPolicyName Fully qualified name of the password policy
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicyName(String passwordPolicyName) {
            return passwordPolicyName(Output.of(passwordPolicyName));
        }

        /**
         * @param userName User name of the user you want to attach the password policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName User name of the user you want to attach the password policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserPasswordPolicyAttachmentArgs build() {
            if ($.passwordPolicyName == null) {
                throw new MissingRequiredPropertyException("UserPasswordPolicyAttachmentArgs", "passwordPolicyName");
            }
            if ($.userName == null) {
                throw new MissingRequiredPropertyException("UserPasswordPolicyAttachmentArgs", "userName");
            }
            return $;
        }
    }

}
