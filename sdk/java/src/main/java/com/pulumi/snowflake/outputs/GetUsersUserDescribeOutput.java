// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUsersUserDescribeOutput {
    private String comment;
    private String customLandingPageUrl;
    private Boolean customLandingPageUrlFlushNextUiLoad;
    private Double daysToExpiry;
    private String defaultNamespace;
    private String defaultRole;
    private String defaultSecondaryRoles;
    private String defaultWarehouse;
    private Boolean disabled;
    private String displayName;
    private String email;
    private Boolean extAuthnDuo;
    private String extAuthnUid;
    private String firstName;
    private Boolean hasMfa;
    private String lastName;
    private String loginName;
    private String middleName;
    private Integer minsToBypassMfa;
    private Integer minsToBypassNetworkPolicy;
    private Integer minsToUnlock;
    private Boolean mustChangePassword;
    private String name;
    private String passwordLastSetTime;
    private String rsaPublicKey;
    private String rsaPublicKey2;
    private String rsaPublicKey2Fp;
    private String rsaPublicKeyFp;
    private Boolean snowflakeLock;
    private Boolean snowflakeSupport;
    private String type;

    private GetUsersUserDescribeOutput() {}
    public String comment() {
        return this.comment;
    }
    public String customLandingPageUrl() {
        return this.customLandingPageUrl;
    }
    public Boolean customLandingPageUrlFlushNextUiLoad() {
        return this.customLandingPageUrlFlushNextUiLoad;
    }
    public Double daysToExpiry() {
        return this.daysToExpiry;
    }
    public String defaultNamespace() {
        return this.defaultNamespace;
    }
    public String defaultRole() {
        return this.defaultRole;
    }
    public String defaultSecondaryRoles() {
        return this.defaultSecondaryRoles;
    }
    public String defaultWarehouse() {
        return this.defaultWarehouse;
    }
    public Boolean disabled() {
        return this.disabled;
    }
    public String displayName() {
        return this.displayName;
    }
    public String email() {
        return this.email;
    }
    public Boolean extAuthnDuo() {
        return this.extAuthnDuo;
    }
    public String extAuthnUid() {
        return this.extAuthnUid;
    }
    public String firstName() {
        return this.firstName;
    }
    public Boolean hasMfa() {
        return this.hasMfa;
    }
    public String lastName() {
        return this.lastName;
    }
    public String loginName() {
        return this.loginName;
    }
    public String middleName() {
        return this.middleName;
    }
    public Integer minsToBypassMfa() {
        return this.minsToBypassMfa;
    }
    public Integer minsToBypassNetworkPolicy() {
        return this.minsToBypassNetworkPolicy;
    }
    public Integer minsToUnlock() {
        return this.minsToUnlock;
    }
    public Boolean mustChangePassword() {
        return this.mustChangePassword;
    }
    public String name() {
        return this.name;
    }
    public String passwordLastSetTime() {
        return this.passwordLastSetTime;
    }
    public String rsaPublicKey() {
        return this.rsaPublicKey;
    }
    public String rsaPublicKey2() {
        return this.rsaPublicKey2;
    }
    public String rsaPublicKey2Fp() {
        return this.rsaPublicKey2Fp;
    }
    public String rsaPublicKeyFp() {
        return this.rsaPublicKeyFp;
    }
    public Boolean snowflakeLock() {
        return this.snowflakeLock;
    }
    public Boolean snowflakeSupport() {
        return this.snowflakeSupport;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUserDescribeOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String customLandingPageUrl;
        private Boolean customLandingPageUrlFlushNextUiLoad;
        private Double daysToExpiry;
        private String defaultNamespace;
        private String defaultRole;
        private String defaultSecondaryRoles;
        private String defaultWarehouse;
        private Boolean disabled;
        private String displayName;
        private String email;
        private Boolean extAuthnDuo;
        private String extAuthnUid;
        private String firstName;
        private Boolean hasMfa;
        private String lastName;
        private String loginName;
        private String middleName;
        private Integer minsToBypassMfa;
        private Integer minsToBypassNetworkPolicy;
        private Integer minsToUnlock;
        private Boolean mustChangePassword;
        private String name;
        private String passwordLastSetTime;
        private String rsaPublicKey;
        private String rsaPublicKey2;
        private String rsaPublicKey2Fp;
        private String rsaPublicKeyFp;
        private Boolean snowflakeLock;
        private Boolean snowflakeSupport;
        private String type;
        public Builder() {}
        public Builder(GetUsersUserDescribeOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.customLandingPageUrl = defaults.customLandingPageUrl;
    	      this.customLandingPageUrlFlushNextUiLoad = defaults.customLandingPageUrlFlushNextUiLoad;
    	      this.daysToExpiry = defaults.daysToExpiry;
    	      this.defaultNamespace = defaults.defaultNamespace;
    	      this.defaultRole = defaults.defaultRole;
    	      this.defaultSecondaryRoles = defaults.defaultSecondaryRoles;
    	      this.defaultWarehouse = defaults.defaultWarehouse;
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.email = defaults.email;
    	      this.extAuthnDuo = defaults.extAuthnDuo;
    	      this.extAuthnUid = defaults.extAuthnUid;
    	      this.firstName = defaults.firstName;
    	      this.hasMfa = defaults.hasMfa;
    	      this.lastName = defaults.lastName;
    	      this.loginName = defaults.loginName;
    	      this.middleName = defaults.middleName;
    	      this.minsToBypassMfa = defaults.minsToBypassMfa;
    	      this.minsToBypassNetworkPolicy = defaults.minsToBypassNetworkPolicy;
    	      this.minsToUnlock = defaults.minsToUnlock;
    	      this.mustChangePassword = defaults.mustChangePassword;
    	      this.name = defaults.name;
    	      this.passwordLastSetTime = defaults.passwordLastSetTime;
    	      this.rsaPublicKey = defaults.rsaPublicKey;
    	      this.rsaPublicKey2 = defaults.rsaPublicKey2;
    	      this.rsaPublicKey2Fp = defaults.rsaPublicKey2Fp;
    	      this.rsaPublicKeyFp = defaults.rsaPublicKeyFp;
    	      this.snowflakeLock = defaults.snowflakeLock;
    	      this.snowflakeSupport = defaults.snowflakeSupport;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder customLandingPageUrl(String customLandingPageUrl) {
            if (customLandingPageUrl == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "customLandingPageUrl");
            }
            this.customLandingPageUrl = customLandingPageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder customLandingPageUrlFlushNextUiLoad(Boolean customLandingPageUrlFlushNextUiLoad) {
            if (customLandingPageUrlFlushNextUiLoad == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "customLandingPageUrlFlushNextUiLoad");
            }
            this.customLandingPageUrlFlushNextUiLoad = customLandingPageUrlFlushNextUiLoad;
            return this;
        }
        @CustomType.Setter
        public Builder daysToExpiry(Double daysToExpiry) {
            if (daysToExpiry == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "daysToExpiry");
            }
            this.daysToExpiry = daysToExpiry;
            return this;
        }
        @CustomType.Setter
        public Builder defaultNamespace(String defaultNamespace) {
            if (defaultNamespace == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "defaultNamespace");
            }
            this.defaultNamespace = defaultNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRole(String defaultRole) {
            if (defaultRole == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "defaultRole");
            }
            this.defaultRole = defaultRole;
            return this;
        }
        @CustomType.Setter
        public Builder defaultSecondaryRoles(String defaultSecondaryRoles) {
            if (defaultSecondaryRoles == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "defaultSecondaryRoles");
            }
            this.defaultSecondaryRoles = defaultSecondaryRoles;
            return this;
        }
        @CustomType.Setter
        public Builder defaultWarehouse(String defaultWarehouse) {
            if (defaultWarehouse == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "defaultWarehouse");
            }
            this.defaultWarehouse = defaultWarehouse;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder extAuthnDuo(Boolean extAuthnDuo) {
            if (extAuthnDuo == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "extAuthnDuo");
            }
            this.extAuthnDuo = extAuthnDuo;
            return this;
        }
        @CustomType.Setter
        public Builder extAuthnUid(String extAuthnUid) {
            if (extAuthnUid == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "extAuthnUid");
            }
            this.extAuthnUid = extAuthnUid;
            return this;
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            if (firstName == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "firstName");
            }
            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder hasMfa(Boolean hasMfa) {
            if (hasMfa == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "hasMfa");
            }
            this.hasMfa = hasMfa;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            if (lastName == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "lastName");
            }
            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder loginName(String loginName) {
            if (loginName == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "loginName");
            }
            this.loginName = loginName;
            return this;
        }
        @CustomType.Setter
        public Builder middleName(String middleName) {
            if (middleName == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "middleName");
            }
            this.middleName = middleName;
            return this;
        }
        @CustomType.Setter
        public Builder minsToBypassMfa(Integer minsToBypassMfa) {
            if (minsToBypassMfa == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "minsToBypassMfa");
            }
            this.minsToBypassMfa = minsToBypassMfa;
            return this;
        }
        @CustomType.Setter
        public Builder minsToBypassNetworkPolicy(Integer minsToBypassNetworkPolicy) {
            if (minsToBypassNetworkPolicy == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "minsToBypassNetworkPolicy");
            }
            this.minsToBypassNetworkPolicy = minsToBypassNetworkPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder minsToUnlock(Integer minsToUnlock) {
            if (minsToUnlock == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "minsToUnlock");
            }
            this.minsToUnlock = minsToUnlock;
            return this;
        }
        @CustomType.Setter
        public Builder mustChangePassword(Boolean mustChangePassword) {
            if (mustChangePassword == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "mustChangePassword");
            }
            this.mustChangePassword = mustChangePassword;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder passwordLastSetTime(String passwordLastSetTime) {
            if (passwordLastSetTime == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "passwordLastSetTime");
            }
            this.passwordLastSetTime = passwordLastSetTime;
            return this;
        }
        @CustomType.Setter
        public Builder rsaPublicKey(String rsaPublicKey) {
            if (rsaPublicKey == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "rsaPublicKey");
            }
            this.rsaPublicKey = rsaPublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder rsaPublicKey2(String rsaPublicKey2) {
            if (rsaPublicKey2 == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "rsaPublicKey2");
            }
            this.rsaPublicKey2 = rsaPublicKey2;
            return this;
        }
        @CustomType.Setter
        public Builder rsaPublicKey2Fp(String rsaPublicKey2Fp) {
            if (rsaPublicKey2Fp == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "rsaPublicKey2Fp");
            }
            this.rsaPublicKey2Fp = rsaPublicKey2Fp;
            return this;
        }
        @CustomType.Setter
        public Builder rsaPublicKeyFp(String rsaPublicKeyFp) {
            if (rsaPublicKeyFp == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "rsaPublicKeyFp");
            }
            this.rsaPublicKeyFp = rsaPublicKeyFp;
            return this;
        }
        @CustomType.Setter
        public Builder snowflakeLock(Boolean snowflakeLock) {
            if (snowflakeLock == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "snowflakeLock");
            }
            this.snowflakeLock = snowflakeLock;
            return this;
        }
        @CustomType.Setter
        public Builder snowflakeSupport(Boolean snowflakeSupport) {
            if (snowflakeSupport == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "snowflakeSupport");
            }
            this.snowflakeSupport = snowflakeSupport;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetUsersUserDescribeOutput", "type");
            }
            this.type = type;
            return this;
        }
        public GetUsersUserDescribeOutput build() {
            final var _resultValue = new GetUsersUserDescribeOutput();
            _resultValue.comment = comment;
            _resultValue.customLandingPageUrl = customLandingPageUrl;
            _resultValue.customLandingPageUrlFlushNextUiLoad = customLandingPageUrlFlushNextUiLoad;
            _resultValue.daysToExpiry = daysToExpiry;
            _resultValue.defaultNamespace = defaultNamespace;
            _resultValue.defaultRole = defaultRole;
            _resultValue.defaultSecondaryRoles = defaultSecondaryRoles;
            _resultValue.defaultWarehouse = defaultWarehouse;
            _resultValue.disabled = disabled;
            _resultValue.displayName = displayName;
            _resultValue.email = email;
            _resultValue.extAuthnDuo = extAuthnDuo;
            _resultValue.extAuthnUid = extAuthnUid;
            _resultValue.firstName = firstName;
            _resultValue.hasMfa = hasMfa;
            _resultValue.lastName = lastName;
            _resultValue.loginName = loginName;
            _resultValue.middleName = middleName;
            _resultValue.minsToBypassMfa = minsToBypassMfa;
            _resultValue.minsToBypassNetworkPolicy = minsToBypassNetworkPolicy;
            _resultValue.minsToUnlock = minsToUnlock;
            _resultValue.mustChangePassword = mustChangePassword;
            _resultValue.name = name;
            _resultValue.passwordLastSetTime = passwordLastSetTime;
            _resultValue.rsaPublicKey = rsaPublicKey;
            _resultValue.rsaPublicKey2 = rsaPublicKey2;
            _resultValue.rsaPublicKey2Fp = rsaPublicKey2Fp;
            _resultValue.rsaPublicKeyFp = rsaPublicKeyFp;
            _resultValue.snowflakeLock = snowflakeLock;
            _resultValue.snowflakeSupport = snowflakeSupport;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
