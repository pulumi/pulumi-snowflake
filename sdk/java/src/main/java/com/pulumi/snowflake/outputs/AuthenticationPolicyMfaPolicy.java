// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthenticationPolicyMfaPolicy {
    private @Nullable List<String> allowedMethods;
    /**
     * @return Determines whether multi-factor authentication (MFA) is enforced on external authentication. Valid values are (case-insensitive): `ALL` | `NONE`.
     * 
     */
    private @Nullable String enforceMfaOnExternalAuthentication;

    private AuthenticationPolicyMfaPolicy() {}
    public List<String> allowedMethods() {
        return this.allowedMethods == null ? List.of() : this.allowedMethods;
    }
    /**
     * @return Determines whether multi-factor authentication (MFA) is enforced on external authentication. Valid values are (case-insensitive): `ALL` | `NONE`.
     * 
     */
    public Optional<String> enforceMfaOnExternalAuthentication() {
        return Optional.ofNullable(this.enforceMfaOnExternalAuthentication);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthenticationPolicyMfaPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedMethods;
        private @Nullable String enforceMfaOnExternalAuthentication;
        public Builder() {}
        public Builder(AuthenticationPolicyMfaPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMethods = defaults.allowedMethods;
    	      this.enforceMfaOnExternalAuthentication = defaults.enforceMfaOnExternalAuthentication;
        }

        @CustomType.Setter
        public Builder allowedMethods(@Nullable List<String> allowedMethods) {

            this.allowedMethods = allowedMethods;
            return this;
        }
        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }
        @CustomType.Setter
        public Builder enforceMfaOnExternalAuthentication(@Nullable String enforceMfaOnExternalAuthentication) {

            this.enforceMfaOnExternalAuthentication = enforceMfaOnExternalAuthentication;
            return this;
        }
        public AuthenticationPolicyMfaPolicy build() {
            final var _resultValue = new AuthenticationPolicyMfaPolicy();
            _resultValue.allowedMethods = allowedMethods;
            _resultValue.enforceMfaOnExternalAuthentication = enforceMfaOnExternalAuthentication;
            return _resultValue;
        }
    }
}
