// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ExternalOauthIntegrationArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ExternalOauthIntegrationState;
import com.pulumi.snowflake.outputs.ExternalOauthIntegrationDescribeOutput;
import com.pulumi.snowflake.outputs.ExternalOauthIntegrationRelatedParameter;
import com.pulumi.snowflake.outputs.ExternalOauthIntegrationShowOutput;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/externalOauthIntegration:ExternalOauthIntegration example &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/externalOauthIntegration:ExternalOauthIntegration")
public class ExternalOauthIntegration extends com.pulumi.resources.CustomResource {
    /**
     * Specifies a comment for the OAuth integration.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the OAuth integration.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    @Export(name="describeOutputs", refs={List.class,ExternalOauthIntegrationDescribeOutput.class}, tree="[0,1]")
    private Output<List<ExternalOauthIntegrationDescribeOutput>> describeOutputs;

    /**
     * @return Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    public Output<List<ExternalOauthIntegrationDescribeOutput>> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * Specifies whether to initiate operation of the integration or suspend it.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Specifies whether to initiate operation of the integration or suspend it.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Specifies the list of roles that the client can set as the primary role.
     * 
     */
    @Export(name="externalOauthAllowedRolesLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> externalOauthAllowedRolesLists;

    /**
     * @return Specifies the list of roles that the client can set as the primary role.
     * 
     */
    public Output<Optional<List<String>>> externalOauthAllowedRolesLists() {
        return Codegen.optional(this.externalOauthAllowedRolesLists);
    }
    /**
     * Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token. Valid values are (case-insensitive): `DISABLE` | `ENABLE` | `ENABLE_FOR_PRIVILEGE`.
     * 
     */
    @Export(name="externalOauthAnyRoleMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalOauthAnyRoleMode;

    /**
     * @return Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token. Valid values are (case-insensitive): `DISABLE` | `ENABLE` | `ENABLE_FOR_PRIVILEGE`.
     * 
     */
    public Output<Optional<String>> externalOauthAnyRoleMode() {
        return Codegen.optional(this.externalOauthAnyRoleMode);
    }
    /**
     * Specifies additional values that can be used for the access token&#39;s audience validation on top of using the Customer&#39;s Snowflake Account URL
     * 
     */
    @Export(name="externalOauthAudienceLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> externalOauthAudienceLists;

    /**
     * @return Specifies additional values that can be used for the access token&#39;s audience validation on top of using the Customer&#39;s Snowflake Account URL
     * 
     */
    public Output<Optional<List<String>>> externalOauthAudienceLists() {
        return Codegen.optional(this.externalOauthAudienceLists);
    }
    /**
     * Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST account parameter to FALSE.
     * 
     */
    @Export(name="externalOauthBlockedRolesLists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> externalOauthBlockedRolesLists;

    /**
     * @return Specifies the list of roles that a client cannot set as the primary role. By default, this list includes the ACCOUNTADMIN, ORGADMIN and SECURITYADMIN roles. To remove these privileged roles from the list, use the ALTER ACCOUNT command to set the EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST account parameter to FALSE.
     * 
     */
    public Output<Optional<List<String>>> externalOauthBlockedRolesLists() {
        return Codegen.optional(this.externalOauthBlockedRolesLists);
    }
    /**
     * Specifies the URL to define the OAuth 2.0 authorization server.
     * 
     */
    @Export(name="externalOauthIssuer", refs={String.class}, tree="[0]")
    private Output<String> externalOauthIssuer;

    /**
     * @return Specifies the URL to define the OAuth 2.0 authorization server.
     * 
     */
    public Output<String> externalOauthIssuer() {
        return this.externalOauthIssuer;
    }
    /**
     * Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
     * 
     */
    @Export(name="externalOauthJwsKeysUrls", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> externalOauthJwsKeysUrls;

    /**
     * @return Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3. If removed from the config, the resource is recreated.
     * 
     */
    public Output<Optional<List<String>>> externalOauthJwsKeysUrls() {
        return Codegen.optional(this.externalOauthJwsKeysUrls);
    }
    /**
     * Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
     * 
     */
    @Export(name="externalOauthRsaPublicKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalOauthRsaPublicKey;

    /**
     * @return Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. If removed from the config, the resource is recreated.
     * 
     */
    public Output<Optional<String>> externalOauthRsaPublicKey() {
        return Codegen.optional(this.externalOauthRsaPublicKey);
    }
    /**
     * Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
     * 
     */
    @Export(name="externalOauthRsaPublicKey2", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalOauthRsaPublicKey2;

    /**
     * @return Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation. If removed from the config, the resource is recreated.
     * 
     */
    public Output<Optional<String>> externalOauthRsaPublicKey2() {
        return Codegen.optional(this.externalOauthRsaPublicKey2);
    }
    /**
     * Specifies the scope delimiter in the authorization token.
     * 
     */
    @Export(name="externalOauthScopeDelimiter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalOauthScopeDelimiter;

    /**
     * @return Specifies the scope delimiter in the authorization token.
     * 
     */
    public Output<Optional<String>> externalOauthScopeDelimiter() {
        return Codegen.optional(this.externalOauthScopeDelimiter);
    }
    /**
     * Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
     * 
     */
    @Export(name="externalOauthScopeMappingAttribute", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalOauthScopeMappingAttribute;

    /**
     * @return Specifies the access token claim to map the access token to an account role. If removed from the config, the resource is recreated.
     * 
     */
    public Output<Optional<String>> externalOauthScopeMappingAttribute() {
        return Codegen.optional(this.externalOauthScopeMappingAttribute);
    }
    /**
     * Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record. Valid values are (case-insensitive): `LOGIN_NAME` | `EMAIL_ADDRESS`.
     * 
     */
    @Export(name="externalOauthSnowflakeUserMappingAttribute", refs={String.class}, tree="[0]")
    private Output<String> externalOauthSnowflakeUserMappingAttribute;

    /**
     * @return Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record. Valid values are (case-insensitive): `LOGIN_NAME` | `EMAIL_ADDRESS`.
     * 
     */
    public Output<String> externalOauthSnowflakeUserMappingAttribute() {
        return this.externalOauthSnowflakeUserMappingAttribute;
    }
    /**
     * Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
     * 
     */
    @Export(name="externalOauthTokenUserMappingClaims", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> externalOauthTokenUserMappingClaims;

    /**
     * @return Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record. If removed from the config, the resource is recreated.
     * 
     */
    public Output<List<String>> externalOauthTokenUserMappingClaims() {
        return this.externalOauthTokenUserMappingClaims;
    }
    /**
     * Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server. Valid values are (case-insensitive): `OKTA` | `AZURE` | `PING_FEDERATE` | `CUSTOM`.
     * 
     */
    @Export(name="externalOauthType", refs={String.class}, tree="[0]")
    private Output<String> externalOauthType;

    /**
     * @return Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server. Valid values are (case-insensitive): `OKTA` | `AZURE` | `PING_FEDERATE` | `CUSTOM`.
     * 
     */
    public Output<String> externalOauthType() {
        return this.externalOauthType;
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Paramteres related to this security integration.
     * 
     */
    @Export(name="relatedParameters", refs={List.class,ExternalOauthIntegrationRelatedParameter.class}, tree="[0,1]")
    private Output<List<ExternalOauthIntegrationRelatedParameter>> relatedParameters;

    /**
     * @return Paramteres related to this security integration.
     * 
     */
    public Output<List<ExternalOauthIntegrationRelatedParameter>> relatedParameters() {
        return this.relatedParameters;
    }
    /**
     * Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    @Export(name="showOutputs", refs={List.class,ExternalOauthIntegrationShowOutput.class}, tree="[0,1]")
    private Output<List<ExternalOauthIntegrationShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    public Output<List<ExternalOauthIntegrationShowOutput>> showOutputs() {
        return this.showOutputs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalOauthIntegration(java.lang.String name) {
        this(name, ExternalOauthIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalOauthIntegration(java.lang.String name, ExternalOauthIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalOauthIntegration(java.lang.String name, ExternalOauthIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/externalOauthIntegration:ExternalOauthIntegration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExternalOauthIntegration(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalOauthIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/externalOauthIntegration:ExternalOauthIntegration", name, state, makeResourceOptions(options, id), false);
    }

    private static ExternalOauthIntegrationArgs makeArgs(ExternalOauthIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExternalOauthIntegrationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalOauthIntegration get(java.lang.String name, Output<java.lang.String> id, @Nullable ExternalOauthIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalOauthIntegration(name, id, state, options);
    }
}
