// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ExternalOauthIntegrationArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ExternalOauthIntegrationState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An External OAuth security integration allows a client to use a third-party authorization server to obtain the access tokens needed to interact with Snowflake.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.snowflake.ExternalOauthIntegration;
 * import com.pulumi.snowflake.ExternalOauthIntegrationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var azure = new ExternalOauthIntegration(&#34;azure&#34;, ExternalOauthIntegrationArgs.builder()        
 *             .audienceUrls(&#34;https://analysis.windows.net/powerbi/connector/Snowflake&#34;)
 *             .enabled(true)
 *             .issuer(&#34;https://sts.windows.net/00000000-0000-0000-0000-000000000000&#34;)
 *             .jwsKeysUrls(&#34;https://login.windows.net/common/discovery/keys&#34;)
 *             .snowflakeUserMappingAttribute(&#34;LOGIN_NAME&#34;)
 *             .tokenUserMappingClaims(&#34;upn&#34;)
 *             .type(&#34;AZURE&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/externalOauthIntegration:ExternalOauthIntegration example name
 * ```
 * 
 */
@ResourceType(type="snowflake:index/externalOauthIntegration:ExternalOauthIntegration")
public class ExternalOauthIntegration extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the list of roles that the client can set as the primary role.
     * 
     */
    @Export(name="allowedRoles", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> allowedRoles;

    /**
     * @return Specifies the list of roles that the client can set as the primary role.
     * 
     */
    public Output<Optional<List<String>>> allowedRoles() {
        return Codegen.optional(this.allowedRoles);
    }
    /**
     * Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token.
     * 
     */
    @Export(name="anyRoleMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> anyRoleMode;

    /**
     * @return Specifies whether the OAuth client or user can use a role that is not defined in the OAuth access token.
     * 
     */
    public Output<Optional<String>> anyRoleMode() {
        return Codegen.optional(this.anyRoleMode);
    }
    /**
     * Specifies additional values that can be used for the access token&#39;s audience validation on top of using the Customer&#39;s Snowflake Account URL
     * 
     */
    @Export(name="audienceUrls", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> audienceUrls;

    /**
     * @return Specifies additional values that can be used for the access token&#39;s audience validation on top of using the Customer&#39;s Snowflake Account URL
     * 
     */
    public Output<Optional<List<String>>> audienceUrls() {
        return Codegen.optional(this.audienceUrls);
    }
    /**
     * Specifies the list of roles that a client cannot set as the primary role. Do not include ACCOUNTADMIN, ORGADMIN or SECURITYADMIN as they are already implicitly enforced and will cause in-place updates.
     * 
     */
    @Export(name="blockedRoles", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> blockedRoles;

    /**
     * @return Specifies the list of roles that a client cannot set as the primary role. Do not include ACCOUNTADMIN, ORGADMIN or SECURITYADMIN as they are already implicitly enforced and will cause in-place updates.
     * 
     */
    public Output<Optional<List<String>>> blockedRoles() {
        return Codegen.optional(this.blockedRoles);
    }
    /**
     * Specifies a comment for the OAuth integration.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the OAuth integration.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Date and time when the External OAUTH integration was created.
     * 
     */
    @Export(name="createdOn", refs={String.class}, tree="[0]")
    private Output<String> createdOn;

    /**
     * @return Date and time when the External OAUTH integration was created.
     * 
     */
    public Output<String> createdOn() {
        return this.createdOn;
    }
    /**
     * Specifies whether to initiate operation of the integration or suspend it.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Specifies whether to initiate operation of the integration or suspend it.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Specifies the URL to define the OAuth 2.0 authorization server.
     * 
     */
    @Export(name="issuer", refs={String.class}, tree="[0]")
    private Output<String> issuer;

    /**
     * @return Specifies the URL to define the OAuth 2.0 authorization server.
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }
    /**
     * Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3.
     * 
     */
    @Export(name="jwsKeysUrls", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> jwsKeysUrls;

    /**
     * @return Specifies the endpoint or a list of endpoints from which to download public keys or certificates to validate an External OAuth access token. The maximum number of URLs that can be specified in the list is 3.
     * 
     */
    public Output<Optional<List<String>>> jwsKeysUrls() {
        return Codegen.optional(this.jwsKeysUrls);
    }
    /**
     * Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the External Oath integration. This name follows the rules for Object Identifiers. The name should be unique among security integrations in your account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers.
     * 
     */
    @Export(name="rsaPublicKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rsaPublicKey;

    /**
     * @return Specifies a Base64-encoded RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers.
     * 
     */
    public Output<Optional<String>> rsaPublicKey() {
        return Codegen.optional(this.rsaPublicKey);
    }
    /**
     * Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation.
     * 
     */
    @Export(name="rsaPublicKey2", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rsaPublicKey2;

    /**
     * @return Specifies a second RSA public key, without the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- headers. Used for key rotation.
     * 
     */
    public Output<Optional<String>> rsaPublicKey2() {
        return Codegen.optional(this.rsaPublicKey2);
    }
    /**
     * Specifies the scope delimiter in the authorization token.
     * 
     */
    @Export(name="scopeDelimiter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scopeDelimiter;

    /**
     * @return Specifies the scope delimiter in the authorization token.
     * 
     */
    public Output<Optional<String>> scopeDelimiter() {
        return Codegen.optional(this.scopeDelimiter);
    }
    /**
     * Specifies the access token claim to map the access token to an account role.
     * 
     */
    @Export(name="scopeMappingAttribute", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scopeMappingAttribute;

    /**
     * @return Specifies the access token claim to map the access token to an account role.
     * 
     */
    public Output<Optional<String>> scopeMappingAttribute() {
        return Codegen.optional(this.scopeMappingAttribute);
    }
    /**
     * Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record.
     * 
     */
    @Export(name="snowflakeUserMappingAttribute", refs={String.class}, tree="[0]")
    private Output<String> snowflakeUserMappingAttribute;

    /**
     * @return Indicates which Snowflake user record attribute should be used to map the access token to a Snowflake user record.
     * 
     */
    public Output<String> snowflakeUserMappingAttribute() {
        return this.snowflakeUserMappingAttribute;
    }
    /**
     * Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record.
     * 
     */
    @Export(name="tokenUserMappingClaims", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> tokenUserMappingClaims;

    /**
     * @return Specifies the access token claim or claims that can be used to map the access token to a Snowflake user record.
     * 
     */
    public Output<List<String>> tokenUserMappingClaims() {
        return this.tokenUserMappingClaims;
    }
    /**
     * Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Specifies the OAuth 2.0 authorization server to be Okta, Microsoft Azure AD, Ping Identity PingFederate, or a Custom OAuth 2.0 authorization server.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExternalOauthIntegration(String name) {
        this(name, ExternalOauthIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExternalOauthIntegration(String name, ExternalOauthIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExternalOauthIntegration(String name, ExternalOauthIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/externalOauthIntegration:ExternalOauthIntegration", name, args == null ? ExternalOauthIntegrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExternalOauthIntegration(String name, Output<String> id, @Nullable ExternalOauthIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/externalOauthIntegration:ExternalOauthIntegration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExternalOauthIntegration get(String name, Output<String> id, @Nullable ExternalOauthIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExternalOauthIntegration(name, id, state, options);
    }
}
