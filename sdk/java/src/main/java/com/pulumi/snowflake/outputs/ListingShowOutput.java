// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListingShowOutput {
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable String detailedTargetAccounts;
    private @Nullable String distribution;
    private @Nullable String globalName;
    private @Nullable Boolean isApplication;
    private @Nullable Boolean isByRequest;
    private @Nullable Boolean isLimitedTrial;
    private @Nullable Boolean isMonetized;
    private @Nullable Boolean isMountlessQueryable;
    private @Nullable Boolean isTargeted;
    private @Nullable String name;
    private @Nullable String organizationProfileName;
    private @Nullable String owner;
    private @Nullable String ownerRoleType;
    private @Nullable String profile;
    private @Nullable String publishedOn;
    private @Nullable String regions;
    private @Nullable String rejectedOn;
    private @Nullable String reviewState;
    private @Nullable String state;
    private @Nullable String subtitle;
    private @Nullable String targetAccounts;
    private @Nullable String title;
    private @Nullable String uniformListingLocator;
    private @Nullable String updatedOn;

    private ListingShowOutput() {}
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<String> detailedTargetAccounts() {
        return Optional.ofNullable(this.detailedTargetAccounts);
    }
    public Optional<String> distribution() {
        return Optional.ofNullable(this.distribution);
    }
    public Optional<String> globalName() {
        return Optional.ofNullable(this.globalName);
    }
    public Optional<Boolean> isApplication() {
        return Optional.ofNullable(this.isApplication);
    }
    public Optional<Boolean> isByRequest() {
        return Optional.ofNullable(this.isByRequest);
    }
    public Optional<Boolean> isLimitedTrial() {
        return Optional.ofNullable(this.isLimitedTrial);
    }
    public Optional<Boolean> isMonetized() {
        return Optional.ofNullable(this.isMonetized);
    }
    public Optional<Boolean> isMountlessQueryable() {
        return Optional.ofNullable(this.isMountlessQueryable);
    }
    public Optional<Boolean> isTargeted() {
        return Optional.ofNullable(this.isTargeted);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> organizationProfileName() {
        return Optional.ofNullable(this.organizationProfileName);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    public Optional<String> ownerRoleType() {
        return Optional.ofNullable(this.ownerRoleType);
    }
    public Optional<String> profile() {
        return Optional.ofNullable(this.profile);
    }
    public Optional<String> publishedOn() {
        return Optional.ofNullable(this.publishedOn);
    }
    public Optional<String> regions() {
        return Optional.ofNullable(this.regions);
    }
    public Optional<String> rejectedOn() {
        return Optional.ofNullable(this.rejectedOn);
    }
    public Optional<String> reviewState() {
        return Optional.ofNullable(this.reviewState);
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> subtitle() {
        return Optional.ofNullable(this.subtitle);
    }
    public Optional<String> targetAccounts() {
        return Optional.ofNullable(this.targetAccounts);
    }
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> uniformListingLocator() {
        return Optional.ofNullable(this.uniformListingLocator);
    }
    public Optional<String> updatedOn() {
        return Optional.ofNullable(this.updatedOn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListingShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable String detailedTargetAccounts;
        private @Nullable String distribution;
        private @Nullable String globalName;
        private @Nullable Boolean isApplication;
        private @Nullable Boolean isByRequest;
        private @Nullable Boolean isLimitedTrial;
        private @Nullable Boolean isMonetized;
        private @Nullable Boolean isMountlessQueryable;
        private @Nullable Boolean isTargeted;
        private @Nullable String name;
        private @Nullable String organizationProfileName;
        private @Nullable String owner;
        private @Nullable String ownerRoleType;
        private @Nullable String profile;
        private @Nullable String publishedOn;
        private @Nullable String regions;
        private @Nullable String rejectedOn;
        private @Nullable String reviewState;
        private @Nullable String state;
        private @Nullable String subtitle;
        private @Nullable String targetAccounts;
        private @Nullable String title;
        private @Nullable String uniformListingLocator;
        private @Nullable String updatedOn;
        public Builder() {}
        public Builder(ListingShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.detailedTargetAccounts = defaults.detailedTargetAccounts;
    	      this.distribution = defaults.distribution;
    	      this.globalName = defaults.globalName;
    	      this.isApplication = defaults.isApplication;
    	      this.isByRequest = defaults.isByRequest;
    	      this.isLimitedTrial = defaults.isLimitedTrial;
    	      this.isMonetized = defaults.isMonetized;
    	      this.isMountlessQueryable = defaults.isMountlessQueryable;
    	      this.isTargeted = defaults.isTargeted;
    	      this.name = defaults.name;
    	      this.organizationProfileName = defaults.organizationProfileName;
    	      this.owner = defaults.owner;
    	      this.ownerRoleType = defaults.ownerRoleType;
    	      this.profile = defaults.profile;
    	      this.publishedOn = defaults.publishedOn;
    	      this.regions = defaults.regions;
    	      this.rejectedOn = defaults.rejectedOn;
    	      this.reviewState = defaults.reviewState;
    	      this.state = defaults.state;
    	      this.subtitle = defaults.subtitle;
    	      this.targetAccounts = defaults.targetAccounts;
    	      this.title = defaults.title;
    	      this.uniformListingLocator = defaults.uniformListingLocator;
    	      this.updatedOn = defaults.updatedOn;
        }

        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder detailedTargetAccounts(@Nullable String detailedTargetAccounts) {

            this.detailedTargetAccounts = detailedTargetAccounts;
            return this;
        }
        @CustomType.Setter
        public Builder distribution(@Nullable String distribution) {

            this.distribution = distribution;
            return this;
        }
        @CustomType.Setter
        public Builder globalName(@Nullable String globalName) {

            this.globalName = globalName;
            return this;
        }
        @CustomType.Setter
        public Builder isApplication(@Nullable Boolean isApplication) {

            this.isApplication = isApplication;
            return this;
        }
        @CustomType.Setter
        public Builder isByRequest(@Nullable Boolean isByRequest) {

            this.isByRequest = isByRequest;
            return this;
        }
        @CustomType.Setter
        public Builder isLimitedTrial(@Nullable Boolean isLimitedTrial) {

            this.isLimitedTrial = isLimitedTrial;
            return this;
        }
        @CustomType.Setter
        public Builder isMonetized(@Nullable Boolean isMonetized) {

            this.isMonetized = isMonetized;
            return this;
        }
        @CustomType.Setter
        public Builder isMountlessQueryable(@Nullable Boolean isMountlessQueryable) {

            this.isMountlessQueryable = isMountlessQueryable;
            return this;
        }
        @CustomType.Setter
        public Builder isTargeted(@Nullable Boolean isTargeted) {

            this.isTargeted = isTargeted;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationProfileName(@Nullable String organizationProfileName) {

            this.organizationProfileName = organizationProfileName;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {

            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder ownerRoleType(@Nullable String ownerRoleType) {

            this.ownerRoleType = ownerRoleType;
            return this;
        }
        @CustomType.Setter
        public Builder profile(@Nullable String profile) {

            this.profile = profile;
            return this;
        }
        @CustomType.Setter
        public Builder publishedOn(@Nullable String publishedOn) {

            this.publishedOn = publishedOn;
            return this;
        }
        @CustomType.Setter
        public Builder regions(@Nullable String regions) {

            this.regions = regions;
            return this;
        }
        @CustomType.Setter
        public Builder rejectedOn(@Nullable String rejectedOn) {

            this.rejectedOn = rejectedOn;
            return this;
        }
        @CustomType.Setter
        public Builder reviewState(@Nullable String reviewState) {

            this.reviewState = reviewState;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subtitle(@Nullable String subtitle) {

            this.subtitle = subtitle;
            return this;
        }
        @CustomType.Setter
        public Builder targetAccounts(@Nullable String targetAccounts) {

            this.targetAccounts = targetAccounts;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {

            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder uniformListingLocator(@Nullable String uniformListingLocator) {

            this.uniformListingLocator = uniformListingLocator;
            return this;
        }
        @CustomType.Setter
        public Builder updatedOn(@Nullable String updatedOn) {

            this.updatedOn = updatedOn;
            return this;
        }
        public ListingShowOutput build() {
            final var _resultValue = new ListingShowOutput();
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.detailedTargetAccounts = detailedTargetAccounts;
            _resultValue.distribution = distribution;
            _resultValue.globalName = globalName;
            _resultValue.isApplication = isApplication;
            _resultValue.isByRequest = isByRequest;
            _resultValue.isLimitedTrial = isLimitedTrial;
            _resultValue.isMonetized = isMonetized;
            _resultValue.isMountlessQueryable = isMountlessQueryable;
            _resultValue.isTargeted = isTargeted;
            _resultValue.name = name;
            _resultValue.organizationProfileName = organizationProfileName;
            _resultValue.owner = owner;
            _resultValue.ownerRoleType = ownerRoleType;
            _resultValue.profile = profile;
            _resultValue.publishedOn = publishedOn;
            _resultValue.regions = regions;
            _resultValue.rejectedOn = rejectedOn;
            _resultValue.reviewState = reviewState;
            _resultValue.state = state;
            _resultValue.subtitle = subtitle;
            _resultValue.targetAccounts = targetAccounts;
            _resultValue.title = title;
            _resultValue.uniformListingLocator = uniformListingLocator;
            _resultValue.updatedOn = updatedOn;
            return _resultValue;
        }
    }
}
