// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrantPrivilegesToRoleOnSchemaObjectAllArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrantPrivilegesToRoleOnSchemaObjectAllArgs Empty = new GrantPrivilegesToRoleOnSchemaObjectAllArgs();

    @Import(name="inDatabase")
    private @Nullable Output<String> inDatabase;

    public Optional<Output<String>> inDatabase() {
        return Optional.ofNullable(this.inDatabase);
    }

    @Import(name="inSchema")
    private @Nullable Output<String> inSchema;

    public Optional<Output<String>> inSchema() {
        return Optional.ofNullable(this.inSchema);
    }

    @Import(name="objectTypePlural", required=true)
    private Output<String> objectTypePlural;

    public Output<String> objectTypePlural() {
        return this.objectTypePlural;
    }

    private GrantPrivilegesToRoleOnSchemaObjectAllArgs() {}

    private GrantPrivilegesToRoleOnSchemaObjectAllArgs(GrantPrivilegesToRoleOnSchemaObjectAllArgs $) {
        this.inDatabase = $.inDatabase;
        this.inSchema = $.inSchema;
        this.objectTypePlural = $.objectTypePlural;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrantPrivilegesToRoleOnSchemaObjectAllArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrantPrivilegesToRoleOnSchemaObjectAllArgs $;

        public Builder() {
            $ = new GrantPrivilegesToRoleOnSchemaObjectAllArgs();
        }

        public Builder(GrantPrivilegesToRoleOnSchemaObjectAllArgs defaults) {
            $ = new GrantPrivilegesToRoleOnSchemaObjectAllArgs(Objects.requireNonNull(defaults));
        }

        public Builder inDatabase(@Nullable Output<String> inDatabase) {
            $.inDatabase = inDatabase;
            return this;
        }

        public Builder inDatabase(String inDatabase) {
            return inDatabase(Output.of(inDatabase));
        }

        public Builder inSchema(@Nullable Output<String> inSchema) {
            $.inSchema = inSchema;
            return this;
        }

        public Builder inSchema(String inSchema) {
            return inSchema(Output.of(inSchema));
        }

        public Builder objectTypePlural(Output<String> objectTypePlural) {
            $.objectTypePlural = objectTypePlural;
            return this;
        }

        public Builder objectTypePlural(String objectTypePlural) {
            return objectTypePlural(Output.of(objectTypePlural));
        }

        public GrantPrivilegesToRoleOnSchemaObjectAllArgs build() {
            $.objectTypePlural = Objects.requireNonNull($.objectTypePlural, "expected parameter 'objectTypePlural' to be non-null");
            return $;
        }
    }

}
