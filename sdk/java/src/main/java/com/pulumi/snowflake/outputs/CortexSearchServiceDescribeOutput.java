// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CortexSearchServiceDescribeOutput {
    private @Nullable List<String> attributeColumns;
    private @Nullable List<String> columns;
    private @Nullable String comment;
    private @Nullable String createdOn;
    private @Nullable String dataTimestamp;
    private @Nullable String databaseName;
    private @Nullable String definition;
    private @Nullable String embeddingModel;
    private @Nullable String indexingError;
    private @Nullable String indexingState;
    private @Nullable String name;
    private @Nullable String schemaName;
    private @Nullable String searchColumn;
    private @Nullable String serviceQueryUrl;
    private @Nullable Integer sourceDataNumRows;
    private @Nullable String targetLag;
    private @Nullable String warehouse;

    private CortexSearchServiceDescribeOutput() {}
    public List<String> attributeColumns() {
        return this.attributeColumns == null ? List.of() : this.attributeColumns;
    }
    public List<String> columns() {
        return this.columns == null ? List.of() : this.columns;
    }
    public Optional<String> comment() {
        return Optional.ofNullable(this.comment);
    }
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    public Optional<String> dataTimestamp() {
        return Optional.ofNullable(this.dataTimestamp);
    }
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    public Optional<String> definition() {
        return Optional.ofNullable(this.definition);
    }
    public Optional<String> embeddingModel() {
        return Optional.ofNullable(this.embeddingModel);
    }
    public Optional<String> indexingError() {
        return Optional.ofNullable(this.indexingError);
    }
    public Optional<String> indexingState() {
        return Optional.ofNullable(this.indexingState);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    public Optional<String> searchColumn() {
        return Optional.ofNullable(this.searchColumn);
    }
    public Optional<String> serviceQueryUrl() {
        return Optional.ofNullable(this.serviceQueryUrl);
    }
    public Optional<Integer> sourceDataNumRows() {
        return Optional.ofNullable(this.sourceDataNumRows);
    }
    public Optional<String> targetLag() {
        return Optional.ofNullable(this.targetLag);
    }
    public Optional<String> warehouse() {
        return Optional.ofNullable(this.warehouse);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CortexSearchServiceDescribeOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeColumns;
        private @Nullable List<String> columns;
        private @Nullable String comment;
        private @Nullable String createdOn;
        private @Nullable String dataTimestamp;
        private @Nullable String databaseName;
        private @Nullable String definition;
        private @Nullable String embeddingModel;
        private @Nullable String indexingError;
        private @Nullable String indexingState;
        private @Nullable String name;
        private @Nullable String schemaName;
        private @Nullable String searchColumn;
        private @Nullable String serviceQueryUrl;
        private @Nullable Integer sourceDataNumRows;
        private @Nullable String targetLag;
        private @Nullable String warehouse;
        public Builder() {}
        public Builder(CortexSearchServiceDescribeOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeColumns = defaults.attributeColumns;
    	      this.columns = defaults.columns;
    	      this.comment = defaults.comment;
    	      this.createdOn = defaults.createdOn;
    	      this.dataTimestamp = defaults.dataTimestamp;
    	      this.databaseName = defaults.databaseName;
    	      this.definition = defaults.definition;
    	      this.embeddingModel = defaults.embeddingModel;
    	      this.indexingError = defaults.indexingError;
    	      this.indexingState = defaults.indexingState;
    	      this.name = defaults.name;
    	      this.schemaName = defaults.schemaName;
    	      this.searchColumn = defaults.searchColumn;
    	      this.serviceQueryUrl = defaults.serviceQueryUrl;
    	      this.sourceDataNumRows = defaults.sourceDataNumRows;
    	      this.targetLag = defaults.targetLag;
    	      this.warehouse = defaults.warehouse;
        }

        @CustomType.Setter
        public Builder attributeColumns(@Nullable List<String> attributeColumns) {

            this.attributeColumns = attributeColumns;
            return this;
        }
        public Builder attributeColumns(String... attributeColumns) {
            return attributeColumns(List.of(attributeColumns));
        }
        @CustomType.Setter
        public Builder columns(@Nullable List<String> columns) {

            this.columns = columns;
            return this;
        }
        public Builder columns(String... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder comment(@Nullable String comment) {

            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder dataTimestamp(@Nullable String dataTimestamp) {

            this.dataTimestamp = dataTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {

            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder definition(@Nullable String definition) {

            this.definition = definition;
            return this;
        }
        @CustomType.Setter
        public Builder embeddingModel(@Nullable String embeddingModel) {

            this.embeddingModel = embeddingModel;
            return this;
        }
        @CustomType.Setter
        public Builder indexingError(@Nullable String indexingError) {

            this.indexingError = indexingError;
            return this;
        }
        @CustomType.Setter
        public Builder indexingState(@Nullable String indexingState) {

            this.indexingState = indexingState;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {

            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder searchColumn(@Nullable String searchColumn) {

            this.searchColumn = searchColumn;
            return this;
        }
        @CustomType.Setter
        public Builder serviceQueryUrl(@Nullable String serviceQueryUrl) {

            this.serviceQueryUrl = serviceQueryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDataNumRows(@Nullable Integer sourceDataNumRows) {

            this.sourceDataNumRows = sourceDataNumRows;
            return this;
        }
        @CustomType.Setter
        public Builder targetLag(@Nullable String targetLag) {

            this.targetLag = targetLag;
            return this;
        }
        @CustomType.Setter
        public Builder warehouse(@Nullable String warehouse) {

            this.warehouse = warehouse;
            return this;
        }
        public CortexSearchServiceDescribeOutput build() {
            final var _resultValue = new CortexSearchServiceDescribeOutput();
            _resultValue.attributeColumns = attributeColumns;
            _resultValue.columns = columns;
            _resultValue.comment = comment;
            _resultValue.createdOn = createdOn;
            _resultValue.dataTimestamp = dataTimestamp;
            _resultValue.databaseName = databaseName;
            _resultValue.definition = definition;
            _resultValue.embeddingModel = embeddingModel;
            _resultValue.indexingError = indexingError;
            _resultValue.indexingState = indexingState;
            _resultValue.name = name;
            _resultValue.schemaName = schemaName;
            _resultValue.searchColumn = searchColumn;
            _resultValue.serviceQueryUrl = serviceQueryUrl;
            _resultValue.sourceDataNumRows = sourceDataNumRows;
            _resultValue.targetLag = targetLag;
            _resultValue.warehouse = warehouse;
            return _resultValue;
        }
    }
}
