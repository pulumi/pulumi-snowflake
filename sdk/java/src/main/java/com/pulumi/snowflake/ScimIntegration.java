// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.ScimIntegrationArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.ScimIntegrationState;
import com.pulumi.snowflake.outputs.ScimIntegrationDescribeOutput;
import com.pulumi.snowflake.outputs.ScimIntegrationShowOutput;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * !&gt; **V1 release candidate** This resource was reworked and is a release candidate for the V1. We do not expect significant changes in it before the V1. We will welcome any feedback and adjust the resource if needed. Any errors reported will be resolved with a higher priority. We encourage checking this resource out before the V1 release. Please follow the migration guide to use it.
 * 
 * Resource used to manage scim security integration objects. For more information, check [security integrations documentation](https://docs.snowflake.com/en/sql-reference/sql/create-security-integration-scim).
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/scimIntegration:ScimIntegration example &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/scimIntegration:ScimIntegration")
public class ScimIntegration extends com.pulumi.resources.CustomResource {
    /**
     * Specifies a comment for the integration.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the integration.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    @Export(name="describeOutputs", refs={List.class,ScimIntegrationDescribeOutput.class}, tree="[0,1]")
    private Output<List<ScimIntegrationDescribeOutput>> describeOutputs;

    /**
     * @return Outputs the result of `DESCRIBE SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    public Output<List<ScimIntegrationDescribeOutput>> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * Specify whether the security integration is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Specify whether the security integration is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * String that specifies the identifier (i.e. name) for the integration; must be unique in your account.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return String that specifies the identifier (i.e. name) for the integration; must be unique in your account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies an existing network policy that controls SCIM network traffic.
     * 
     */
    @Export(name="networkPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> networkPolicy;

    /**
     * @return Specifies an existing network policy that controls SCIM network traffic.
     * 
     */
    public Output<Optional<String>> networkPolicy() {
        return Codegen.optional(this.networkPolicy);
    }
    /**
     * Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
     * 
     */
    @Export(name="runAsRole", refs={String.class}, tree="[0]")
    private Output<String> runAsRole;

    /**
     * @return Specify the SCIM role in Snowflake that owns any users and roles that are imported from the identity provider into Snowflake using SCIM. Provider assumes that the specified role is already provided. Valid options are: `OKTA_PROVISIONER` | `AAD_PROVISIONER` | `GENERIC_SCIM_PROVISIONER`.
     * 
     */
    public Output<String> runAsRole() {
        return this.runAsRole;
    }
    /**
     * Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
     * 
     */
    @Export(name="scimClient", refs={String.class}, tree="[0]")
    private Output<String> scimClient;

    /**
     * @return Specifies the client type for the scim integration. Valid options are: `OKTA` | `AZURE` | `GENERIC`.
     * 
     */
    public Output<String> scimClient() {
        return this.scimClient;
    }
    /**
     * Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    @Export(name="showOutputs", refs={List.class,ScimIntegrationShowOutput.class}, tree="[0,1]")
    private Output<List<ScimIntegrationShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW SECURITY INTEGRATIONS` for the given security integration.
     * 
     */
    public Output<List<ScimIntegrationShowOutput>> showOutputs() {
        return this.showOutputs;
    }
    /**
     * Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default for this value.
     * 
     */
    @Export(name="syncPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> syncPassword;

    /**
     * @return Specifies whether to enable or disable the synchronization of a user password from an Okta SCIM client as part of the API request to Snowflake. This property is not supported for Azure SCIM. Available options are: &#34;true&#34; or &#34;false&#34;. When the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default for this value.
     * 
     */
    public Output<Optional<String>> syncPassword() {
        return Codegen.optional(this.syncPassword);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScimIntegration(String name) {
        this(name, ScimIntegrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScimIntegration(String name, ScimIntegrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScimIntegration(String name, ScimIntegrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/scimIntegration:ScimIntegration", name, args == null ? ScimIntegrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ScimIntegration(String name, Output<String> id, @Nullable ScimIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/scimIntegration:ScimIntegration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScimIntegration get(String name, Output<String> id, @Nullable ScimIntegrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScimIntegration(name, id, state, options);
    }
}
