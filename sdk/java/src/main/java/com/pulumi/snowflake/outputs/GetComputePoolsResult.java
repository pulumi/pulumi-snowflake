// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetComputePoolsComputePool;
import com.pulumi.snowflake.outputs.GetComputePoolsLimit;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputePoolsResult {
    /**
     * @return Holds the aggregated output of all compute pools details queries.
     * 
     */
    private List<GetComputePoolsComputePool> computePools;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    private @Nullable String like;
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    private @Nullable GetComputePoolsLimit limit;
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    private @Nullable String startsWith;
    /**
     * @return (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    private @Nullable Boolean withDescribe;

    private GetComputePoolsResult() {}
    /**
     * @return Holds the aggregated output of all compute pools details queries.
     * 
     */
    public List<GetComputePoolsComputePool> computePools() {
        return this.computePools;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    public Optional<GetComputePoolsLimit> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }
    /**
     * @return (Default: `true`) Runs DESC COMPUTE POOL for each compute pool returned by SHOW COMPUTE POOLS. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputePoolsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetComputePoolsComputePool> computePools;
        private String id;
        private @Nullable String like;
        private @Nullable GetComputePoolsLimit limit;
        private @Nullable String startsWith;
        private @Nullable Boolean withDescribe;
        public Builder() {}
        public Builder(GetComputePoolsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computePools = defaults.computePools;
    	      this.id = defaults.id;
    	      this.like = defaults.like;
    	      this.limit = defaults.limit;
    	      this.startsWith = defaults.startsWith;
    	      this.withDescribe = defaults.withDescribe;
        }

        @CustomType.Setter
        public Builder computePools(List<GetComputePoolsComputePool> computePools) {
            if (computePools == null) {
              throw new MissingRequiredPropertyException("GetComputePoolsResult", "computePools");
            }
            this.computePools = computePools;
            return this;
        }
        public Builder computePools(GetComputePoolsComputePool... computePools) {
            return computePools(List.of(computePools));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComputePoolsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder like(@Nullable String like) {

            this.like = like;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable GetComputePoolsLimit limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder startsWith(@Nullable String startsWith) {

            this.startsWith = startsWith;
            return this;
        }
        @CustomType.Setter
        public Builder withDescribe(@Nullable Boolean withDescribe) {

            this.withDescribe = withDescribe;
            return this;
        }
        public GetComputePoolsResult build() {
            final var _resultValue = new GetComputePoolsResult();
            _resultValue.computePools = computePools;
            _resultValue.id = id;
            _resultValue.like = like;
            _resultValue.limit = limit;
            _resultValue.startsWith = startsWith;
            _resultValue.withDescribe = withDescribe;
            return _resultValue;
        }
    }
}
