// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAuthenticationPolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final UserAuthenticationPolicyAttachmentState Empty = new UserAuthenticationPolicyAttachmentState();

    /**
     * Fully qualified name of the authentication policy
     * 
     */
    @Import(name="authenticationPolicyName")
    private @Nullable Output<String> authenticationPolicyName;

    /**
     * @return Fully qualified name of the authentication policy
     * 
     */
    public Optional<Output<String>> authenticationPolicyName() {
        return Optional.ofNullable(this.authenticationPolicyName);
    }

    /**
     * User name of the user you want to attach the authentication policy to
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return User name of the user you want to attach the authentication policy to
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private UserAuthenticationPolicyAttachmentState() {}

    private UserAuthenticationPolicyAttachmentState(UserAuthenticationPolicyAttachmentState $) {
        this.authenticationPolicyName = $.authenticationPolicyName;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAuthenticationPolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAuthenticationPolicyAttachmentState $;

        public Builder() {
            $ = new UserAuthenticationPolicyAttachmentState();
        }

        public Builder(UserAuthenticationPolicyAttachmentState defaults) {
            $ = new UserAuthenticationPolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationPolicyName Fully qualified name of the authentication policy
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicyName(@Nullable Output<String> authenticationPolicyName) {
            $.authenticationPolicyName = authenticationPolicyName;
            return this;
        }

        /**
         * @param authenticationPolicyName Fully qualified name of the authentication policy
         * 
         * @return builder
         * 
         */
        public Builder authenticationPolicyName(String authenticationPolicyName) {
            return authenticationPolicyName(Output.of(authenticationPolicyName));
        }

        /**
         * @param userName User name of the user you want to attach the authentication policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName User name of the user you want to attach the authentication policy to
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserAuthenticationPolicyAttachmentState build() {
            return $;
        }
    }

}
