// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPublicKeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPublicKeysArgs Empty = new UserPublicKeysArgs();

    /**
     * Name of the user.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the user.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
     * 
     */
    @Import(name="rsaPublicKey")
    private @Nullable Output<String> rsaPublicKey;

    /**
     * @return Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
     * 
     */
    public Optional<Output<String>> rsaPublicKey() {
        return Optional.ofNullable(this.rsaPublicKey);
    }

    /**
     * Specifies the user’s second RSA public key; used to rotate the public and Public keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
     * 
     */
    @Import(name="rsaPublicKey2")
    private @Nullable Output<String> rsaPublicKey2;

    /**
     * @return Specifies the user’s second RSA public key; used to rotate the public and Public keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
     * 
     */
    public Optional<Output<String>> rsaPublicKey2() {
        return Optional.ofNullable(this.rsaPublicKey2);
    }

    private UserPublicKeysArgs() {}

    private UserPublicKeysArgs(UserPublicKeysArgs $) {
        this.name = $.name;
        this.rsaPublicKey = $.rsaPublicKey;
        this.rsaPublicKey2 = $.rsaPublicKey2;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPublicKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPublicKeysArgs $;

        public Builder() {
            $ = new UserPublicKeysArgs();
        }

        public Builder(UserPublicKeysArgs defaults) {
            $ = new UserPublicKeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the user.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the user.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rsaPublicKey Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
         * 
         * @return builder
         * 
         */
        public Builder rsaPublicKey(@Nullable Output<String> rsaPublicKey) {
            $.rsaPublicKey = rsaPublicKey;
            return this;
        }

        /**
         * @param rsaPublicKey Specifies the user’s RSA public key; used for key-pair authentication. Must be on 1 line without header and trailer.
         * 
         * @return builder
         * 
         */
        public Builder rsaPublicKey(String rsaPublicKey) {
            return rsaPublicKey(Output.of(rsaPublicKey));
        }

        /**
         * @param rsaPublicKey2 Specifies the user’s second RSA public key; used to rotate the public and Public keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
         * 
         * @return builder
         * 
         */
        public Builder rsaPublicKey2(@Nullable Output<String> rsaPublicKey2) {
            $.rsaPublicKey2 = rsaPublicKey2;
            return this;
        }

        /**
         * @param rsaPublicKey2 Specifies the user’s second RSA public key; used to rotate the public and Public keys for key-pair authentication based on an expiration schedule set by your organization. Must be on 1 line without header and trailer.
         * 
         * @return builder
         * 
         */
        public Builder rsaPublicKey2(String rsaPublicKey2) {
            return rsaPublicKey2(Output.of(rsaPublicKey2));
        }

        public UserPublicKeysArgs build() {
            return $;
        }
    }

}
