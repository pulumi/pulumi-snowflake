// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LegacyServiceUserShowOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final LegacyServiceUserShowOutputArgs Empty = new LegacyServiceUserShowOutputArgs();

    @Import(name="comment")
    private @Nullable Output<String> comment;

    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    @Import(name="createdOn")
    private @Nullable Output<String> createdOn;

    public Optional<Output<String>> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }

    @Import(name="daysToExpiry")
    private @Nullable Output<String> daysToExpiry;

    public Optional<Output<String>> daysToExpiry() {
        return Optional.ofNullable(this.daysToExpiry);
    }

    @Import(name="defaultNamespace")
    private @Nullable Output<String> defaultNamespace;

    public Optional<Output<String>> defaultNamespace() {
        return Optional.ofNullable(this.defaultNamespace);
    }

    @Import(name="defaultRole")
    private @Nullable Output<String> defaultRole;

    public Optional<Output<String>> defaultRole() {
        return Optional.ofNullable(this.defaultRole);
    }

    @Import(name="defaultSecondaryRoles")
    private @Nullable Output<String> defaultSecondaryRoles;

    public Optional<Output<String>> defaultSecondaryRoles() {
        return Optional.ofNullable(this.defaultSecondaryRoles);
    }

    @Import(name="defaultWarehouse")
    private @Nullable Output<String> defaultWarehouse;

    public Optional<Output<String>> defaultWarehouse() {
        return Optional.ofNullable(this.defaultWarehouse);
    }

    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="email")
    private @Nullable Output<String> email;

    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    @Import(name="expiresAtTime")
    private @Nullable Output<String> expiresAtTime;

    public Optional<Output<String>> expiresAtTime() {
        return Optional.ofNullable(this.expiresAtTime);
    }

    @Import(name="extAuthnDuo")
    private @Nullable Output<Boolean> extAuthnDuo;

    public Optional<Output<Boolean>> extAuthnDuo() {
        return Optional.ofNullable(this.extAuthnDuo);
    }

    @Import(name="extAuthnUid")
    private @Nullable Output<String> extAuthnUid;

    public Optional<Output<String>> extAuthnUid() {
        return Optional.ofNullable(this.extAuthnUid);
    }

    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    @Import(name="hasMfa")
    private @Nullable Output<Boolean> hasMfa;

    public Optional<Output<Boolean>> hasMfa() {
        return Optional.ofNullable(this.hasMfa);
    }

    @Import(name="hasPassword")
    private @Nullable Output<Boolean> hasPassword;

    public Optional<Output<Boolean>> hasPassword() {
        return Optional.ofNullable(this.hasPassword);
    }

    @Import(name="hasRsaPublicKey")
    private @Nullable Output<Boolean> hasRsaPublicKey;

    public Optional<Output<Boolean>> hasRsaPublicKey() {
        return Optional.ofNullable(this.hasRsaPublicKey);
    }

    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    @Import(name="lastSuccessLogin")
    private @Nullable Output<String> lastSuccessLogin;

    public Optional<Output<String>> lastSuccessLogin() {
        return Optional.ofNullable(this.lastSuccessLogin);
    }

    @Import(name="lockedUntilTime")
    private @Nullable Output<String> lockedUntilTime;

    public Optional<Output<String>> lockedUntilTime() {
        return Optional.ofNullable(this.lockedUntilTime);
    }

    @Import(name="loginName")
    private @Nullable Output<String> loginName;

    public Optional<Output<String>> loginName() {
        return Optional.ofNullable(this.loginName);
    }

    @Import(name="minsToBypassMfa")
    private @Nullable Output<String> minsToBypassMfa;

    public Optional<Output<String>> minsToBypassMfa() {
        return Optional.ofNullable(this.minsToBypassMfa);
    }

    @Import(name="minsToUnlock")
    private @Nullable Output<String> minsToUnlock;

    public Optional<Output<String>> minsToUnlock() {
        return Optional.ofNullable(this.minsToUnlock);
    }

    @Import(name="mustChangePassword")
    private @Nullable Output<Boolean> mustChangePassword;

    public Optional<Output<Boolean>> mustChangePassword() {
        return Optional.ofNullable(this.mustChangePassword);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="owner")
    private @Nullable Output<String> owner;

    public Optional<Output<String>> owner() {
        return Optional.ofNullable(this.owner);
    }

    @Import(name="snowflakeLock")
    private @Nullable Output<Boolean> snowflakeLock;

    public Optional<Output<Boolean>> snowflakeLock() {
        return Optional.ofNullable(this.snowflakeLock);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private LegacyServiceUserShowOutputArgs() {}

    private LegacyServiceUserShowOutputArgs(LegacyServiceUserShowOutputArgs $) {
        this.comment = $.comment;
        this.createdOn = $.createdOn;
        this.daysToExpiry = $.daysToExpiry;
        this.defaultNamespace = $.defaultNamespace;
        this.defaultRole = $.defaultRole;
        this.defaultSecondaryRoles = $.defaultSecondaryRoles;
        this.defaultWarehouse = $.defaultWarehouse;
        this.disabled = $.disabled;
        this.displayName = $.displayName;
        this.email = $.email;
        this.expiresAtTime = $.expiresAtTime;
        this.extAuthnDuo = $.extAuthnDuo;
        this.extAuthnUid = $.extAuthnUid;
        this.firstName = $.firstName;
        this.hasMfa = $.hasMfa;
        this.hasPassword = $.hasPassword;
        this.hasRsaPublicKey = $.hasRsaPublicKey;
        this.lastName = $.lastName;
        this.lastSuccessLogin = $.lastSuccessLogin;
        this.lockedUntilTime = $.lockedUntilTime;
        this.loginName = $.loginName;
        this.minsToBypassMfa = $.minsToBypassMfa;
        this.minsToUnlock = $.minsToUnlock;
        this.mustChangePassword = $.mustChangePassword;
        this.name = $.name;
        this.owner = $.owner;
        this.snowflakeLock = $.snowflakeLock;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LegacyServiceUserShowOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LegacyServiceUserShowOutputArgs $;

        public Builder() {
            $ = new LegacyServiceUserShowOutputArgs();
        }

        public Builder(LegacyServiceUserShowOutputArgs defaults) {
            $ = new LegacyServiceUserShowOutputArgs(Objects.requireNonNull(defaults));
        }

        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        public Builder createdOn(@Nullable Output<String> createdOn) {
            $.createdOn = createdOn;
            return this;
        }

        public Builder createdOn(String createdOn) {
            return createdOn(Output.of(createdOn));
        }

        public Builder daysToExpiry(@Nullable Output<String> daysToExpiry) {
            $.daysToExpiry = daysToExpiry;
            return this;
        }

        public Builder daysToExpiry(String daysToExpiry) {
            return daysToExpiry(Output.of(daysToExpiry));
        }

        public Builder defaultNamespace(@Nullable Output<String> defaultNamespace) {
            $.defaultNamespace = defaultNamespace;
            return this;
        }

        public Builder defaultNamespace(String defaultNamespace) {
            return defaultNamespace(Output.of(defaultNamespace));
        }

        public Builder defaultRole(@Nullable Output<String> defaultRole) {
            $.defaultRole = defaultRole;
            return this;
        }

        public Builder defaultRole(String defaultRole) {
            return defaultRole(Output.of(defaultRole));
        }

        public Builder defaultSecondaryRoles(@Nullable Output<String> defaultSecondaryRoles) {
            $.defaultSecondaryRoles = defaultSecondaryRoles;
            return this;
        }

        public Builder defaultSecondaryRoles(String defaultSecondaryRoles) {
            return defaultSecondaryRoles(Output.of(defaultSecondaryRoles));
        }

        public Builder defaultWarehouse(@Nullable Output<String> defaultWarehouse) {
            $.defaultWarehouse = defaultWarehouse;
            return this;
        }

        public Builder defaultWarehouse(String defaultWarehouse) {
            return defaultWarehouse(Output.of(defaultWarehouse));
        }

        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        public Builder email(String email) {
            return email(Output.of(email));
        }

        public Builder expiresAtTime(@Nullable Output<String> expiresAtTime) {
            $.expiresAtTime = expiresAtTime;
            return this;
        }

        public Builder expiresAtTime(String expiresAtTime) {
            return expiresAtTime(Output.of(expiresAtTime));
        }

        public Builder extAuthnDuo(@Nullable Output<Boolean> extAuthnDuo) {
            $.extAuthnDuo = extAuthnDuo;
            return this;
        }

        public Builder extAuthnDuo(Boolean extAuthnDuo) {
            return extAuthnDuo(Output.of(extAuthnDuo));
        }

        public Builder extAuthnUid(@Nullable Output<String> extAuthnUid) {
            $.extAuthnUid = extAuthnUid;
            return this;
        }

        public Builder extAuthnUid(String extAuthnUid) {
            return extAuthnUid(Output.of(extAuthnUid));
        }

        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        public Builder hasMfa(@Nullable Output<Boolean> hasMfa) {
            $.hasMfa = hasMfa;
            return this;
        }

        public Builder hasMfa(Boolean hasMfa) {
            return hasMfa(Output.of(hasMfa));
        }

        public Builder hasPassword(@Nullable Output<Boolean> hasPassword) {
            $.hasPassword = hasPassword;
            return this;
        }

        public Builder hasPassword(Boolean hasPassword) {
            return hasPassword(Output.of(hasPassword));
        }

        public Builder hasRsaPublicKey(@Nullable Output<Boolean> hasRsaPublicKey) {
            $.hasRsaPublicKey = hasRsaPublicKey;
            return this;
        }

        public Builder hasRsaPublicKey(Boolean hasRsaPublicKey) {
            return hasRsaPublicKey(Output.of(hasRsaPublicKey));
        }

        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        public Builder lastSuccessLogin(@Nullable Output<String> lastSuccessLogin) {
            $.lastSuccessLogin = lastSuccessLogin;
            return this;
        }

        public Builder lastSuccessLogin(String lastSuccessLogin) {
            return lastSuccessLogin(Output.of(lastSuccessLogin));
        }

        public Builder lockedUntilTime(@Nullable Output<String> lockedUntilTime) {
            $.lockedUntilTime = lockedUntilTime;
            return this;
        }

        public Builder lockedUntilTime(String lockedUntilTime) {
            return lockedUntilTime(Output.of(lockedUntilTime));
        }

        public Builder loginName(@Nullable Output<String> loginName) {
            $.loginName = loginName;
            return this;
        }

        public Builder loginName(String loginName) {
            return loginName(Output.of(loginName));
        }

        public Builder minsToBypassMfa(@Nullable Output<String> minsToBypassMfa) {
            $.minsToBypassMfa = minsToBypassMfa;
            return this;
        }

        public Builder minsToBypassMfa(String minsToBypassMfa) {
            return minsToBypassMfa(Output.of(minsToBypassMfa));
        }

        public Builder minsToUnlock(@Nullable Output<String> minsToUnlock) {
            $.minsToUnlock = minsToUnlock;
            return this;
        }

        public Builder minsToUnlock(String minsToUnlock) {
            return minsToUnlock(Output.of(minsToUnlock));
        }

        public Builder mustChangePassword(@Nullable Output<Boolean> mustChangePassword) {
            $.mustChangePassword = mustChangePassword;
            return this;
        }

        public Builder mustChangePassword(Boolean mustChangePassword) {
            return mustChangePassword(Output.of(mustChangePassword));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder owner(@Nullable Output<String> owner) {
            $.owner = owner;
            return this;
        }

        public Builder owner(String owner) {
            return owner(Output.of(owner));
        }

        public Builder snowflakeLock(@Nullable Output<Boolean> snowflakeLock) {
            $.snowflakeLock = snowflakeLock;
            return this;
        }

        public Builder snowflakeLock(Boolean snowflakeLock) {
            return snowflakeLock(Output.of(snowflakeLock));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public LegacyServiceUserShowOutputArgs build() {
            return $;
        }
    }

}
