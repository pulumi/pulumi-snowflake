// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.SchemaParameterCatalogArgs;
import com.pulumi.snowflake.inputs.SchemaParameterDataRetentionTimeInDayArgs;
import com.pulumi.snowflake.inputs.SchemaParameterDefaultDdlCollationArgs;
import com.pulumi.snowflake.inputs.SchemaParameterEnableConsoleOutputArgs;
import com.pulumi.snowflake.inputs.SchemaParameterExternalVolumeArgs;
import com.pulumi.snowflake.inputs.SchemaParameterLogLevelArgs;
import com.pulumi.snowflake.inputs.SchemaParameterMaxDataExtensionTimeInDayArgs;
import com.pulumi.snowflake.inputs.SchemaParameterPipeExecutionPausedArgs;
import com.pulumi.snowflake.inputs.SchemaParameterQuotedIdentifiersIgnoreCaseArgs;
import com.pulumi.snowflake.inputs.SchemaParameterReplaceInvalidCharacterArgs;
import com.pulumi.snowflake.inputs.SchemaParameterStorageSerializationPolicyArgs;
import com.pulumi.snowflake.inputs.SchemaParameterSuspendTaskAfterNumFailureArgs;
import com.pulumi.snowflake.inputs.SchemaParameterTaskAutoRetryAttemptArgs;
import com.pulumi.snowflake.inputs.SchemaParameterTraceLevelArgs;
import com.pulumi.snowflake.inputs.SchemaParameterUserTaskManagedInitialWarehouseSizeArgs;
import com.pulumi.snowflake.inputs.SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs;
import com.pulumi.snowflake.inputs.SchemaParameterUserTaskTimeoutMArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchemaParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaParameterArgs Empty = new SchemaParameterArgs();

    @Import(name="catalogs")
    private @Nullable Output<List<SchemaParameterCatalogArgs>> catalogs;

    public Optional<Output<List<SchemaParameterCatalogArgs>>> catalogs() {
        return Optional.ofNullable(this.catalogs);
    }

    @Import(name="dataRetentionTimeInDays")
    private @Nullable Output<List<SchemaParameterDataRetentionTimeInDayArgs>> dataRetentionTimeInDays;

    public Optional<Output<List<SchemaParameterDataRetentionTimeInDayArgs>>> dataRetentionTimeInDays() {
        return Optional.ofNullable(this.dataRetentionTimeInDays);
    }

    @Import(name="defaultDdlCollations")
    private @Nullable Output<List<SchemaParameterDefaultDdlCollationArgs>> defaultDdlCollations;

    public Optional<Output<List<SchemaParameterDefaultDdlCollationArgs>>> defaultDdlCollations() {
        return Optional.ofNullable(this.defaultDdlCollations);
    }

    @Import(name="enableConsoleOutputs")
    private @Nullable Output<List<SchemaParameterEnableConsoleOutputArgs>> enableConsoleOutputs;

    public Optional<Output<List<SchemaParameterEnableConsoleOutputArgs>>> enableConsoleOutputs() {
        return Optional.ofNullable(this.enableConsoleOutputs);
    }

    @Import(name="externalVolumes")
    private @Nullable Output<List<SchemaParameterExternalVolumeArgs>> externalVolumes;

    public Optional<Output<List<SchemaParameterExternalVolumeArgs>>> externalVolumes() {
        return Optional.ofNullable(this.externalVolumes);
    }

    @Import(name="logLevels")
    private @Nullable Output<List<SchemaParameterLogLevelArgs>> logLevels;

    public Optional<Output<List<SchemaParameterLogLevelArgs>>> logLevels() {
        return Optional.ofNullable(this.logLevels);
    }

    @Import(name="maxDataExtensionTimeInDays")
    private @Nullable Output<List<SchemaParameterMaxDataExtensionTimeInDayArgs>> maxDataExtensionTimeInDays;

    public Optional<Output<List<SchemaParameterMaxDataExtensionTimeInDayArgs>>> maxDataExtensionTimeInDays() {
        return Optional.ofNullable(this.maxDataExtensionTimeInDays);
    }

    @Import(name="pipeExecutionPauseds")
    private @Nullable Output<List<SchemaParameterPipeExecutionPausedArgs>> pipeExecutionPauseds;

    public Optional<Output<List<SchemaParameterPipeExecutionPausedArgs>>> pipeExecutionPauseds() {
        return Optional.ofNullable(this.pipeExecutionPauseds);
    }

    @Import(name="quotedIdentifiersIgnoreCases")
    private @Nullable Output<List<SchemaParameterQuotedIdentifiersIgnoreCaseArgs>> quotedIdentifiersIgnoreCases;

    public Optional<Output<List<SchemaParameterQuotedIdentifiersIgnoreCaseArgs>>> quotedIdentifiersIgnoreCases() {
        return Optional.ofNullable(this.quotedIdentifiersIgnoreCases);
    }

    @Import(name="replaceInvalidCharacters")
    private @Nullable Output<List<SchemaParameterReplaceInvalidCharacterArgs>> replaceInvalidCharacters;

    public Optional<Output<List<SchemaParameterReplaceInvalidCharacterArgs>>> replaceInvalidCharacters() {
        return Optional.ofNullable(this.replaceInvalidCharacters);
    }

    @Import(name="storageSerializationPolicies")
    private @Nullable Output<List<SchemaParameterStorageSerializationPolicyArgs>> storageSerializationPolicies;

    public Optional<Output<List<SchemaParameterStorageSerializationPolicyArgs>>> storageSerializationPolicies() {
        return Optional.ofNullable(this.storageSerializationPolicies);
    }

    @Import(name="suspendTaskAfterNumFailures")
    private @Nullable Output<List<SchemaParameterSuspendTaskAfterNumFailureArgs>> suspendTaskAfterNumFailures;

    public Optional<Output<List<SchemaParameterSuspendTaskAfterNumFailureArgs>>> suspendTaskAfterNumFailures() {
        return Optional.ofNullable(this.suspendTaskAfterNumFailures);
    }

    @Import(name="taskAutoRetryAttempts")
    private @Nullable Output<List<SchemaParameterTaskAutoRetryAttemptArgs>> taskAutoRetryAttempts;

    public Optional<Output<List<SchemaParameterTaskAutoRetryAttemptArgs>>> taskAutoRetryAttempts() {
        return Optional.ofNullable(this.taskAutoRetryAttempts);
    }

    @Import(name="traceLevels")
    private @Nullable Output<List<SchemaParameterTraceLevelArgs>> traceLevels;

    public Optional<Output<List<SchemaParameterTraceLevelArgs>>> traceLevels() {
        return Optional.ofNullable(this.traceLevels);
    }

    @Import(name="userTaskManagedInitialWarehouseSizes")
    private @Nullable Output<List<SchemaParameterUserTaskManagedInitialWarehouseSizeArgs>> userTaskManagedInitialWarehouseSizes;

    public Optional<Output<List<SchemaParameterUserTaskManagedInitialWarehouseSizeArgs>>> userTaskManagedInitialWarehouseSizes() {
        return Optional.ofNullable(this.userTaskManagedInitialWarehouseSizes);
    }

    @Import(name="userTaskMinimumTriggerIntervalInSeconds")
    private @Nullable Output<List<SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs>> userTaskMinimumTriggerIntervalInSeconds;

    public Optional<Output<List<SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs>>> userTaskMinimumTriggerIntervalInSeconds() {
        return Optional.ofNullable(this.userTaskMinimumTriggerIntervalInSeconds);
    }

    @Import(name="userTaskTimeoutMs")
    private @Nullable Output<List<SchemaParameterUserTaskTimeoutMArgs>> userTaskTimeoutMs;

    public Optional<Output<List<SchemaParameterUserTaskTimeoutMArgs>>> userTaskTimeoutMs() {
        return Optional.ofNullable(this.userTaskTimeoutMs);
    }

    private SchemaParameterArgs() {}

    private SchemaParameterArgs(SchemaParameterArgs $) {
        this.catalogs = $.catalogs;
        this.dataRetentionTimeInDays = $.dataRetentionTimeInDays;
        this.defaultDdlCollations = $.defaultDdlCollations;
        this.enableConsoleOutputs = $.enableConsoleOutputs;
        this.externalVolumes = $.externalVolumes;
        this.logLevels = $.logLevels;
        this.maxDataExtensionTimeInDays = $.maxDataExtensionTimeInDays;
        this.pipeExecutionPauseds = $.pipeExecutionPauseds;
        this.quotedIdentifiersIgnoreCases = $.quotedIdentifiersIgnoreCases;
        this.replaceInvalidCharacters = $.replaceInvalidCharacters;
        this.storageSerializationPolicies = $.storageSerializationPolicies;
        this.suspendTaskAfterNumFailures = $.suspendTaskAfterNumFailures;
        this.taskAutoRetryAttempts = $.taskAutoRetryAttempts;
        this.traceLevels = $.traceLevels;
        this.userTaskManagedInitialWarehouseSizes = $.userTaskManagedInitialWarehouseSizes;
        this.userTaskMinimumTriggerIntervalInSeconds = $.userTaskMinimumTriggerIntervalInSeconds;
        this.userTaskTimeoutMs = $.userTaskTimeoutMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaParameterArgs $;

        public Builder() {
            $ = new SchemaParameterArgs();
        }

        public Builder(SchemaParameterArgs defaults) {
            $ = new SchemaParameterArgs(Objects.requireNonNull(defaults));
        }

        public Builder catalogs(@Nullable Output<List<SchemaParameterCatalogArgs>> catalogs) {
            $.catalogs = catalogs;
            return this;
        }

        public Builder catalogs(List<SchemaParameterCatalogArgs> catalogs) {
            return catalogs(Output.of(catalogs));
        }

        public Builder catalogs(SchemaParameterCatalogArgs... catalogs) {
            return catalogs(List.of(catalogs));
        }

        public Builder dataRetentionTimeInDays(@Nullable Output<List<SchemaParameterDataRetentionTimeInDayArgs>> dataRetentionTimeInDays) {
            $.dataRetentionTimeInDays = dataRetentionTimeInDays;
            return this;
        }

        public Builder dataRetentionTimeInDays(List<SchemaParameterDataRetentionTimeInDayArgs> dataRetentionTimeInDays) {
            return dataRetentionTimeInDays(Output.of(dataRetentionTimeInDays));
        }

        public Builder dataRetentionTimeInDays(SchemaParameterDataRetentionTimeInDayArgs... dataRetentionTimeInDays) {
            return dataRetentionTimeInDays(List.of(dataRetentionTimeInDays));
        }

        public Builder defaultDdlCollations(@Nullable Output<List<SchemaParameterDefaultDdlCollationArgs>> defaultDdlCollations) {
            $.defaultDdlCollations = defaultDdlCollations;
            return this;
        }

        public Builder defaultDdlCollations(List<SchemaParameterDefaultDdlCollationArgs> defaultDdlCollations) {
            return defaultDdlCollations(Output.of(defaultDdlCollations));
        }

        public Builder defaultDdlCollations(SchemaParameterDefaultDdlCollationArgs... defaultDdlCollations) {
            return defaultDdlCollations(List.of(defaultDdlCollations));
        }

        public Builder enableConsoleOutputs(@Nullable Output<List<SchemaParameterEnableConsoleOutputArgs>> enableConsoleOutputs) {
            $.enableConsoleOutputs = enableConsoleOutputs;
            return this;
        }

        public Builder enableConsoleOutputs(List<SchemaParameterEnableConsoleOutputArgs> enableConsoleOutputs) {
            return enableConsoleOutputs(Output.of(enableConsoleOutputs));
        }

        public Builder enableConsoleOutputs(SchemaParameterEnableConsoleOutputArgs... enableConsoleOutputs) {
            return enableConsoleOutputs(List.of(enableConsoleOutputs));
        }

        public Builder externalVolumes(@Nullable Output<List<SchemaParameterExternalVolumeArgs>> externalVolumes) {
            $.externalVolumes = externalVolumes;
            return this;
        }

        public Builder externalVolumes(List<SchemaParameterExternalVolumeArgs> externalVolumes) {
            return externalVolumes(Output.of(externalVolumes));
        }

        public Builder externalVolumes(SchemaParameterExternalVolumeArgs... externalVolumes) {
            return externalVolumes(List.of(externalVolumes));
        }

        public Builder logLevels(@Nullable Output<List<SchemaParameterLogLevelArgs>> logLevels) {
            $.logLevels = logLevels;
            return this;
        }

        public Builder logLevels(List<SchemaParameterLogLevelArgs> logLevels) {
            return logLevels(Output.of(logLevels));
        }

        public Builder logLevels(SchemaParameterLogLevelArgs... logLevels) {
            return logLevels(List.of(logLevels));
        }

        public Builder maxDataExtensionTimeInDays(@Nullable Output<List<SchemaParameterMaxDataExtensionTimeInDayArgs>> maxDataExtensionTimeInDays) {
            $.maxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            return this;
        }

        public Builder maxDataExtensionTimeInDays(List<SchemaParameterMaxDataExtensionTimeInDayArgs> maxDataExtensionTimeInDays) {
            return maxDataExtensionTimeInDays(Output.of(maxDataExtensionTimeInDays));
        }

        public Builder maxDataExtensionTimeInDays(SchemaParameterMaxDataExtensionTimeInDayArgs... maxDataExtensionTimeInDays) {
            return maxDataExtensionTimeInDays(List.of(maxDataExtensionTimeInDays));
        }

        public Builder pipeExecutionPauseds(@Nullable Output<List<SchemaParameterPipeExecutionPausedArgs>> pipeExecutionPauseds) {
            $.pipeExecutionPauseds = pipeExecutionPauseds;
            return this;
        }

        public Builder pipeExecutionPauseds(List<SchemaParameterPipeExecutionPausedArgs> pipeExecutionPauseds) {
            return pipeExecutionPauseds(Output.of(pipeExecutionPauseds));
        }

        public Builder pipeExecutionPauseds(SchemaParameterPipeExecutionPausedArgs... pipeExecutionPauseds) {
            return pipeExecutionPauseds(List.of(pipeExecutionPauseds));
        }

        public Builder quotedIdentifiersIgnoreCases(@Nullable Output<List<SchemaParameterQuotedIdentifiersIgnoreCaseArgs>> quotedIdentifiersIgnoreCases) {
            $.quotedIdentifiersIgnoreCases = quotedIdentifiersIgnoreCases;
            return this;
        }

        public Builder quotedIdentifiersIgnoreCases(List<SchemaParameterQuotedIdentifiersIgnoreCaseArgs> quotedIdentifiersIgnoreCases) {
            return quotedIdentifiersIgnoreCases(Output.of(quotedIdentifiersIgnoreCases));
        }

        public Builder quotedIdentifiersIgnoreCases(SchemaParameterQuotedIdentifiersIgnoreCaseArgs... quotedIdentifiersIgnoreCases) {
            return quotedIdentifiersIgnoreCases(List.of(quotedIdentifiersIgnoreCases));
        }

        public Builder replaceInvalidCharacters(@Nullable Output<List<SchemaParameterReplaceInvalidCharacterArgs>> replaceInvalidCharacters) {
            $.replaceInvalidCharacters = replaceInvalidCharacters;
            return this;
        }

        public Builder replaceInvalidCharacters(List<SchemaParameterReplaceInvalidCharacterArgs> replaceInvalidCharacters) {
            return replaceInvalidCharacters(Output.of(replaceInvalidCharacters));
        }

        public Builder replaceInvalidCharacters(SchemaParameterReplaceInvalidCharacterArgs... replaceInvalidCharacters) {
            return replaceInvalidCharacters(List.of(replaceInvalidCharacters));
        }

        public Builder storageSerializationPolicies(@Nullable Output<List<SchemaParameterStorageSerializationPolicyArgs>> storageSerializationPolicies) {
            $.storageSerializationPolicies = storageSerializationPolicies;
            return this;
        }

        public Builder storageSerializationPolicies(List<SchemaParameterStorageSerializationPolicyArgs> storageSerializationPolicies) {
            return storageSerializationPolicies(Output.of(storageSerializationPolicies));
        }

        public Builder storageSerializationPolicies(SchemaParameterStorageSerializationPolicyArgs... storageSerializationPolicies) {
            return storageSerializationPolicies(List.of(storageSerializationPolicies));
        }

        public Builder suspendTaskAfterNumFailures(@Nullable Output<List<SchemaParameterSuspendTaskAfterNumFailureArgs>> suspendTaskAfterNumFailures) {
            $.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            return this;
        }

        public Builder suspendTaskAfterNumFailures(List<SchemaParameterSuspendTaskAfterNumFailureArgs> suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(Output.of(suspendTaskAfterNumFailures));
        }

        public Builder suspendTaskAfterNumFailures(SchemaParameterSuspendTaskAfterNumFailureArgs... suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(List.of(suspendTaskAfterNumFailures));
        }

        public Builder taskAutoRetryAttempts(@Nullable Output<List<SchemaParameterTaskAutoRetryAttemptArgs>> taskAutoRetryAttempts) {
            $.taskAutoRetryAttempts = taskAutoRetryAttempts;
            return this;
        }

        public Builder taskAutoRetryAttempts(List<SchemaParameterTaskAutoRetryAttemptArgs> taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(Output.of(taskAutoRetryAttempts));
        }

        public Builder taskAutoRetryAttempts(SchemaParameterTaskAutoRetryAttemptArgs... taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(List.of(taskAutoRetryAttempts));
        }

        public Builder traceLevels(@Nullable Output<List<SchemaParameterTraceLevelArgs>> traceLevels) {
            $.traceLevels = traceLevels;
            return this;
        }

        public Builder traceLevels(List<SchemaParameterTraceLevelArgs> traceLevels) {
            return traceLevels(Output.of(traceLevels));
        }

        public Builder traceLevels(SchemaParameterTraceLevelArgs... traceLevels) {
            return traceLevels(List.of(traceLevels));
        }

        public Builder userTaskManagedInitialWarehouseSizes(@Nullable Output<List<SchemaParameterUserTaskManagedInitialWarehouseSizeArgs>> userTaskManagedInitialWarehouseSizes) {
            $.userTaskManagedInitialWarehouseSizes = userTaskManagedInitialWarehouseSizes;
            return this;
        }

        public Builder userTaskManagedInitialWarehouseSizes(List<SchemaParameterUserTaskManagedInitialWarehouseSizeArgs> userTaskManagedInitialWarehouseSizes) {
            return userTaskManagedInitialWarehouseSizes(Output.of(userTaskManagedInitialWarehouseSizes));
        }

        public Builder userTaskManagedInitialWarehouseSizes(SchemaParameterUserTaskManagedInitialWarehouseSizeArgs... userTaskManagedInitialWarehouseSizes) {
            return userTaskManagedInitialWarehouseSizes(List.of(userTaskManagedInitialWarehouseSizes));
        }

        public Builder userTaskMinimumTriggerIntervalInSeconds(@Nullable Output<List<SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs>> userTaskMinimumTriggerIntervalInSeconds) {
            $.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            return this;
        }

        public Builder userTaskMinimumTriggerIntervalInSeconds(List<SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs> userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(Output.of(userTaskMinimumTriggerIntervalInSeconds));
        }

        public Builder userTaskMinimumTriggerIntervalInSeconds(SchemaParameterUserTaskMinimumTriggerIntervalInSecondArgs... userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(List.of(userTaskMinimumTriggerIntervalInSeconds));
        }

        public Builder userTaskTimeoutMs(@Nullable Output<List<SchemaParameterUserTaskTimeoutMArgs>> userTaskTimeoutMs) {
            $.userTaskTimeoutMs = userTaskTimeoutMs;
            return this;
        }

        public Builder userTaskTimeoutMs(List<SchemaParameterUserTaskTimeoutMArgs> userTaskTimeoutMs) {
            return userTaskTimeoutMs(Output.of(userTaskTimeoutMs));
        }

        public Builder userTaskTimeoutMs(SchemaParameterUserTaskTimeoutMArgs... userTaskTimeoutMs) {
            return userTaskTimeoutMs(List.of(userTaskTimeoutMs));
        }

        public SchemaParameterArgs build() {
            return $;
        }
    }

}
