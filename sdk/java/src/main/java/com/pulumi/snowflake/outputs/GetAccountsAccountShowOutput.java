// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountsAccountShowOutput {
    private String accountLocator;
    private String accountLocatorUrl;
    private String accountName;
    private String accountOldUrlLastUsed;
    private String accountOldUrlSavedOn;
    private String accountUrl;
    private String comment;
    private String consumptionBillingEntityName;
    private String createdOn;
    private String droppedOn;
    private String edition;
    private Boolean isEventsAccount;
    private Boolean isOrgAdmin;
    private Boolean isOrganizationAccount;
    private Integer managedAccounts;
    private String marketplaceConsumerBillingEntityName;
    private String marketplaceProviderBillingEntityName;
    private String movedOn;
    private String movedToOrganization;
    private String oldAccountUrl;
    private String organizationName;
    private String organizationOldUrl;
    private String organizationOldUrlLastUsed;
    private String organizationOldUrlSavedOn;
    private String organizationUrlExpirationOn;
    private String regionGroup;
    private String restoredOn;
    private String scheduledDeletionTime;
    private String snowflakeRegion;

    private GetAccountsAccountShowOutput() {}
    public String accountLocator() {
        return this.accountLocator;
    }
    public String accountLocatorUrl() {
        return this.accountLocatorUrl;
    }
    public String accountName() {
        return this.accountName;
    }
    public String accountOldUrlLastUsed() {
        return this.accountOldUrlLastUsed;
    }
    public String accountOldUrlSavedOn() {
        return this.accountOldUrlSavedOn;
    }
    public String accountUrl() {
        return this.accountUrl;
    }
    public String comment() {
        return this.comment;
    }
    public String consumptionBillingEntityName() {
        return this.consumptionBillingEntityName;
    }
    public String createdOn() {
        return this.createdOn;
    }
    public String droppedOn() {
        return this.droppedOn;
    }
    public String edition() {
        return this.edition;
    }
    public Boolean isEventsAccount() {
        return this.isEventsAccount;
    }
    public Boolean isOrgAdmin() {
        return this.isOrgAdmin;
    }
    public Boolean isOrganizationAccount() {
        return this.isOrganizationAccount;
    }
    public Integer managedAccounts() {
        return this.managedAccounts;
    }
    public String marketplaceConsumerBillingEntityName() {
        return this.marketplaceConsumerBillingEntityName;
    }
    public String marketplaceProviderBillingEntityName() {
        return this.marketplaceProviderBillingEntityName;
    }
    public String movedOn() {
        return this.movedOn;
    }
    public String movedToOrganization() {
        return this.movedToOrganization;
    }
    public String oldAccountUrl() {
        return this.oldAccountUrl;
    }
    public String organizationName() {
        return this.organizationName;
    }
    public String organizationOldUrl() {
        return this.organizationOldUrl;
    }
    public String organizationOldUrlLastUsed() {
        return this.organizationOldUrlLastUsed;
    }
    public String organizationOldUrlSavedOn() {
        return this.organizationOldUrlSavedOn;
    }
    public String organizationUrlExpirationOn() {
        return this.organizationUrlExpirationOn;
    }
    public String regionGroup() {
        return this.regionGroup;
    }
    public String restoredOn() {
        return this.restoredOn;
    }
    public String scheduledDeletionTime() {
        return this.scheduledDeletionTime;
    }
    public String snowflakeRegion() {
        return this.snowflakeRegion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountsAccountShowOutput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountLocator;
        private String accountLocatorUrl;
        private String accountName;
        private String accountOldUrlLastUsed;
        private String accountOldUrlSavedOn;
        private String accountUrl;
        private String comment;
        private String consumptionBillingEntityName;
        private String createdOn;
        private String droppedOn;
        private String edition;
        private Boolean isEventsAccount;
        private Boolean isOrgAdmin;
        private Boolean isOrganizationAccount;
        private Integer managedAccounts;
        private String marketplaceConsumerBillingEntityName;
        private String marketplaceProviderBillingEntityName;
        private String movedOn;
        private String movedToOrganization;
        private String oldAccountUrl;
        private String organizationName;
        private String organizationOldUrl;
        private String organizationOldUrlLastUsed;
        private String organizationOldUrlSavedOn;
        private String organizationUrlExpirationOn;
        private String regionGroup;
        private String restoredOn;
        private String scheduledDeletionTime;
        private String snowflakeRegion;
        public Builder() {}
        public Builder(GetAccountsAccountShowOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountLocator = defaults.accountLocator;
    	      this.accountLocatorUrl = defaults.accountLocatorUrl;
    	      this.accountName = defaults.accountName;
    	      this.accountOldUrlLastUsed = defaults.accountOldUrlLastUsed;
    	      this.accountOldUrlSavedOn = defaults.accountOldUrlSavedOn;
    	      this.accountUrl = defaults.accountUrl;
    	      this.comment = defaults.comment;
    	      this.consumptionBillingEntityName = defaults.consumptionBillingEntityName;
    	      this.createdOn = defaults.createdOn;
    	      this.droppedOn = defaults.droppedOn;
    	      this.edition = defaults.edition;
    	      this.isEventsAccount = defaults.isEventsAccount;
    	      this.isOrgAdmin = defaults.isOrgAdmin;
    	      this.isOrganizationAccount = defaults.isOrganizationAccount;
    	      this.managedAccounts = defaults.managedAccounts;
    	      this.marketplaceConsumerBillingEntityName = defaults.marketplaceConsumerBillingEntityName;
    	      this.marketplaceProviderBillingEntityName = defaults.marketplaceProviderBillingEntityName;
    	      this.movedOn = defaults.movedOn;
    	      this.movedToOrganization = defaults.movedToOrganization;
    	      this.oldAccountUrl = defaults.oldAccountUrl;
    	      this.organizationName = defaults.organizationName;
    	      this.organizationOldUrl = defaults.organizationOldUrl;
    	      this.organizationOldUrlLastUsed = defaults.organizationOldUrlLastUsed;
    	      this.organizationOldUrlSavedOn = defaults.organizationOldUrlSavedOn;
    	      this.organizationUrlExpirationOn = defaults.organizationUrlExpirationOn;
    	      this.regionGroup = defaults.regionGroup;
    	      this.restoredOn = defaults.restoredOn;
    	      this.scheduledDeletionTime = defaults.scheduledDeletionTime;
    	      this.snowflakeRegion = defaults.snowflakeRegion;
        }

        @CustomType.Setter
        public Builder accountLocator(String accountLocator) {
            if (accountLocator == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountLocator");
            }
            this.accountLocator = accountLocator;
            return this;
        }
        @CustomType.Setter
        public Builder accountLocatorUrl(String accountLocatorUrl) {
            if (accountLocatorUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountLocatorUrl");
            }
            this.accountLocatorUrl = accountLocatorUrl;
            return this;
        }
        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder accountOldUrlLastUsed(String accountOldUrlLastUsed) {
            if (accountOldUrlLastUsed == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountOldUrlLastUsed");
            }
            this.accountOldUrlLastUsed = accountOldUrlLastUsed;
            return this;
        }
        @CustomType.Setter
        public Builder accountOldUrlSavedOn(String accountOldUrlSavedOn) {
            if (accountOldUrlSavedOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountOldUrlSavedOn");
            }
            this.accountOldUrlSavedOn = accountOldUrlSavedOn;
            return this;
        }
        @CustomType.Setter
        public Builder accountUrl(String accountUrl) {
            if (accountUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "accountUrl");
            }
            this.accountUrl = accountUrl;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder consumptionBillingEntityName(String consumptionBillingEntityName) {
            if (consumptionBillingEntityName == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "consumptionBillingEntityName");
            }
            this.consumptionBillingEntityName = consumptionBillingEntityName;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder droppedOn(String droppedOn) {
            if (droppedOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "droppedOn");
            }
            this.droppedOn = droppedOn;
            return this;
        }
        @CustomType.Setter
        public Builder edition(String edition) {
            if (edition == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "edition");
            }
            this.edition = edition;
            return this;
        }
        @CustomType.Setter
        public Builder isEventsAccount(Boolean isEventsAccount) {
            if (isEventsAccount == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "isEventsAccount");
            }
            this.isEventsAccount = isEventsAccount;
            return this;
        }
        @CustomType.Setter
        public Builder isOrgAdmin(Boolean isOrgAdmin) {
            if (isOrgAdmin == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "isOrgAdmin");
            }
            this.isOrgAdmin = isOrgAdmin;
            return this;
        }
        @CustomType.Setter
        public Builder isOrganizationAccount(Boolean isOrganizationAccount) {
            if (isOrganizationAccount == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "isOrganizationAccount");
            }
            this.isOrganizationAccount = isOrganizationAccount;
            return this;
        }
        @CustomType.Setter
        public Builder managedAccounts(Integer managedAccounts) {
            if (managedAccounts == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "managedAccounts");
            }
            this.managedAccounts = managedAccounts;
            return this;
        }
        @CustomType.Setter
        public Builder marketplaceConsumerBillingEntityName(String marketplaceConsumerBillingEntityName) {
            if (marketplaceConsumerBillingEntityName == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "marketplaceConsumerBillingEntityName");
            }
            this.marketplaceConsumerBillingEntityName = marketplaceConsumerBillingEntityName;
            return this;
        }
        @CustomType.Setter
        public Builder marketplaceProviderBillingEntityName(String marketplaceProviderBillingEntityName) {
            if (marketplaceProviderBillingEntityName == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "marketplaceProviderBillingEntityName");
            }
            this.marketplaceProviderBillingEntityName = marketplaceProviderBillingEntityName;
            return this;
        }
        @CustomType.Setter
        public Builder movedOn(String movedOn) {
            if (movedOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "movedOn");
            }
            this.movedOn = movedOn;
            return this;
        }
        @CustomType.Setter
        public Builder movedToOrganization(String movedToOrganization) {
            if (movedToOrganization == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "movedToOrganization");
            }
            this.movedToOrganization = movedToOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder oldAccountUrl(String oldAccountUrl) {
            if (oldAccountUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "oldAccountUrl");
            }
            this.oldAccountUrl = oldAccountUrl;
            return this;
        }
        @CustomType.Setter
        public Builder organizationName(String organizationName) {
            if (organizationName == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "organizationName");
            }
            this.organizationName = organizationName;
            return this;
        }
        @CustomType.Setter
        public Builder organizationOldUrl(String organizationOldUrl) {
            if (organizationOldUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "organizationOldUrl");
            }
            this.organizationOldUrl = organizationOldUrl;
            return this;
        }
        @CustomType.Setter
        public Builder organizationOldUrlLastUsed(String organizationOldUrlLastUsed) {
            if (organizationOldUrlLastUsed == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "organizationOldUrlLastUsed");
            }
            this.organizationOldUrlLastUsed = organizationOldUrlLastUsed;
            return this;
        }
        @CustomType.Setter
        public Builder organizationOldUrlSavedOn(String organizationOldUrlSavedOn) {
            if (organizationOldUrlSavedOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "organizationOldUrlSavedOn");
            }
            this.organizationOldUrlSavedOn = organizationOldUrlSavedOn;
            return this;
        }
        @CustomType.Setter
        public Builder organizationUrlExpirationOn(String organizationUrlExpirationOn) {
            if (organizationUrlExpirationOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "organizationUrlExpirationOn");
            }
            this.organizationUrlExpirationOn = organizationUrlExpirationOn;
            return this;
        }
        @CustomType.Setter
        public Builder regionGroup(String regionGroup) {
            if (regionGroup == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "regionGroup");
            }
            this.regionGroup = regionGroup;
            return this;
        }
        @CustomType.Setter
        public Builder restoredOn(String restoredOn) {
            if (restoredOn == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "restoredOn");
            }
            this.restoredOn = restoredOn;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledDeletionTime(String scheduledDeletionTime) {
            if (scheduledDeletionTime == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "scheduledDeletionTime");
            }
            this.scheduledDeletionTime = scheduledDeletionTime;
            return this;
        }
        @CustomType.Setter
        public Builder snowflakeRegion(String snowflakeRegion) {
            if (snowflakeRegion == null) {
              throw new MissingRequiredPropertyException("GetAccountsAccountShowOutput", "snowflakeRegion");
            }
            this.snowflakeRegion = snowflakeRegion;
            return this;
        }
        public GetAccountsAccountShowOutput build() {
            final var _resultValue = new GetAccountsAccountShowOutput();
            _resultValue.accountLocator = accountLocator;
            _resultValue.accountLocatorUrl = accountLocatorUrl;
            _resultValue.accountName = accountName;
            _resultValue.accountOldUrlLastUsed = accountOldUrlLastUsed;
            _resultValue.accountOldUrlSavedOn = accountOldUrlSavedOn;
            _resultValue.accountUrl = accountUrl;
            _resultValue.comment = comment;
            _resultValue.consumptionBillingEntityName = consumptionBillingEntityName;
            _resultValue.createdOn = createdOn;
            _resultValue.droppedOn = droppedOn;
            _resultValue.edition = edition;
            _resultValue.isEventsAccount = isEventsAccount;
            _resultValue.isOrgAdmin = isOrgAdmin;
            _resultValue.isOrganizationAccount = isOrganizationAccount;
            _resultValue.managedAccounts = managedAccounts;
            _resultValue.marketplaceConsumerBillingEntityName = marketplaceConsumerBillingEntityName;
            _resultValue.marketplaceProviderBillingEntityName = marketplaceProviderBillingEntityName;
            _resultValue.movedOn = movedOn;
            _resultValue.movedToOrganization = movedToOrganization;
            _resultValue.oldAccountUrl = oldAccountUrl;
            _resultValue.organizationName = organizationName;
            _resultValue.organizationOldUrl = organizationOldUrl;
            _resultValue.organizationOldUrlLastUsed = organizationOldUrlLastUsed;
            _resultValue.organizationOldUrlSavedOn = organizationOldUrlSavedOn;
            _resultValue.organizationUrlExpirationOn = organizationUrlExpirationOn;
            _resultValue.regionGroup = regionGroup;
            _resultValue.restoredOn = restoredOn;
            _resultValue.scheduledDeletionTime = scheduledDeletionTime;
            _resultValue.snowflakeRegion = snowflakeRegion;
            return _resultValue;
        }
    }
}
