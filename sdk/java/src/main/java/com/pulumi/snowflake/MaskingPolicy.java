// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.snowflake.MaskingPolicyArgs;
import com.pulumi.snowflake.Utilities;
import com.pulumi.snowflake.inputs.MaskingPolicyState;
import com.pulumi.snowflake.outputs.MaskingPolicyArgument;
import com.pulumi.snowflake.outputs.MaskingPolicyDescribeOutput;
import com.pulumi.snowflake.outputs.MaskingPolicyShowOutput;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ```sh
 * $ pulumi import snowflake:index/maskingPolicy:MaskingPolicy example &#39;&#34;&lt;database_name&gt;&#34;.&#34;&lt;schema_name&gt;&#34;.&#34;&lt;masking_policy_name&gt;&#34;&#39;
 * ```
 * 
 */
@ResourceType(type="snowflake:index/maskingPolicy:MaskingPolicy")
public class MaskingPolicy extends com.pulumi.resources.CustomResource {
    /**
     * List of the arguments for the masking policy. The first column and its data type always indicate the column data type values to mask or tokenize in the subsequent policy conditions. Note that you can not specify a virtual column as the first column argument in a conditional masking policy.
     * 
     */
    @Export(name="arguments", refs={List.class,MaskingPolicyArgument.class}, tree="[0,1]")
    private Output<List<MaskingPolicyArgument>> arguments;

    /**
     * @return List of the arguments for the masking policy. The first column and its data type always indicate the column data type values to mask or tokenize in the subsequent policy conditions. Note that you can not specify a virtual column as the first column argument in a conditional masking policy.
     * 
     */
    public Output<List<MaskingPolicyArgument>> arguments() {
        return this.arguments;
    }
    /**
     * Specifies the SQL expression that transforms the data. To mitigate permadiff on this field, the provider replaces blank characters with a space. This can lead to false positives in cases where a change in case or run of whitespace is semantically significant.
     * 
     */
    @Export(name="body", refs={String.class}, tree="[0]")
    private Output<String> body;

    /**
     * @return Specifies the SQL expression that transforms the data. To mitigate permadiff on this field, the provider replaces blank characters with a space. This can lead to false positives in cases where a change in case or run of whitespace is semantically significant.
     * 
     */
    public Output<String> body() {
        return this.body;
    }
    /**
     * Specifies a comment for the masking policy.
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> comment;

    /**
     * @return Specifies a comment for the masking policy.
     * 
     */
    public Output<Optional<String>> comment() {
        return Codegen.optional(this.comment);
    }
    /**
     * The database in which to create the masking policy. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The database in which to create the masking policy. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * Outputs the result of `DESCRIBE MASKING POLICY` for the given masking policy.
     * 
     */
    @Export(name="describeOutputs", refs={List.class,MaskingPolicyDescribeOutput.class}, tree="[0,1]")
    private Output<List<MaskingPolicyDescribeOutput>> describeOutputs;

    /**
     * @return Outputs the result of `DESCRIBE MASKING POLICY` for the given masking policy.
     * 
     */
    public Output<List<MaskingPolicyDescribeOutput>> describeOutputs() {
        return this.describeOutputs;
    }
    /**
     * Specifies whether the row access policy or conditional masking policy can reference a column that is already protected by a masking policy. Due to Snowflake limitations, when value is chenged, the resource is recreated. Available options are: &#34;true&#34; or &#34;false&#34;. When the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default for this value.
     * 
     */
    @Export(name="exemptOtherPolicies", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> exemptOtherPolicies;

    /**
     * @return Specifies whether the row access policy or conditional masking policy can reference a column that is already protected by a masking policy. Due to Snowflake limitations, when value is chenged, the resource is recreated. Available options are: &#34;true&#34; or &#34;false&#34;. When the value is not set in the configuration the provider will put &#34;default&#34; there which means to use the Snowflake default for this value.
     * 
     */
    public Output<Optional<String>> exemptOtherPolicies() {
        return Codegen.optional(this.exemptOtherPolicies);
    }
    /**
     * Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    @Export(name="fullyQualifiedName", refs={String.class}, tree="[0]")
    private Output<String> fullyQualifiedName;

    /**
     * @return Fully qualified name of the resource. For more information, see [object name resolution](https://docs.snowflake.com/en/sql-reference/name-resolution).
     * 
     */
    public Output<String> fullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * Specifies the identifier for the masking policy; must be unique for the database and schema in which the masking policy is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the identifier for the masking policy; must be unique for the database and schema in which the masking policy is created. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The return data type must match the input data type of the first column that is specified as an input column. For more information about data types, check [Snowflake docs](https://docs.snowflake.com/en/sql-reference/intro-summary-data-types).
     * 
     */
    @Export(name="returnDataType", refs={String.class}, tree="[0]")
    private Output<String> returnDataType;

    /**
     * @return The return data type must match the input data type of the first column that is specified as an input column. For more information about data types, check [Snowflake docs](https://docs.snowflake.com/en/sql-reference/intro-summary-data-types).
     * 
     */
    public Output<String> returnDataType() {
        return this.returnDataType;
    }
    /**
     * The schema in which to create the masking policy. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema in which to create the masking policy. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `(`, `)`, `&#34;`
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Outputs the result of `SHOW MASKING POLICY` for the given masking policy.
     * 
     */
    @Export(name="showOutputs", refs={List.class,MaskingPolicyShowOutput.class}, tree="[0,1]")
    private Output<List<MaskingPolicyShowOutput>> showOutputs;

    /**
     * @return Outputs the result of `SHOW MASKING POLICY` for the given masking policy.
     * 
     */
    public Output<List<MaskingPolicyShowOutput>> showOutputs() {
        return this.showOutputs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaskingPolicy(java.lang.String name) {
        this(name, MaskingPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaskingPolicy(java.lang.String name, MaskingPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaskingPolicy(java.lang.String name, MaskingPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/maskingPolicy:MaskingPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MaskingPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable MaskingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("snowflake:index/maskingPolicy:MaskingPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static MaskingPolicyArgs makeArgs(MaskingPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MaskingPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaskingPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable MaskingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaskingPolicy(name, id, state, options);
    }
}
