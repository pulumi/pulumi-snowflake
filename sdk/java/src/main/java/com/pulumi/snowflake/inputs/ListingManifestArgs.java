// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.ListingManifestFromStageArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ListingManifestArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListingManifestArgs Empty = new ListingManifestArgs();

    /**
     * Manifest provided from a given stage. If the manifest file is in the root, only stage needs to be passed. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). A proper YAML indentation (2 spaces) is required.
     * 
     */
    @Import(name="fromStage")
    private @Nullable Output<ListingManifestFromStageArgs> fromStage;

    /**
     * @return Manifest provided from a given stage. If the manifest file is in the root, only stage needs to be passed. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). A proper YAML indentation (2 spaces) is required.
     * 
     */
    public Optional<Output<ListingManifestFromStageArgs>> fromStage() {
        return Optional.ofNullable(this.fromStage);
    }

    /**
     * Manifest provided as a string. Wrapping `$$` signs are added by the provider automatically; do not include them. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). Also, the multiline string syntax is a must here. A proper YAML indentation (2 spaces) is required.
     * 
     */
    @Import(name="fromString")
    private @Nullable Output<String> fromString;

    /**
     * @return Manifest provided as a string. Wrapping `$$` signs are added by the provider automatically; do not include them. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). Also, the multiline string syntax is a must here. A proper YAML indentation (2 spaces) is required.
     * 
     */
    public Optional<Output<String>> fromString() {
        return Optional.ofNullable(this.fromString);
    }

    private ListingManifestArgs() {}

    private ListingManifestArgs(ListingManifestArgs $) {
        this.fromStage = $.fromStage;
        this.fromString = $.fromString;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListingManifestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListingManifestArgs $;

        public Builder() {
            $ = new ListingManifestArgs();
        }

        public Builder(ListingManifestArgs defaults) {
            $ = new ListingManifestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fromStage Manifest provided from a given stage. If the manifest file is in the root, only stage needs to be passed. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). A proper YAML indentation (2 spaces) is required.
         * 
         * @return builder
         * 
         */
        public Builder fromStage(@Nullable Output<ListingManifestFromStageArgs> fromStage) {
            $.fromStage = fromStage;
            return this;
        }

        /**
         * @param fromStage Manifest provided from a given stage. If the manifest file is in the root, only stage needs to be passed. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). A proper YAML indentation (2 spaces) is required.
         * 
         * @return builder
         * 
         */
        public Builder fromStage(ListingManifestFromStageArgs fromStage) {
            return fromStage(Output.of(fromStage));
        }

        /**
         * @param fromString Manifest provided as a string. Wrapping `$$` signs are added by the provider automatically; do not include them. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). Also, the multiline string syntax is a must here. A proper YAML indentation (2 spaces) is required.
         * 
         * @return builder
         * 
         */
        public Builder fromString(@Nullable Output<String> fromString) {
            $.fromString = fromString;
            return this;
        }

        /**
         * @param fromString Manifest provided as a string. Wrapping `$$` signs are added by the provider automatically; do not include them. For more information on manifest syntax, see [Listing manifest reference](https://docs.snowflake.com/en/progaccess/listing-manifest-reference). Also, the multiline string syntax is a must here. A proper YAML indentation (2 spaces) is required.
         * 
         * @return builder
         * 
         */
        public Builder fromString(String fromString) {
            return fromString(Output.of(fromString));
        }

        public ListingManifestArgs build() {
            return $;
        }
    }

}
