// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSharesShare {
    private String comment;
    private String kind;
    private String name;
    private String owner;
    private List<Object> tos;

    private GetSharesShare() {}
    public String comment() {
        return this.comment;
    }
    public String kind() {
        return this.kind;
    }
    public String name() {
        return this.name;
    }
    public String owner() {
        return this.owner;
    }
    public List<Object> tos() {
        return this.tos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSharesShare defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String kind;
        private String name;
        private String owner;
        private List<Object> tos;
        public Builder() {}
        public Builder(GetSharesShare defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.tos = defaults.tos;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        @CustomType.Setter
        public Builder tos(List<Object> tos) {
            this.tos = Objects.requireNonNull(tos);
            return this;
        }
        public Builder tos(Object... tos) {
            return tos(List.of(tos));
        }
        public GetSharesShare build() {
            final var _resultValue = new GetSharesShare();
            _resultValue.comment = comment;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.tos = tos;
            return _resultValue;
        }
    }
}
