// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGrantsFutureGrantsInSchema extends com.pulumi.resources.InvokeArgs {

    public static final GetGrantsFutureGrantsInSchema Empty = new GetGrantsFutureGrantsInSchema();

    @Import(name="databaseName")
    private @Nullable String databaseName;

    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    @Import(name="schemaName", required=true)
    private String schemaName;

    public String schemaName() {
        return this.schemaName;
    }

    private GetGrantsFutureGrantsInSchema() {}

    private GetGrantsFutureGrantsInSchema(GetGrantsFutureGrantsInSchema $) {
        this.databaseName = $.databaseName;
        this.schemaName = $.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsFutureGrantsInSchema defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsFutureGrantsInSchema $;

        public Builder() {
            $ = new GetGrantsFutureGrantsInSchema();
        }

        public Builder(GetGrantsFutureGrantsInSchema defaults) {
            $ = new GetGrantsFutureGrantsInSchema(Objects.requireNonNull(defaults));
        }

        public Builder databaseName(@Nullable String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        public Builder schemaName(String schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        public GetGrantsFutureGrantsInSchema build() {
            $.schemaName = Objects.requireNonNull($.schemaName, "expected parameter 'schemaName' to be non-null");
            return $;
        }
    }

}
