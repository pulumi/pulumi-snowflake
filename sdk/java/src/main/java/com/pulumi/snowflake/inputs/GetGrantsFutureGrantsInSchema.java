// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGrantsFutureGrantsInSchema extends com.pulumi.resources.InvokeArgs {

    public static final GetGrantsFutureGrantsInSchema Empty = new GetGrantsFutureGrantsInSchema();

    /**
     * The database in which the scehma resides. Optional when querying a schema in the current database.
     * 
     */
    @Import(name="databaseName")
    private @Nullable String databaseName;

    /**
     * @return The database in which the scehma resides. Optional when querying a schema in the current database.
     * 
     */
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    /**
     * The name of the schema to list all privileges of new (ie. future) objects granted to
     * 
     */
    @Import(name="schemaName", required=true)
    private String schemaName;

    /**
     * @return The name of the schema to list all privileges of new (ie. future) objects granted to
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }

    private GetGrantsFutureGrantsInSchema() {}

    private GetGrantsFutureGrantsInSchema(GetGrantsFutureGrantsInSchema $) {
        this.databaseName = $.databaseName;
        this.schemaName = $.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGrantsFutureGrantsInSchema defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGrantsFutureGrantsInSchema $;

        public Builder() {
            $ = new GetGrantsFutureGrantsInSchema();
        }

        public Builder(GetGrantsFutureGrantsInSchema defaults) {
            $ = new GetGrantsFutureGrantsInSchema(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName The database in which the scehma resides. Optional when querying a schema in the current database.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(@Nullable String databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param schemaName The name of the schema to list all privileges of new (ie. future) objects granted to
         * 
         * @return builder
         * 
         */
        public Builder schemaName(String schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        public GetGrantsFutureGrantsInSchema build() {
            if ($.schemaName == null) {
                throw new MissingRequiredPropertyException("GetGrantsFutureGrantsInSchema", "schemaName");
            }
            return $;
        }
    }

}
