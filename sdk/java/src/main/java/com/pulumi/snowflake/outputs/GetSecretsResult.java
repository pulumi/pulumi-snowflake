// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetSecretsIn;
import com.pulumi.snowflake.outputs.GetSecretsSecret;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecretsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable GetSecretsIn in;
    private @Nullable String like;
    private List<GetSecretsSecret> secrets;
    private @Nullable Boolean withDescribe;

    private GetSecretsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<GetSecretsIn> in() {
        return Optional.ofNullable(this.in);
    }
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }
    public List<GetSecretsSecret> secrets() {
        return this.secrets;
    }
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable GetSecretsIn in;
        private @Nullable String like;
        private List<GetSecretsSecret> secrets;
        private @Nullable Boolean withDescribe;
        public Builder() {}
        public Builder(GetSecretsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.in = defaults.in;
    	      this.like = defaults.like;
    	      this.secrets = defaults.secrets;
    	      this.withDescribe = defaults.withDescribe;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecretsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder in(@Nullable GetSecretsIn in) {

            this.in = in;
            return this;
        }
        @CustomType.Setter
        public Builder like(@Nullable String like) {

            this.like = like;
            return this;
        }
        @CustomType.Setter
        public Builder secrets(List<GetSecretsSecret> secrets) {
            if (secrets == null) {
              throw new MissingRequiredPropertyException("GetSecretsResult", "secrets");
            }
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(GetSecretsSecret... secrets) {
            return secrets(List.of(secrets));
        }
        @CustomType.Setter
        public Builder withDescribe(@Nullable Boolean withDescribe) {

            this.withDescribe = withDescribe;
            return this;
        }
        public GetSecretsResult build() {
            final var _resultValue = new GetSecretsResult();
            _resultValue.id = id;
            _resultValue.in = in;
            _resultValue.like = like;
            _resultValue.secrets = secrets;
            _resultValue.withDescribe = withDescribe;
            return _resultValue;
        }
    }
}
