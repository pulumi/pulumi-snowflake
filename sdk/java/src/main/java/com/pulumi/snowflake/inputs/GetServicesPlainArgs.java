// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.GetServicesIn;
import com.pulumi.snowflake.inputs.GetServicesLimit;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServicesPlainArgs Empty = new GetServicesPlainArgs();

    /**
     * IN clause to filter the list of objects
     * 
     */
    @Import(name="in")
    private @Nullable GetServicesIn in;

    /**
     * @return IN clause to filter the list of objects
     * 
     */
    public Optional<GetServicesIn> in() {
        return Optional.ofNullable(this.in);
    }

    /**
     * Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    @Import(name="like")
    private @Nullable String like;

    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }

    /**
     * Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    @Import(name="limit")
    private @Nullable GetServicesLimit limit;

    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    public Optional<GetServicesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * (Default: `ALL`) The type filtering of `SHOW SERVICES` results. `ALL` returns both services and job services. `JOBS_ONLY` returns only job services (`JOB` option in SQL). `SERVICES_ONLY` returns only services (`EXCLUDE_JOBS` option in SQL).
     * 
     */
    @Import(name="serviceType")
    private @Nullable String serviceType;

    /**
     * @return (Default: `ALL`) The type filtering of `SHOW SERVICES` results. `ALL` returns both services and job services. `JOBS_ONLY` returns only job services (`JOB` option in SQL). `SERVICES_ONLY` returns only services (`EXCLUDE_JOBS` option in SQL).
     * 
     */
    public Optional<String> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    /**
     * Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    @Import(name="startsWith")
    private @Nullable String startsWith;

    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }

    /**
     * (Default: `true`) Runs DESC SERVICE for each service returned by SHOW SERVICES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    @Import(name="withDescribe")
    private @Nullable Boolean withDescribe;

    /**
     * @return (Default: `true`) Runs DESC SERVICE for each service returned by SHOW SERVICES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    private GetServicesPlainArgs() {}

    private GetServicesPlainArgs(GetServicesPlainArgs $) {
        this.in = $.in;
        this.like = $.like;
        this.limit = $.limit;
        this.serviceType = $.serviceType;
        this.startsWith = $.startsWith;
        this.withDescribe = $.withDescribe;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServicesPlainArgs $;

        public Builder() {
            $ = new GetServicesPlainArgs();
        }

        public Builder(GetServicesPlainArgs defaults) {
            $ = new GetServicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param in IN clause to filter the list of objects
         * 
         * @return builder
         * 
         */
        public Builder in(@Nullable GetServicesIn in) {
            $.in = in;
            return this;
        }

        /**
         * @param like Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
         * 
         * @return builder
         * 
         */
        public Builder like(@Nullable String like) {
            $.like = like;
            return this;
        }

        /**
         * @param limit Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable GetServicesLimit limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param serviceType (Default: `ALL`) The type filtering of `SHOW SERVICES` results. `ALL` returns both services and job services. `JOBS_ONLY` returns only job services (`JOB` option in SQL). `SERVICES_ONLY` returns only services (`EXCLUDE_JOBS` option in SQL).
         * 
         * @return builder
         * 
         */
        public Builder serviceType(@Nullable String serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param startsWith Filters the output with **case-sensitive** characters indicating the beginning of the object name.
         * 
         * @return builder
         * 
         */
        public Builder startsWith(@Nullable String startsWith) {
            $.startsWith = startsWith;
            return this;
        }

        /**
         * @param withDescribe (Default: `true`) Runs DESC SERVICE for each service returned by SHOW SERVICES. The output of describe is saved to the description field. By default this value is set to true.
         * 
         * @return builder
         * 
         */
        public Builder withDescribe(@Nullable Boolean withDescribe) {
            $.withDescribe = withDescribe;
            return this;
        }

        public GetServicesPlainArgs build() {
            return $;
        }
    }

}
