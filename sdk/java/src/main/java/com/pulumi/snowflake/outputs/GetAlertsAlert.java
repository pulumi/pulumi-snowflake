// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAlertsAlert {
    private String action;
    private String comment;
    private String condition;
    private String databaseName;
    private String name;
    private String owner;
    private String schemaName;

    private GetAlertsAlert() {}
    public String action() {
        return this.action;
    }
    public String comment() {
        return this.comment;
    }
    public String condition() {
        return this.condition;
    }
    public String databaseName() {
        return this.databaseName;
    }
    public String name() {
        return this.name;
    }
    public String owner() {
        return this.owner;
    }
    public String schemaName() {
        return this.schemaName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsAlert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String comment;
        private String condition;
        private String databaseName;
        private String name;
        private String owner;
        private String schemaName;
        public Builder() {}
        public Builder(GetAlertsAlert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.comment = defaults.comment;
    	      this.condition = defaults.condition;
    	      this.databaseName = defaults.databaseName;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.schemaName = defaults.schemaName;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder comment(String comment) {
            if (comment == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "comment");
            }
            this.comment = comment;
            return this;
        }
        @CustomType.Setter
        public Builder condition(String condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "condition");
            }
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(String databaseName) {
            if (databaseName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "databaseName");
            }
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(String schemaName) {
            if (schemaName == null) {
              throw new MissingRequiredPropertyException("GetAlertsAlert", "schemaName");
            }
            this.schemaName = schemaName;
            return this;
        }
        public GetAlertsAlert build() {
            final var _resultValue = new GetAlertsAlert();
            _resultValue.action = action;
            _resultValue.comment = comment;
            _resultValue.condition = condition;
            _resultValue.databaseName = databaseName;
            _resultValue.name = name;
            _resultValue.owner = owner;
            _resultValue.schemaName = schemaName;
            return _resultValue;
        }
    }
}
