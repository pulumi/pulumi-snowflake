// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.CurrentOrganizationAccountShowOutputArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CurrentOrganizationAccountState extends com.pulumi.resources.ResourceArgs {

    public static final CurrentOrganizationAccountState Empty = new CurrentOrganizationAccountState();

    /**
     * Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
     * 
     */
    @Import(name="abortDetachedQuery")
    private @Nullable Output<Boolean> abortDetachedQuery;

    /**
     * @return Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
     * 
     */
    public Optional<Output<Boolean>> abortDetachedQuery() {
        return Optional.ofNullable(this.abortDetachedQuery);
    }

    /**
     * Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
     * 
     */
    @Import(name="activePythonProfiler")
    private @Nullable Output<String> activePythonProfiler;

    /**
     * @return Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
     * 
     */
    public Optional<Output<String>> activePythonProfiler() {
        return Optional.ofNullable(this.activePythonProfiler);
    }

    /**
     * Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
     * 
     */
    @Import(name="allowClientMfaCaching")
    private @Nullable Output<Boolean> allowClientMfaCaching;

    /**
     * @return Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
     * 
     */
    public Optional<Output<Boolean>> allowClientMfaCaching() {
        return Optional.ofNullable(this.allowClientMfaCaching);
    }

    /**
     * Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
     * 
     */
    @Import(name="allowIdToken")
    private @Nullable Output<Boolean> allowIdToken;

    /**
     * @return Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
     * 
     */
    public Optional<Output<Boolean>> allowIdToken() {
        return Optional.ofNullable(this.allowIdToken);
    }

    /**
     * Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
     * 
     */
    @Import(name="autocommit")
    private @Nullable Output<Boolean> autocommit;

    /**
     * @return Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
     * 
     */
    public Optional<Output<Boolean>> autocommit() {
        return Optional.ofNullable(this.autocommit);
    }

    /**
     * Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
     * 
     */
    @Import(name="baseLocationPrefix")
    private @Nullable Output<String> baseLocationPrefix;

    /**
     * @return Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
     * 
     */
    public Optional<Output<String>> baseLocationPrefix() {
        return Optional.ofNullable(this.baseLocationPrefix);
    }

    /**
     * The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
     * 
     */
    @Import(name="binaryInputFormat")
    private @Nullable Output<String> binaryInputFormat;

    /**
     * @return The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
     * 
     */
    public Optional<Output<String>> binaryInputFormat() {
        return Optional.ofNullable(this.binaryInputFormat);
    }

    /**
     * The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
     * 
     */
    @Import(name="binaryOutputFormat")
    private @Nullable Output<String> binaryOutputFormat;

    /**
     * @return The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
     * 
     */
    public Optional<Output<String>> binaryOutputFormat() {
        return Optional.ofNullable(this.binaryOutputFormat);
    }

    /**
     * Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
     * 
     */
    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    /**
     * @return Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
     * 
     */
    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    /**
     * Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
     * 
     */
    @Import(name="catalogSync")
    private @Nullable Output<String> catalogSync;

    /**
     * @return Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
     * 
     */
    public Optional<Output<String>> catalogSync() {
        return Optional.ofNullable(this.catalogSync);
    }

    /**
     * Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
     * 
     */
    @Import(name="clientEnableLogInfoStatementParameters")
    private @Nullable Output<Boolean> clientEnableLogInfoStatementParameters;

    /**
     * @return Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
     * 
     */
    public Optional<Output<Boolean>> clientEnableLogInfoStatementParameters() {
        return Optional.ofNullable(this.clientEnableLogInfoStatementParameters);
    }

    /**
     * Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check *ENCRYPTION*KEY*SIZE docs[CLIENT](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
     * 
     */
    @Import(name="clientEncryptionKeySize")
    private @Nullable Output<Integer> clientEncryptionKeySize;

    /**
     * @return Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check *ENCRYPTION*KEY*SIZE docs[CLIENT](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
     * 
     */
    public Optional<Output<Integer>> clientEncryptionKeySize() {
        return Optional.ofNullable(this.clientEncryptionKeySize);
    }

    /**
     * Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
     * 
     */
    @Import(name="clientMemoryLimit")
    private @Nullable Output<Integer> clientMemoryLimit;

    /**
     * @return Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
     * 
     */
    public Optional<Output<Integer>> clientMemoryLimit() {
        return Optional.ofNullable(this.clientMemoryLimit);
    }

    /**
     * For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
     * 
     */
    @Import(name="clientMetadataRequestUseConnectionCtx")
    private @Nullable Output<Boolean> clientMetadataRequestUseConnectionCtx;

    /**
     * @return For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
     * 
     */
    public Optional<Output<Boolean>> clientMetadataRequestUseConnectionCtx() {
        return Optional.ofNullable(this.clientMetadataRequestUseConnectionCtx);
    }

    /**
     * For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
     * 
     */
    @Import(name="clientMetadataUseSessionDatabase")
    private @Nullable Output<Boolean> clientMetadataUseSessionDatabase;

    /**
     * @return For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
     * 
     */
    public Optional<Output<Boolean>> clientMetadataUseSessionDatabase() {
        return Optional.ofNullable(this.clientMetadataUseSessionDatabase);
    }

    /**
     * Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
     * 
     */
    @Import(name="clientPrefetchThreads")
    private @Nullable Output<Integer> clientPrefetchThreads;

    /**
     * @return Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
     * 
     */
    public Optional<Output<Integer>> clientPrefetchThreads() {
        return Optional.ofNullable(this.clientPrefetchThreads);
    }

    /**
     * Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
     * 
     */
    @Import(name="clientResultChunkSize")
    private @Nullable Output<Integer> clientResultChunkSize;

    /**
     * @return Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
     * 
     */
    public Optional<Output<Integer>> clientResultChunkSize() {
        return Optional.ofNullable(this.clientResultChunkSize);
    }

    /**
     * Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
     * 
     */
    @Import(name="clientResultColumnCaseInsensitive")
    private @Nullable Output<Boolean> clientResultColumnCaseInsensitive;

    /**
     * @return Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
     * 
     */
    public Optional<Output<Boolean>> clientResultColumnCaseInsensitive() {
        return Optional.ofNullable(this.clientResultColumnCaseInsensitive);
    }

    /**
     * Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
     * 
     */
    @Import(name="clientSessionKeepAlive")
    private @Nullable Output<Boolean> clientSessionKeepAlive;

    /**
     * @return Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
     * 
     */
    public Optional<Output<Boolean>> clientSessionKeepAlive() {
        return Optional.ofNullable(this.clientSessionKeepAlive);
    }

    /**
     * Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
     * 
     */
    @Import(name="clientSessionKeepAliveHeartbeatFrequency")
    private @Nullable Output<Integer> clientSessionKeepAliveHeartbeatFrequency;

    /**
     * @return Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
     * 
     */
    public Optional<Output<Integer>> clientSessionKeepAliveHeartbeatFrequency() {
        return Optional.ofNullable(this.clientSessionKeepAliveHeartbeatFrequency);
    }

    /**
     * Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
     * 
     */
    @Import(name="clientTimestampTypeMapping")
    private @Nullable Output<String> clientTimestampTypeMapping;

    /**
     * @return Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
     * 
     */
    public Optional<Output<String>> clientTimestampTypeMapping() {
        return Optional.ofNullable(this.clientTimestampTypeMapping);
    }

    /**
     * Specifies a comment for the organization account.
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Specifies a comment for the organization account.
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
     * 
     */
    @Import(name="cortexEnabledCrossRegion")
    private @Nullable Output<String> cortexEnabledCrossRegion;

    /**
     * @return Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
     * 
     */
    public Optional<Output<String>> cortexEnabledCrossRegion() {
        return Optional.ofNullable(this.cortexEnabledCrossRegion);
    }

    /**
     * Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
     * 
     */
    @Import(name="cortexModelsAllowlist")
    private @Nullable Output<String> cortexModelsAllowlist;

    /**
     * @return Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
     * 
     */
    public Optional<Output<String>> cortexModelsAllowlist() {
        return Optional.ofNullable(this.cortexModelsAllowlist);
    }

    /**
     * Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, *TZ*OUTPUT_FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and *NTZ*OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check *TIMESTAMP*FORMAT docs[CSV](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
     * 
     */
    @Import(name="csvTimestampFormat")
    private @Nullable Output<String> csvTimestampFormat;

    /**
     * @return Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, *TZ*OUTPUT_FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and *NTZ*OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check *TIMESTAMP*FORMAT docs[CSV](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
     * 
     */
    public Optional<Output<String>> csvTimestampFormat() {
        return Optional.ofNullable(this.csvTimestampFormat);
    }

    /**
     * Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding &amp; using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
     * 
     */
    @Import(name="dataRetentionTimeInDays")
    private @Nullable Output<Integer> dataRetentionTimeInDays;

    /**
     * @return Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding &amp; using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
     * 
     */
    public Optional<Output<Integer>> dataRetentionTimeInDays() {
        return Optional.ofNullable(this.dataRetentionTimeInDays);
    }

    /**
     * Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
     * 
     */
    @Import(name="dateInputFormat")
    private @Nullable Output<String> dateInputFormat;

    /**
     * @return Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
     * 
     */
    public Optional<Output<String>> dateInputFormat() {
        return Optional.ofNullable(this.dateInputFormat);
    }

    /**
     * Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
     * 
     */
    @Import(name="dateOutputFormat")
    private @Nullable Output<String> dateOutputFormat;

    /**
     * @return Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
     * 
     */
    public Optional<Output<String>> dateOutputFormat() {
        return Optional.ofNullable(this.dateOutputFormat);
    }

    /**
     * Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
     * 
     */
    @Import(name="defaultDdlCollation")
    private @Nullable Output<String> defaultDdlCollation;

    /**
     * @return Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
     * 
     */
    public Optional<Output<String>> defaultDdlCollation() {
        return Optional.ofNullable(this.defaultDdlCollation);
    }

    /**
     * Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
     * 
     */
    @Import(name="defaultNotebookComputePoolCpu")
    private @Nullable Output<String> defaultNotebookComputePoolCpu;

    /**
     * @return Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
     * 
     */
    public Optional<Output<String>> defaultNotebookComputePoolCpu() {
        return Optional.ofNullable(this.defaultNotebookComputePoolCpu);
    }

    /**
     * Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
     * 
     */
    @Import(name="defaultNotebookComputePoolGpu")
    private @Nullable Output<String> defaultNotebookComputePoolGpu;

    /**
     * @return Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
     * 
     */
    public Optional<Output<String>> defaultNotebookComputePoolGpu() {
        return Optional.ofNullable(this.defaultNotebookComputePoolGpu);
    }

    /**
     * Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
     * 
     */
    @Import(name="defaultNullOrdering")
    private @Nullable Output<String> defaultNullOrdering;

    /**
     * @return Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
     * 
     */
    public Optional<Output<String>> defaultNullOrdering() {
        return Optional.ofNullable(this.defaultNullOrdering);
    }

    /**
     * Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
     * 
     */
    @Import(name="defaultStreamlitNotebookWarehouse")
    private @Nullable Output<String> defaultStreamlitNotebookWarehouse;

    /**
     * @return Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
     * 
     */
    public Optional<Output<String>> defaultStreamlitNotebookWarehouse() {
        return Optional.ofNullable(this.defaultStreamlitNotebookWarehouse);
    }

    /**
     * Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
     * 
     */
    @Import(name="disableUiDownloadButton")
    private @Nullable Output<Boolean> disableUiDownloadButton;

    /**
     * @return Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
     * 
     */
    public Optional<Output<Boolean>> disableUiDownloadButton() {
        return Optional.ofNullable(this.disableUiDownloadButton);
    }

    /**
     * Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \n\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check *USER*PRIVILEGE*GRANTS docs[DISABLE](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
     * 
     */
    @Import(name="disableUserPrivilegeGrants")
    private @Nullable Output<Boolean> disableUserPrivilegeGrants;

    /**
     * @return Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \n\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check *USER*PRIVILEGE*GRANTS docs[DISABLE](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
     * 
     */
    public Optional<Output<Boolean>> disableUserPrivilegeGrants() {
        return Optional.ofNullable(this.disableUserPrivilegeGrants);
    }

    /**
     * Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
     * 
     */
    @Import(name="enableAutomaticSensitiveDataClassificationLog")
    private @Nullable Output<Boolean> enableAutomaticSensitiveDataClassificationLog;

    /**
     * @return Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
     * 
     */
    public Optional<Output<Boolean>> enableAutomaticSensitiveDataClassificationLog() {
        return Optional.ofNullable(this.enableAutomaticSensitiveDataClassificationLog);
    }

    /**
     * Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
     * 
     */
    @Import(name="enableEgressCostOptimizer")
    private @Nullable Output<Boolean> enableEgressCostOptimizer;

    /**
     * @return Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
     * 
     */
    public Optional<Output<Boolean>> enableEgressCostOptimizer() {
        return Optional.ofNullable(this.enableEgressCostOptimizer);
    }

    /**
     * Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
     * 
     */
    @Import(name="enableIdentifierFirstLogin")
    private @Nullable Output<Boolean> enableIdentifierFirstLogin;

    /**
     * @return Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
     * 
     */
    public Optional<Output<Boolean>> enableIdentifierFirstLogin() {
        return Optional.ofNullable(this.enableIdentifierFirstLogin);
    }

    /**
     * Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
     * 
     */
    @Import(name="enableInternalStagesPrivatelink")
    private @Nullable Output<Boolean> enableInternalStagesPrivatelink;

    /**
     * @return Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
     * 
     */
    public Optional<Output<Boolean>> enableInternalStagesPrivatelink() {
        return Optional.ofNullable(this.enableInternalStagesPrivatelink);
    }

    /**
     * Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
     * 
     */
    @Import(name="enableTriSecretAndRekeyOptOutForImageRepository")
    private @Nullable Output<Boolean> enableTriSecretAndRekeyOptOutForImageRepository;

    /**
     * @return Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
     * 
     */
    public Optional<Output<Boolean>> enableTriSecretAndRekeyOptOutForImageRepository() {
        return Optional.ofNullable(this.enableTriSecretAndRekeyOptOutForImageRepository);
    }

    /**
     * Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
     * 
     */
    @Import(name="enableTriSecretAndRekeyOptOutForSpcsBlockStorage")
    private @Nullable Output<Boolean> enableTriSecretAndRekeyOptOutForSpcsBlockStorage;

    /**
     * @return Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
     * 
     */
    public Optional<Output<Boolean>> enableTriSecretAndRekeyOptOutForSpcsBlockStorage() {
        return Optional.ofNullable(this.enableTriSecretAndRekeyOptOutForSpcsBlockStorage);
    }

    /**
     * Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
     * 
     */
    @Import(name="enableUnhandledExceptionsReporting")
    private @Nullable Output<Boolean> enableUnhandledExceptionsReporting;

    /**
     * @return Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
     * 
     */
    public Optional<Output<Boolean>> enableUnhandledExceptionsReporting() {
        return Optional.ofNullable(this.enableUnhandledExceptionsReporting);
    }

    /**
     * Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
     * 
     */
    @Import(name="enableUnloadPhysicalTypeOptimization")
    private @Nullable Output<Boolean> enableUnloadPhysicalTypeOptimization;

    /**
     * @return Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
     * 
     */
    public Optional<Output<Boolean>> enableUnloadPhysicalTypeOptimization() {
        return Optional.ofNullable(this.enableUnloadPhysicalTypeOptimization);
    }

    /**
     * Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check *UNREDACTED*QUERY*SYNTAX*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
     * 
     */
    @Import(name="enableUnredactedQuerySyntaxError")
    private @Nullable Output<Boolean> enableUnredactedQuerySyntaxError;

    /**
     * @return Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check *UNREDACTED*QUERY*SYNTAX*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
     * 
     */
    public Optional<Output<Boolean>> enableUnredactedQuerySyntaxError() {
        return Optional.ofNullable(this.enableUnredactedQuerySyntaxError);
    }

    /**
     * Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check *UNREDACTED*SECURE*OBJECT*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
     * 
     */
    @Import(name="enableUnredactedSecureObjectError")
    private @Nullable Output<Boolean> enableUnredactedSecureObjectError;

    /**
     * @return Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check *UNREDACTED*SECURE*OBJECT*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
     * 
     */
    public Optional<Output<Boolean>> enableUnredactedSecureObjectError() {
        return Optional.ofNullable(this.enableUnredactedSecureObjectError);
    }

    /**
     * Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
     * 
     */
    @Import(name="enforceNetworkRulesForInternalStages")
    private @Nullable Output<Boolean> enforceNetworkRulesForInternalStages;

    /**
     * @return Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
     * 
     */
    public Optional<Output<Boolean>> enforceNetworkRulesForInternalStages() {
        return Optional.ofNullable(this.enforceNetworkRulesForInternalStages);
    }

    /**
     * Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
     * 
     */
    @Import(name="errorOnNondeterministicMerge")
    private @Nullable Output<Boolean> errorOnNondeterministicMerge;

    /**
     * @return Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
     * 
     */
    public Optional<Output<Boolean>> errorOnNondeterministicMerge() {
        return Optional.ofNullable(this.errorOnNondeterministicMerge);
    }

    /**
     * Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
     * 
     */
    @Import(name="errorOnNondeterministicUpdate")
    private @Nullable Output<Boolean> errorOnNondeterministicUpdate;

    /**
     * @return Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
     * 
     */
    public Optional<Output<Boolean>> errorOnNondeterministicUpdate() {
        return Optional.ofNullable(this.errorOnNondeterministicUpdate);
    }

    /**
     * Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
     * 
     */
    @Import(name="eventTable")
    private @Nullable Output<String> eventTable;

    /**
     * @return Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
     * 
     */
    public Optional<Output<String>> eventTable() {
        return Optional.ofNullable(this.eventTable);
    }

    /**
     * Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
     * 
     */
    @Import(name="externalOauthAddPrivilegedRolesToBlockedList")
    private @Nullable Output<Boolean> externalOauthAddPrivilegedRolesToBlockedList;

    /**
     * @return Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
     * 
     */
    public Optional<Output<Boolean>> externalOauthAddPrivilegedRolesToBlockedList() {
        return Optional.ofNullable(this.externalOauthAddPrivilegedRolesToBlockedList);
    }

    /**
     * Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
     * 
     */
    @Import(name="externalVolume")
    private @Nullable Output<String> externalVolume;

    /**
     * @return Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
     * 
     */
    public Optional<Output<String>> externalVolume() {
        return Optional.ofNullable(this.externalVolume);
    }

    /**
     * Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
     * 
     */
    @Import(name="geographyOutputFormat")
    private @Nullable Output<String> geographyOutputFormat;

    /**
     * @return Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
     * 
     */
    public Optional<Output<String>> geographyOutputFormat() {
        return Optional.ofNullable(this.geographyOutputFormat);
    }

    /**
     * Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
     * 
     */
    @Import(name="geometryOutputFormat")
    private @Nullable Output<String> geometryOutputFormat;

    /**
     * @return Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
     * 
     */
    public Optional<Output<String>> geometryOutputFormat() {
        return Optional.ofNullable(this.geometryOutputFormat);
    }

    /**
     * Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
     * 
     */
    @Import(name="hybridTableLockTimeout")
    private @Nullable Output<Integer> hybridTableLockTimeout;

    /**
     * @return Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
     * 
     */
    public Optional<Output<Integer>> hybridTableLockTimeout() {
        return Optional.ofNullable(this.hybridTableLockTimeout);
    }

    /**
     * Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
     * 
     */
    @Import(name="initialReplicationSizeLimitInTb")
    private @Nullable Output<String> initialReplicationSizeLimitInTb;

    /**
     * @return Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
     * 
     */
    public Optional<Output<String>> initialReplicationSizeLimitInTb() {
        return Optional.ofNullable(this.initialReplicationSizeLimitInTb);
    }

    /**
     * Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
     * 
     */
    @Import(name="jdbcTreatDecimalAsInt")
    private @Nullable Output<Boolean> jdbcTreatDecimalAsInt;

    /**
     * @return Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
     * 
     */
    public Optional<Output<Boolean>> jdbcTreatDecimalAsInt() {
        return Optional.ofNullable(this.jdbcTreatDecimalAsInt);
    }

    /**
     * Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check *TREAT*TIMESTAMP*NTZ*AS*UTC docs[JDBC](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
     * 
     */
    @Import(name="jdbcTreatTimestampNtzAsUtc")
    private @Nullable Output<Boolean> jdbcTreatTimestampNtzAsUtc;

    /**
     * @return Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check *TREAT*TIMESTAMP*NTZ*AS*UTC docs[JDBC](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
     * 
     */
    public Optional<Output<Boolean>> jdbcTreatTimestampNtzAsUtc() {
        return Optional.ofNullable(this.jdbcTreatTimestampNtzAsUtc);
    }

    /**
     * Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
     * 
     */
    @Import(name="jdbcUseSessionTimezone")
    private @Nullable Output<Boolean> jdbcUseSessionTimezone;

    /**
     * @return Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
     * 
     */
    public Optional<Output<Boolean>> jdbcUseSessionTimezone() {
        return Optional.ofNullable(this.jdbcUseSessionTimezone);
    }

    /**
     * Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
     * 
     */
    @Import(name="jsTreatIntegerAsBigint")
    private @Nullable Output<Boolean> jsTreatIntegerAsBigint;

    /**
     * @return Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
     * 
     */
    public Optional<Output<Boolean>> jsTreatIntegerAsBigint() {
        return Optional.ofNullable(this.jsTreatIntegerAsBigint);
    }

    /**
     * Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
     * 
     */
    @Import(name="jsonIndent")
    private @Nullable Output<Integer> jsonIndent;

    /**
     * @return Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
     * 
     */
    public Optional<Output<Integer>> jsonIndent() {
        return Optional.ofNullable(this.jsonIndent);
    }

    /**
     * Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
     * 
     */
    @Import(name="listingAutoFulfillmentReplicationRefreshSchedule")
    private @Nullable Output<String> listingAutoFulfillmentReplicationRefreshSchedule;

    /**
     * @return Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
     * 
     */
    public Optional<Output<String>> listingAutoFulfillmentReplicationRefreshSchedule() {
        return Optional.ofNullable(this.listingAutoFulfillmentReplicationRefreshSchedule);
    }

    /**
     * Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
     * 
     */
    @Import(name="lockTimeout")
    private @Nullable Output<Integer> lockTimeout;

    /**
     * @return Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
     * 
     */
    public Optional<Output<Integer>> lockTimeout() {
        return Optional.ofNullable(this.lockTimeout);
    }

    /**
     * Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
     * 
     */
    @Import(name="logLevel")
    private @Nullable Output<String> logLevel;

    /**
     * @return Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
     * 
     */
    public Optional<Output<String>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    /**
     * Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
     * 
     */
    @Import(name="maxConcurrencyLevel")
    private @Nullable Output<Integer> maxConcurrencyLevel;

    /**
     * @return Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
     * 
     */
    public Optional<Output<Integer>> maxConcurrencyLevel() {
        return Optional.ofNullable(this.maxConcurrencyLevel);
    }

    /**
     * Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check *DATA*EXTENSION*TIME*IN*DAYS docs[MAX](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
     * 
     */
    @Import(name="maxDataExtensionTimeInDays")
    private @Nullable Output<Integer> maxDataExtensionTimeInDays;

    /**
     * @return Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check *DATA*EXTENSION*TIME*IN*DAYS docs[MAX](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
     * 
     */
    public Optional<Output<Integer>> maxDataExtensionTimeInDays() {
        return Optional.ofNullable(this.maxDataExtensionTimeInDays);
    }

    /**
     * Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
     * 
     */
    @Import(name="metricLevel")
    private @Nullable Output<String> metricLevel;

    /**
     * @return Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
     * 
     */
    public Optional<Output<String>> metricLevel() {
        return Optional.ofNullable(this.metricLevel);
    }

    /**
     * Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check *DATA*RETENTION*TIME*IN*DAYS docs[MIN](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
     * 
     */
    @Import(name="minDataRetentionTimeInDays")
    private @Nullable Output<Integer> minDataRetentionTimeInDays;

    /**
     * @return Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check *DATA*RETENTION*TIME*IN*DAYS docs[MIN](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
     * 
     */
    public Optional<Output<Integer>> minDataRetentionTimeInDays() {
        return Optional.ofNullable(this.minDataRetentionTimeInDays);
    }

    /**
     * Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
     * 
     */
    @Import(name="multiStatementCount")
    private @Nullable Output<Integer> multiStatementCount;

    /**
     * @return Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
     * 
     */
    public Optional<Output<Integer>> multiStatementCount() {
        return Optional.ofNullable(this.multiStatementCount);
    }

    /**
     * The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
     * 
     */
    @Import(name="networkPolicy")
    private @Nullable Output<String> networkPolicy;

    /**
     * @return Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
     * 
     */
    public Optional<Output<String>> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }

    /**
     * Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
     * 
     */
    @Import(name="noorderSequenceAsDefault")
    private @Nullable Output<Boolean> noorderSequenceAsDefault;

    /**
     * @return Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
     * 
     */
    public Optional<Output<Boolean>> noorderSequenceAsDefault() {
        return Optional.ofNullable(this.noorderSequenceAsDefault);
    }

    /**
     * Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
     * 
     */
    @Import(name="oauthAddPrivilegedRolesToBlockedList")
    private @Nullable Output<Boolean> oauthAddPrivilegedRolesToBlockedList;

    /**
     * @return Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
     * 
     */
    public Optional<Output<Boolean>> oauthAddPrivilegedRolesToBlockedList() {
        return Optional.ofNullable(this.oauthAddPrivilegedRolesToBlockedList);
    }

    /**
     * Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
     * 
     */
    @Import(name="odbcTreatDecimalAsInt")
    private @Nullable Output<Boolean> odbcTreatDecimalAsInt;

    /**
     * @return Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
     * 
     */
    public Optional<Output<Boolean>> odbcTreatDecimalAsInt() {
        return Optional.ofNullable(this.odbcTreatDecimalAsInt);
    }

    /**
     * Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
     * 
     */
    @Import(name="passwordPolicy")
    private @Nullable Output<String> passwordPolicy;

    /**
     * @return Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
     * 
     */
    public Optional<Output<String>> passwordPolicy() {
        return Optional.ofNullable(this.passwordPolicy);
    }

    /**
     * It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
     * 
     */
    @Import(name="periodicDataRekeying")
    private @Nullable Output<Boolean> periodicDataRekeying;

    /**
     * @return It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
     * 
     */
    public Optional<Output<Boolean>> periodicDataRekeying() {
        return Optional.ofNullable(this.periodicDataRekeying);
    }

    /**
     * Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
     * 
     */
    @Import(name="pipeExecutionPaused")
    private @Nullable Output<Boolean> pipeExecutionPaused;

    /**
     * @return Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
     * 
     */
    public Optional<Output<Boolean>> pipeExecutionPaused() {
        return Optional.ofNullable(this.pipeExecutionPaused);
    }

    /**
     * Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
     * 
     */
    @Import(name="preventUnloadToInlineUrl")
    private @Nullable Output<Boolean> preventUnloadToInlineUrl;

    /**
     * @return Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
     * 
     */
    public Optional<Output<Boolean>> preventUnloadToInlineUrl() {
        return Optional.ofNullable(this.preventUnloadToInlineUrl);
    }

    /**
     * Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
     * 
     */
    @Import(name="preventUnloadToInternalStages")
    private @Nullable Output<Boolean> preventUnloadToInternalStages;

    /**
     * @return Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
     * 
     */
    public Optional<Output<Boolean>> preventUnloadToInternalStages() {
        return Optional.ofNullable(this.preventUnloadToInternalStages);
    }

    /**
     * Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
     * 
     */
    @Import(name="pythonProfilerModules")
    private @Nullable Output<String> pythonProfilerModules;

    /**
     * @return Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
     * 
     */
    public Optional<Output<String>> pythonProfilerModules() {
        return Optional.ofNullable(this.pythonProfilerModules);
    }

    /**
     * Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
     * 
     */
    @Import(name="pythonProfilerTargetStage")
    private @Nullable Output<String> pythonProfilerTargetStage;

    /**
     * @return Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
     * 
     */
    public Optional<Output<String>> pythonProfilerTargetStage() {
        return Optional.ofNullable(this.pythonProfilerTargetStage);
    }

    /**
     * Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
     * 
     */
    @Import(name="queryTag")
    private @Nullable Output<String> queryTag;

    /**
     * @return Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
     * 
     */
    public Optional<Output<String>> queryTag() {
        return Optional.ofNullable(this.queryTag);
    }

    /**
     * Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
     * 
     */
    @Import(name="quotedIdentifiersIgnoreCase")
    private @Nullable Output<Boolean> quotedIdentifiersIgnoreCase;

    /**
     * @return Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
     * 
     */
    public Optional<Output<Boolean>> quotedIdentifiersIgnoreCase() {
        return Optional.ofNullable(this.quotedIdentifiersIgnoreCase);
    }

    /**
     * Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
     * 
     */
    @Import(name="replaceInvalidCharacters")
    private @Nullable Output<Boolean> replaceInvalidCharacters;

    /**
     * @return Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
     * 
     */
    public Optional<Output<Boolean>> replaceInvalidCharacters() {
        return Optional.ofNullable(this.replaceInvalidCharacters);
    }

    /**
     * Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
     * 
     */
    @Import(name="requireStorageIntegrationForStageCreation")
    private @Nullable Output<Boolean> requireStorageIntegrationForStageCreation;

    /**
     * @return Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
     * 
     */
    public Optional<Output<Boolean>> requireStorageIntegrationForStageCreation() {
        return Optional.ofNullable(this.requireStorageIntegrationForStageCreation);
    }

    /**
     * Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
     * 
     */
    @Import(name="requireStorageIntegrationForStageOperation")
    private @Nullable Output<Boolean> requireStorageIntegrationForStageOperation;

    /**
     * @return Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
     * 
     */
    public Optional<Output<Boolean>> requireStorageIntegrationForStageOperation() {
        return Optional.ofNullable(this.requireStorageIntegrationForStageOperation);
    }

    @Import(name="resourceMonitor")
    private @Nullable Output<String> resourceMonitor;

    public Optional<Output<String>> resourceMonitor() {
        return Optional.ofNullable(this.resourceMonitor);
    }

    /**
     * Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
     * 
     */
    @Import(name="rowsPerResultset")
    private @Nullable Output<Integer> rowsPerResultset;

    /**
     * @return Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
     * 
     */
    public Optional<Output<Integer>> rowsPerResultset() {
        return Optional.ofNullable(this.rowsPerResultset);
    }

    /**
     * Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
     * 
     */
    @Import(name="s3StageVpceDnsName")
    private @Nullable Output<String> s3StageVpceDnsName;

    /**
     * @return Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
     * 
     */
    public Optional<Output<String>> s3StageVpceDnsName() {
        return Optional.ofNullable(this.s3StageVpceDnsName);
    }

    /**
     * Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
     * 
     */
    @Import(name="samlIdentityProvider")
    private @Nullable Output<String> samlIdentityProvider;

    /**
     * @return Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
     * 
     */
    public Optional<Output<String>> samlIdentityProvider() {
        return Optional.ofNullable(this.samlIdentityProvider);
    }

    /**
     * Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
     * 
     */
    @Import(name="searchPath")
    private @Nullable Output<String> searchPath;

    /**
     * @return Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
     * 
     */
    public Optional<Output<String>> searchPath() {
        return Optional.ofNullable(this.searchPath);
    }

    /**
     * Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
     * 
     */
    @Import(name="serverlessTaskMaxStatementSize")
    private @Nullable Output<String> serverlessTaskMaxStatementSize;

    /**
     * @return Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
     * 
     */
    public Optional<Output<String>> serverlessTaskMaxStatementSize() {
        return Optional.ofNullable(this.serverlessTaskMaxStatementSize);
    }

    /**
     * Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
     * 
     */
    @Import(name="serverlessTaskMinStatementSize")
    private @Nullable Output<String> serverlessTaskMinStatementSize;

    /**
     * @return Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
     * 
     */
    public Optional<Output<String>> serverlessTaskMinStatementSize() {
        return Optional.ofNullable(this.serverlessTaskMinStatementSize);
    }

    /**
     * Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
     * 
     */
    @Import(name="sessionPolicy")
    private @Nullable Output<String> sessionPolicy;

    /**
     * @return Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
     * 
     */
    public Optional<Output<String>> sessionPolicy() {
        return Optional.ofNullable(this.sessionPolicy);
    }

    /**
     * Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
     * 
     */
    @Import(name="showOutputs")
    private @Nullable Output<List<CurrentOrganizationAccountShowOutputArgs>> showOutputs;

    /**
     * @return Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
     * 
     */
    public Optional<Output<List<CurrentOrganizationAccountShowOutputArgs>>> showOutputs() {
        return Optional.ofNullable(this.showOutputs);
    }

    /**
     * Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
     * 
     */
    @Import(name="simulatedDataSharingConsumer")
    private @Nullable Output<String> simulatedDataSharingConsumer;

    /**
     * @return Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
     * 
     */
    public Optional<Output<String>> simulatedDataSharingConsumer() {
        return Optional.ofNullable(this.simulatedDataSharingConsumer);
    }

    /**
     * This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
     * 
     */
    @Import(name="ssoLoginPage")
    private @Nullable Output<Boolean> ssoLoginPage;

    /**
     * @return This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
     * 
     */
    public Optional<Output<Boolean>> ssoLoginPage() {
        return Optional.ofNullable(this.ssoLoginPage);
    }

    /**
     * Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
     * 
     */
    @Import(name="statementQueuedTimeoutInSeconds")
    private @Nullable Output<Integer> statementQueuedTimeoutInSeconds;

    /**
     * @return Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
     * 
     */
    public Optional<Output<Integer>> statementQueuedTimeoutInSeconds() {
        return Optional.ofNullable(this.statementQueuedTimeoutInSeconds);
    }

    /**
     * Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
     * 
     */
    @Import(name="statementTimeoutInSeconds")
    private @Nullable Output<Integer> statementTimeoutInSeconds;

    /**
     * @return Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
     * 
     */
    public Optional<Output<Integer>> statementTimeoutInSeconds() {
        return Optional.ofNullable(this.statementTimeoutInSeconds);
    }

    /**
     * Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
     * 
     */
    @Import(name="storageSerializationPolicy")
    private @Nullable Output<String> storageSerializationPolicy;

    /**
     * @return Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
     * 
     */
    public Optional<Output<String>> storageSerializationPolicy() {
        return Optional.ofNullable(this.storageSerializationPolicy);
    }

    /**
     * This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
     * 
     */
    @Import(name="strictJsonOutput")
    private @Nullable Output<Boolean> strictJsonOutput;

    /**
     * @return This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
     * 
     */
    public Optional<Output<Boolean>> strictJsonOutput() {
        return Optional.ofNullable(this.strictJsonOutput);
    }

    /**
     * Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
     * 
     */
    @Import(name="suspendTaskAfterNumFailures")
    private @Nullable Output<Integer> suspendTaskAfterNumFailures;

    /**
     * @return Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
     * 
     */
    public Optional<Output<Integer>> suspendTaskAfterNumFailures() {
        return Optional.ofNullable(this.suspendTaskAfterNumFailures);
    }

    /**
     * Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
     * 
     */
    @Import(name="taskAutoRetryAttempts")
    private @Nullable Output<Integer> taskAutoRetryAttempts;

    /**
     * @return Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
     * 
     */
    public Optional<Output<Integer>> taskAutoRetryAttempts() {
        return Optional.ofNullable(this.taskAutoRetryAttempts);
    }

    /**
     * Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
     * 
     */
    @Import(name="timeInputFormat")
    private @Nullable Output<String> timeInputFormat;

    /**
     * @return Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
     * 
     */
    public Optional<Output<String>> timeInputFormat() {
        return Optional.ofNullable(this.timeInputFormat);
    }

    /**
     * Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
     * 
     */
    @Import(name="timeOutputFormat")
    private @Nullable Output<String> timeOutputFormat;

    /**
     * @return Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
     * 
     */
    public Optional<Output<String>> timeOutputFormat() {
        return Optional.ofNullable(this.timeOutputFormat);
    }

    /**
     * Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
     * 
     */
    @Import(name="timestampDayIsAlways24h")
    private @Nullable Output<Boolean> timestampDayIsAlways24h;

    /**
     * @return Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
     * 
     */
    public Optional<Output<Boolean>> timestampDayIsAlways24h() {
        return Optional.ofNullable(this.timestampDayIsAlways24h);
    }

    /**
     * Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
     * 
     */
    @Import(name="timestampInputFormat")
    private @Nullable Output<String> timestampInputFormat;

    /**
     * @return Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
     * 
     */
    public Optional<Output<String>> timestampInputFormat() {
        return Optional.ofNullable(this.timestampInputFormat);
    }

    /**
     * Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
     * 
     */
    @Import(name="timestampLtzOutputFormat")
    private @Nullable Output<String> timestampLtzOutputFormat;

    /**
     * @return Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
     * 
     */
    public Optional<Output<String>> timestampLtzOutputFormat() {
        return Optional.ofNullable(this.timestampLtzOutputFormat);
    }

    /**
     * Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check *NTZ*OUTPUT*FORMAT docs[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
     * 
     */
    @Import(name="timestampNtzOutputFormat")
    private @Nullable Output<String> timestampNtzOutputFormat;

    /**
     * @return Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check *NTZ*OUTPUT*FORMAT docs[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
     * 
     */
    public Optional<Output<String>> timestampNtzOutputFormat() {
        return Optional.ofNullable(this.timestampNtzOutputFormat);
    }

    /**
     * Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
     * 
     */
    @Import(name="timestampOutputFormat")
    private @Nullable Output<String> timestampOutputFormat;

    /**
     * @return Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
     * 
     */
    public Optional<Output<String>> timestampOutputFormat() {
        return Optional.ofNullable(this.timestampOutputFormat);
    }

    /**
     * Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
     * 
     */
    @Import(name="timestampTypeMapping")
    private @Nullable Output<String> timestampTypeMapping;

    /**
     * @return Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
     * 
     */
    public Optional<Output<String>> timestampTypeMapping() {
        return Optional.ofNullable(this.timestampTypeMapping);
    }

    /**
     * Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
     * 
     */
    @Import(name="timestampTzOutputFormat")
    private @Nullable Output<String> timestampTzOutputFormat;

    /**
     * @return Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
     * 
     */
    public Optional<Output<String>> timestampTzOutputFormat() {
        return Optional.ofNullable(this.timestampTzOutputFormat);
    }

    /**
     * Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    /**
     * Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
     * 
     */
    @Import(name="traceLevel")
    private @Nullable Output<String> traceLevel;

    /**
     * @return Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
     * 
     */
    public Optional<Output<String>> traceLevel() {
        return Optional.ofNullable(this.traceLevel);
    }

    /**
     * Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
     * 
     */
    @Import(name="transactionAbortOnError")
    private @Nullable Output<Boolean> transactionAbortOnError;

    /**
     * @return Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
     * 
     */
    public Optional<Output<Boolean>> transactionAbortOnError() {
        return Optional.ofNullable(this.transactionAbortOnError);
    }

    /**
     * Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
     * 
     */
    @Import(name="transactionDefaultIsolationLevel")
    private @Nullable Output<String> transactionDefaultIsolationLevel;

    /**
     * @return Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
     * 
     */
    public Optional<Output<String>> transactionDefaultIsolationLevel() {
        return Optional.ofNullable(this.transactionDefaultIsolationLevel);
    }

    /**
     * Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
     * 
     */
    @Import(name="twoDigitCenturyStart")
    private @Nullable Output<Integer> twoDigitCenturyStart;

    /**
     * @return Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
     * 
     */
    public Optional<Output<Integer>> twoDigitCenturyStart() {
        return Optional.ofNullable(this.twoDigitCenturyStart);
    }

    /**
     * Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
     * 
     */
    @Import(name="unsupportedDdlAction")
    private @Nullable Output<String> unsupportedDdlAction;

    /**
     * @return Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
     * 
     */
    public Optional<Output<String>> unsupportedDdlAction() {
        return Optional.ofNullable(this.unsupportedDdlAction);
    }

    /**
     * Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
     * 
     */
    @Import(name="useCachedResult")
    private @Nullable Output<Boolean> useCachedResult;

    /**
     * @return Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
     * 
     */
    public Optional<Output<Boolean>> useCachedResult() {
        return Optional.ofNullable(this.useCachedResult);
    }

    /**
     * Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
     * 
     */
    @Import(name="userTaskManagedInitialWarehouseSize")
    private @Nullable Output<String> userTaskManagedInitialWarehouseSize;

    /**
     * @return Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
     * 
     */
    public Optional<Output<String>> userTaskManagedInitialWarehouseSize() {
        return Optional.ofNullable(this.userTaskManagedInitialWarehouseSize);
    }

    /**
     * Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
     * 
     */
    @Import(name="userTaskMinimumTriggerIntervalInSeconds")
    private @Nullable Output<Integer> userTaskMinimumTriggerIntervalInSeconds;

    /**
     * @return Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
     * 
     */
    public Optional<Output<Integer>> userTaskMinimumTriggerIntervalInSeconds() {
        return Optional.ofNullable(this.userTaskMinimumTriggerIntervalInSeconds);
    }

    /**
     * Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
     * 
     */
    @Import(name="userTaskTimeoutMs")
    private @Nullable Output<Integer> userTaskTimeoutMs;

    /**
     * @return Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
     * 
     */
    public Optional<Output<Integer>> userTaskTimeoutMs() {
        return Optional.ofNullable(this.userTaskTimeoutMs);
    }

    /**
     * Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
     * 
     */
    @Import(name="weekOfYearPolicy")
    private @Nullable Output<Integer> weekOfYearPolicy;

    /**
     * @return Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
     * 
     */
    public Optional<Output<Integer>> weekOfYearPolicy() {
        return Optional.ofNullable(this.weekOfYearPolicy);
    }

    /**
     * Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
     * 
     */
    @Import(name="weekStart")
    private @Nullable Output<Integer> weekStart;

    /**
     * @return Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
     * 
     */
    public Optional<Output<Integer>> weekStart() {
        return Optional.ofNullable(this.weekStart);
    }

    private CurrentOrganizationAccountState() {}

    private CurrentOrganizationAccountState(CurrentOrganizationAccountState $) {
        this.abortDetachedQuery = $.abortDetachedQuery;
        this.activePythonProfiler = $.activePythonProfiler;
        this.allowClientMfaCaching = $.allowClientMfaCaching;
        this.allowIdToken = $.allowIdToken;
        this.autocommit = $.autocommit;
        this.baseLocationPrefix = $.baseLocationPrefix;
        this.binaryInputFormat = $.binaryInputFormat;
        this.binaryOutputFormat = $.binaryOutputFormat;
        this.catalog = $.catalog;
        this.catalogSync = $.catalogSync;
        this.clientEnableLogInfoStatementParameters = $.clientEnableLogInfoStatementParameters;
        this.clientEncryptionKeySize = $.clientEncryptionKeySize;
        this.clientMemoryLimit = $.clientMemoryLimit;
        this.clientMetadataRequestUseConnectionCtx = $.clientMetadataRequestUseConnectionCtx;
        this.clientMetadataUseSessionDatabase = $.clientMetadataUseSessionDatabase;
        this.clientPrefetchThreads = $.clientPrefetchThreads;
        this.clientResultChunkSize = $.clientResultChunkSize;
        this.clientResultColumnCaseInsensitive = $.clientResultColumnCaseInsensitive;
        this.clientSessionKeepAlive = $.clientSessionKeepAlive;
        this.clientSessionKeepAliveHeartbeatFrequency = $.clientSessionKeepAliveHeartbeatFrequency;
        this.clientTimestampTypeMapping = $.clientTimestampTypeMapping;
        this.comment = $.comment;
        this.cortexEnabledCrossRegion = $.cortexEnabledCrossRegion;
        this.cortexModelsAllowlist = $.cortexModelsAllowlist;
        this.csvTimestampFormat = $.csvTimestampFormat;
        this.dataRetentionTimeInDays = $.dataRetentionTimeInDays;
        this.dateInputFormat = $.dateInputFormat;
        this.dateOutputFormat = $.dateOutputFormat;
        this.defaultDdlCollation = $.defaultDdlCollation;
        this.defaultNotebookComputePoolCpu = $.defaultNotebookComputePoolCpu;
        this.defaultNotebookComputePoolGpu = $.defaultNotebookComputePoolGpu;
        this.defaultNullOrdering = $.defaultNullOrdering;
        this.defaultStreamlitNotebookWarehouse = $.defaultStreamlitNotebookWarehouse;
        this.disableUiDownloadButton = $.disableUiDownloadButton;
        this.disableUserPrivilegeGrants = $.disableUserPrivilegeGrants;
        this.enableAutomaticSensitiveDataClassificationLog = $.enableAutomaticSensitiveDataClassificationLog;
        this.enableEgressCostOptimizer = $.enableEgressCostOptimizer;
        this.enableIdentifierFirstLogin = $.enableIdentifierFirstLogin;
        this.enableInternalStagesPrivatelink = $.enableInternalStagesPrivatelink;
        this.enableTriSecretAndRekeyOptOutForImageRepository = $.enableTriSecretAndRekeyOptOutForImageRepository;
        this.enableTriSecretAndRekeyOptOutForSpcsBlockStorage = $.enableTriSecretAndRekeyOptOutForSpcsBlockStorage;
        this.enableUnhandledExceptionsReporting = $.enableUnhandledExceptionsReporting;
        this.enableUnloadPhysicalTypeOptimization = $.enableUnloadPhysicalTypeOptimization;
        this.enableUnredactedQuerySyntaxError = $.enableUnredactedQuerySyntaxError;
        this.enableUnredactedSecureObjectError = $.enableUnredactedSecureObjectError;
        this.enforceNetworkRulesForInternalStages = $.enforceNetworkRulesForInternalStages;
        this.errorOnNondeterministicMerge = $.errorOnNondeterministicMerge;
        this.errorOnNondeterministicUpdate = $.errorOnNondeterministicUpdate;
        this.eventTable = $.eventTable;
        this.externalOauthAddPrivilegedRolesToBlockedList = $.externalOauthAddPrivilegedRolesToBlockedList;
        this.externalVolume = $.externalVolume;
        this.geographyOutputFormat = $.geographyOutputFormat;
        this.geometryOutputFormat = $.geometryOutputFormat;
        this.hybridTableLockTimeout = $.hybridTableLockTimeout;
        this.initialReplicationSizeLimitInTb = $.initialReplicationSizeLimitInTb;
        this.jdbcTreatDecimalAsInt = $.jdbcTreatDecimalAsInt;
        this.jdbcTreatTimestampNtzAsUtc = $.jdbcTreatTimestampNtzAsUtc;
        this.jdbcUseSessionTimezone = $.jdbcUseSessionTimezone;
        this.jsTreatIntegerAsBigint = $.jsTreatIntegerAsBigint;
        this.jsonIndent = $.jsonIndent;
        this.listingAutoFulfillmentReplicationRefreshSchedule = $.listingAutoFulfillmentReplicationRefreshSchedule;
        this.lockTimeout = $.lockTimeout;
        this.logLevel = $.logLevel;
        this.maxConcurrencyLevel = $.maxConcurrencyLevel;
        this.maxDataExtensionTimeInDays = $.maxDataExtensionTimeInDays;
        this.metricLevel = $.metricLevel;
        this.minDataRetentionTimeInDays = $.minDataRetentionTimeInDays;
        this.multiStatementCount = $.multiStatementCount;
        this.name = $.name;
        this.networkPolicy = $.networkPolicy;
        this.noorderSequenceAsDefault = $.noorderSequenceAsDefault;
        this.oauthAddPrivilegedRolesToBlockedList = $.oauthAddPrivilegedRolesToBlockedList;
        this.odbcTreatDecimalAsInt = $.odbcTreatDecimalAsInt;
        this.passwordPolicy = $.passwordPolicy;
        this.periodicDataRekeying = $.periodicDataRekeying;
        this.pipeExecutionPaused = $.pipeExecutionPaused;
        this.preventUnloadToInlineUrl = $.preventUnloadToInlineUrl;
        this.preventUnloadToInternalStages = $.preventUnloadToInternalStages;
        this.pythonProfilerModules = $.pythonProfilerModules;
        this.pythonProfilerTargetStage = $.pythonProfilerTargetStage;
        this.queryTag = $.queryTag;
        this.quotedIdentifiersIgnoreCase = $.quotedIdentifiersIgnoreCase;
        this.replaceInvalidCharacters = $.replaceInvalidCharacters;
        this.requireStorageIntegrationForStageCreation = $.requireStorageIntegrationForStageCreation;
        this.requireStorageIntegrationForStageOperation = $.requireStorageIntegrationForStageOperation;
        this.resourceMonitor = $.resourceMonitor;
        this.rowsPerResultset = $.rowsPerResultset;
        this.s3StageVpceDnsName = $.s3StageVpceDnsName;
        this.samlIdentityProvider = $.samlIdentityProvider;
        this.searchPath = $.searchPath;
        this.serverlessTaskMaxStatementSize = $.serverlessTaskMaxStatementSize;
        this.serverlessTaskMinStatementSize = $.serverlessTaskMinStatementSize;
        this.sessionPolicy = $.sessionPolicy;
        this.showOutputs = $.showOutputs;
        this.simulatedDataSharingConsumer = $.simulatedDataSharingConsumer;
        this.ssoLoginPage = $.ssoLoginPage;
        this.statementQueuedTimeoutInSeconds = $.statementQueuedTimeoutInSeconds;
        this.statementTimeoutInSeconds = $.statementTimeoutInSeconds;
        this.storageSerializationPolicy = $.storageSerializationPolicy;
        this.strictJsonOutput = $.strictJsonOutput;
        this.suspendTaskAfterNumFailures = $.suspendTaskAfterNumFailures;
        this.taskAutoRetryAttempts = $.taskAutoRetryAttempts;
        this.timeInputFormat = $.timeInputFormat;
        this.timeOutputFormat = $.timeOutputFormat;
        this.timestampDayIsAlways24h = $.timestampDayIsAlways24h;
        this.timestampInputFormat = $.timestampInputFormat;
        this.timestampLtzOutputFormat = $.timestampLtzOutputFormat;
        this.timestampNtzOutputFormat = $.timestampNtzOutputFormat;
        this.timestampOutputFormat = $.timestampOutputFormat;
        this.timestampTypeMapping = $.timestampTypeMapping;
        this.timestampTzOutputFormat = $.timestampTzOutputFormat;
        this.timezone = $.timezone;
        this.traceLevel = $.traceLevel;
        this.transactionAbortOnError = $.transactionAbortOnError;
        this.transactionDefaultIsolationLevel = $.transactionDefaultIsolationLevel;
        this.twoDigitCenturyStart = $.twoDigitCenturyStart;
        this.unsupportedDdlAction = $.unsupportedDdlAction;
        this.useCachedResult = $.useCachedResult;
        this.userTaskManagedInitialWarehouseSize = $.userTaskManagedInitialWarehouseSize;
        this.userTaskMinimumTriggerIntervalInSeconds = $.userTaskMinimumTriggerIntervalInSeconds;
        this.userTaskTimeoutMs = $.userTaskTimeoutMs;
        this.weekOfYearPolicy = $.weekOfYearPolicy;
        this.weekStart = $.weekStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CurrentOrganizationAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CurrentOrganizationAccountState $;

        public Builder() {
            $ = new CurrentOrganizationAccountState();
        }

        public Builder(CurrentOrganizationAccountState defaults) {
            $ = new CurrentOrganizationAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param abortDetachedQuery Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
         * 
         * @return builder
         * 
         */
        public Builder abortDetachedQuery(@Nullable Output<Boolean> abortDetachedQuery) {
            $.abortDetachedQuery = abortDetachedQuery;
            return this;
        }

        /**
         * @param abortDetachedQuery Specifies the action that Snowflake performs for in-progress queries if connectivity is lost due to abrupt termination of a session (e.g. network outage, browser termination, service interruption). For more information, check [ABORT*DETACHED*QUERY docs](https://docs.snowflake.com/en/sql-reference/parameters#abort-detached-query).
         * 
         * @return builder
         * 
         */
        public Builder abortDetachedQuery(Boolean abortDetachedQuery) {
            return abortDetachedQuery(Output.of(abortDetachedQuery));
        }

        /**
         * @param activePythonProfiler Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
         * 
         * @return builder
         * 
         */
        public Builder activePythonProfiler(@Nullable Output<String> activePythonProfiler) {
            $.activePythonProfiler = activePythonProfiler;
            return this;
        }

        /**
         * @param activePythonProfiler Sets the profiler to use for the session when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). Valid values are (case-insensitive): `LINE` | `MEMORY`. For more information, check [ACTIVE*PYTHON*PROFILER docs](https://docs.snowflake.com/en/sql-reference/parameters#active-python-profiler).
         * 
         * @return builder
         * 
         */
        public Builder activePythonProfiler(String activePythonProfiler) {
            return activePythonProfiler(Output.of(activePythonProfiler));
        }

        /**
         * @param allowClientMfaCaching Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
         * 
         * @return builder
         * 
         */
        public Builder allowClientMfaCaching(@Nullable Output<Boolean> allowClientMfaCaching) {
            $.allowClientMfaCaching = allowClientMfaCaching;
            return this;
        }

        /**
         * @param allowClientMfaCaching Specifies whether an MFA token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to respond to an MFA prompt at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using MFA token caching to minimize the number of prompts during authentication — optional.](https://docs.snowflake.com/en/user-guide/security-mfa.html#label-mfa-token-caching) For more information, check [ALLOW*CLIENT*MFA_CACHING docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-client-mfa-caching).
         * 
         * @return builder
         * 
         */
        public Builder allowClientMfaCaching(Boolean allowClientMfaCaching) {
            return allowClientMfaCaching(Output.of(allowClientMfaCaching));
        }

        /**
         * @param allowIdToken Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
         * 
         * @return builder
         * 
         */
        public Builder allowIdToken(@Nullable Output<Boolean> allowIdToken) {
            $.allowIdToken = allowIdToken;
            return this;
        }

        /**
         * @param allowIdToken Specifies whether a connection token can be saved in the client-side operating system keystore to promote continuous, secure connectivity without users needing to enter login credentials at the start of each connection attempt to Snowflake. For details and the list of supported Snowflake-provided clients, see [Using connection caching to minimize the number of prompts for authentication — optional.](https://docs.snowflake.com/en/user-guide/admin-security-fed-auth-use.html#label-browser-based-sso-connection-caching) For more information, check [ALLOW*ID*TOKEN docs](https://docs.snowflake.com/en/sql-reference/parameters#allow-id-token).
         * 
         * @return builder
         * 
         */
        public Builder allowIdToken(Boolean allowIdToken) {
            return allowIdToken(Output.of(allowIdToken));
        }

        /**
         * @param autocommit Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
         * 
         * @return builder
         * 
         */
        public Builder autocommit(@Nullable Output<Boolean> autocommit) {
            $.autocommit = autocommit;
            return this;
        }

        /**
         * @param autocommit Specifies whether autocommit is enabled for the session. Autocommit determines whether a DML statement, when executed without an active transaction, is automatically committed after the statement successfully completes. For more information, see [Transactions](https://docs.snowflake.com/en/sql-reference/transactions). For more information, check [AUTOCOMMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#autocommit).
         * 
         * @return builder
         * 
         */
        public Builder autocommit(Boolean autocommit) {
            return autocommit(Output.of(autocommit));
        }

        /**
         * @param baseLocationPrefix Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
         * 
         * @return builder
         * 
         */
        public Builder baseLocationPrefix(@Nullable Output<String> baseLocationPrefix) {
            $.baseLocationPrefix = baseLocationPrefix;
            return this;
        }

        /**
         * @param baseLocationPrefix Specifies a prefix for Snowflake to use in the write path for Snowflake-managed Apache Iceberg™ tables. For more information, see [data and metadata directories for Iceberg tables](https://docs.snowflake.com/en/user-guide/tables-iceberg-storage.html#label-tables-iceberg-configure-external-volume-base-location). For more information, check [BASE*LOCATION*PREFIX docs](https://docs.snowflake.com/en/sql-reference/parameters#base-location-prefix).
         * 
         * @return builder
         * 
         */
        public Builder baseLocationPrefix(String baseLocationPrefix) {
            return baseLocationPrefix(Output.of(baseLocationPrefix));
        }

        /**
         * @param binaryInputFormat The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
         * 
         * @return builder
         * 
         */
        public Builder binaryInputFormat(@Nullable Output<String> binaryInputFormat) {
            $.binaryInputFormat = binaryInputFormat;
            return this;
        }

        /**
         * @param binaryInputFormat The format of VARCHAR values passed as input to VARCHAR-to-BINARY conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64` | `UTF8`. For more information, check [BINARY*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-input-format).
         * 
         * @return builder
         * 
         */
        public Builder binaryInputFormat(String binaryInputFormat) {
            return binaryInputFormat(Output.of(binaryInputFormat));
        }

        /**
         * @param binaryOutputFormat The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
         * 
         * @return builder
         * 
         */
        public Builder binaryOutputFormat(@Nullable Output<String> binaryOutputFormat) {
            $.binaryOutputFormat = binaryOutputFormat;
            return this;
        }

        /**
         * @param binaryOutputFormat The format for VARCHAR values returned as output by BINARY-to-VARCHAR conversion functions. For more information, see [Binary input and output](https://docs.snowflake.com/en/sql-reference/binary-input-output). Valid values are (case-insensitive): `HEX` | `BASE64`. For more information, check [BINARY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#binary-output-format).
         * 
         * @return builder
         * 
         */
        public Builder binaryOutputFormat(String binaryOutputFormat) {
            return binaryOutputFormat(Output.of(binaryOutputFormat));
        }

        /**
         * @param catalog Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
         * 
         * @return builder
         * 
         */
        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        /**
         * @param catalog Specifies the catalog for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-catalog-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog).
         * 
         * @return builder
         * 
         */
        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        /**
         * @param catalogSync Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
         * 
         * @return builder
         * 
         */
        public Builder catalogSync(@Nullable Output<String> catalogSync) {
            $.catalogSync = catalogSync;
            return this;
        }

        /**
         * @param catalogSync Specifies the name of your catalog integration for [Snowflake Open Catalog](https://other-docs.snowflake.com/en/opencatalog/overview). Snowflake syncs tables that use the specified catalog integration with your Snowflake Open Catalog account. For more information, see [Sync a Snowflake-managed table with Snowflake Open Catalog](https://docs.snowflake.com/en/user-guide/tables-iceberg-open-catalog-sync). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [CATALOG_SYNC docs](https://docs.snowflake.com/en/sql-reference/parameters#catalog-sync).
         * 
         * @return builder
         * 
         */
        public Builder catalogSync(String catalogSync) {
            return catalogSync(Output.of(catalogSync));
        }

        /**
         * @param clientEnableLogInfoStatementParameters Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
         * 
         * @return builder
         * 
         */
        public Builder clientEnableLogInfoStatementParameters(@Nullable Output<Boolean> clientEnableLogInfoStatementParameters) {
            $.clientEnableLogInfoStatementParameters = clientEnableLogInfoStatementParameters;
            return this;
        }

        /**
         * @param clientEnableLogInfoStatementParameters Enables users to log the data values bound to [PreparedStatements](https://docs.snowflake.com/en/developer-guide/jdbc/jdbc-api.html#label-jdbc-api-preparedstatement) ([more details](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters)). For more information, check [CLIENT*ENABLE*LOG*INFO*STATEMENT_PARAMETERS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-enable-log-info-statement-parameters).
         * 
         * @return builder
         * 
         */
        public Builder clientEnableLogInfoStatementParameters(Boolean clientEnableLogInfoStatementParameters) {
            return clientEnableLogInfoStatementParameters(Output.of(clientEnableLogInfoStatementParameters));
        }

        /**
         * @param clientEncryptionKeySize Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check *ENCRYPTION*KEY*SIZE docs[CLIENT](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
         * 
         * @return builder
         * 
         */
        public Builder clientEncryptionKeySize(@Nullable Output<Integer> clientEncryptionKeySize) {
            $.clientEncryptionKeySize = clientEncryptionKeySize;
            return this;
        }

        /**
         * @param clientEncryptionKeySize Specifies the AES encryption key size, in bits, used by Snowflake to encrypt/decrypt files stored on internal stages (for loading/unloading data) when you use the SNOWFLAKE*FULL encryption type. For more information, check *ENCRYPTION*KEY*SIZE docs[CLIENT](https://docs.snowflake.com/en/sql-reference/parameters#client-encryption-key-size).
         * 
         * @return builder
         * 
         */
        public Builder clientEncryptionKeySize(Integer clientEncryptionKeySize) {
            return clientEncryptionKeySize(Output.of(clientEncryptionKeySize));
        }

        /**
         * @param clientMemoryLimit Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
         * 
         * @return builder
         * 
         */
        public Builder clientMemoryLimit(@Nullable Output<Integer> clientMemoryLimit) {
            $.clientMemoryLimit = clientMemoryLimit;
            return this;
        }

        /**
         * @param clientMemoryLimit Parameter that specifies the maximum amount of memory the JDBC driver or ODBC driver should use for the result set from queries (in MB). For more information, check [CLIENT*MEMORY*LIMIT docs](https://docs.snowflake.com/en/sql-reference/parameters#client-memory-limit).
         * 
         * @return builder
         * 
         */
        public Builder clientMemoryLimit(Integer clientMemoryLimit) {
            return clientMemoryLimit(Output.of(clientMemoryLimit));
        }

        /**
         * @param clientMetadataRequestUseConnectionCtx For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
         * 
         * @return builder
         * 
         */
        public Builder clientMetadataRequestUseConnectionCtx(@Nullable Output<Boolean> clientMetadataRequestUseConnectionCtx) {
            $.clientMetadataRequestUseConnectionCtx = clientMetadataRequestUseConnectionCtx;
            return this;
        }

        /**
         * @param clientMetadataRequestUseConnectionCtx For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases/schemas to the current database/schema. The narrower search typically returns fewer rows and executes more quickly. For more information, check [CLIENT*METADATA*REQUEST*USE*CONNECTION_CTX docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-request-use-connection-ctx).
         * 
         * @return builder
         * 
         */
        public Builder clientMetadataRequestUseConnectionCtx(Boolean clientMetadataRequestUseConnectionCtx) {
            return clientMetadataRequestUseConnectionCtx(Output.of(clientMetadataRequestUseConnectionCtx));
        }

        /**
         * @param clientMetadataUseSessionDatabase For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
         * 
         * @return builder
         * 
         */
        public Builder clientMetadataUseSessionDatabase(@Nullable Output<Boolean> clientMetadataUseSessionDatabase) {
            $.clientMetadataUseSessionDatabase = clientMetadataUseSessionDatabase;
            return this;
        }

        /**
         * @param clientMetadataUseSessionDatabase For specific ODBC functions and JDBC methods, this parameter can change the default search scope from all databases to the current database. The narrower search typically returns fewer rows and executes more quickly ([more details on the usage](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database)). For more information, check [CLIENT*METADATA*USE*SESSION*DATABASE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-metadata-use-session-database).
         * 
         * @return builder
         * 
         */
        public Builder clientMetadataUseSessionDatabase(Boolean clientMetadataUseSessionDatabase) {
            return clientMetadataUseSessionDatabase(Output.of(clientMetadataUseSessionDatabase));
        }

        /**
         * @param clientPrefetchThreads Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
         * 
         * @return builder
         * 
         */
        public Builder clientPrefetchThreads(@Nullable Output<Integer> clientPrefetchThreads) {
            $.clientPrefetchThreads = clientPrefetchThreads;
            return this;
        }

        /**
         * @param clientPrefetchThreads Parameter that specifies the number of threads used by the client to pre-fetch large result sets. The driver will attempt to honor the parameter value, but defines the minimum and maximum values (depending on your system’s resources) to improve performance. For more information, check [CLIENT*PREFETCH*THREADS docs](https://docs.snowflake.com/en/sql-reference/parameters#client-prefetch-threads).
         * 
         * @return builder
         * 
         */
        public Builder clientPrefetchThreads(Integer clientPrefetchThreads) {
            return clientPrefetchThreads(Output.of(clientPrefetchThreads));
        }

        /**
         * @param clientResultChunkSize Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
         * 
         * @return builder
         * 
         */
        public Builder clientResultChunkSize(@Nullable Output<Integer> clientResultChunkSize) {
            $.clientResultChunkSize = clientResultChunkSize;
            return this;
        }

        /**
         * @param clientResultChunkSize Parameter that specifies the maximum size of each set (or chunk) of query results to download (in MB). The JDBC driver downloads query results in chunks. For more information, check [CLIENT*RESULT*CHUNK_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-chunk-size).
         * 
         * @return builder
         * 
         */
        public Builder clientResultChunkSize(Integer clientResultChunkSize) {
            return clientResultChunkSize(Output.of(clientResultChunkSize));
        }

        /**
         * @param clientResultColumnCaseInsensitive Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
         * 
         * @return builder
         * 
         */
        public Builder clientResultColumnCaseInsensitive(@Nullable Output<Boolean> clientResultColumnCaseInsensitive) {
            $.clientResultColumnCaseInsensitive = clientResultColumnCaseInsensitive;
            return this;
        }

        /**
         * @param clientResultColumnCaseInsensitive Parameter that indicates whether to match column name case-insensitively in ResultSet.get* methods in JDBC. For more information, check [CLIENT*RESULT*COLUMN*CASE*INSENSITIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-result-column-case-insensitive).
         * 
         * @return builder
         * 
         */
        public Builder clientResultColumnCaseInsensitive(Boolean clientResultColumnCaseInsensitive) {
            return clientResultColumnCaseInsensitive(Output.of(clientResultColumnCaseInsensitive));
        }

        /**
         * @param clientSessionKeepAlive Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
         * 
         * @return builder
         * 
         */
        public Builder clientSessionKeepAlive(@Nullable Output<Boolean> clientSessionKeepAlive) {
            $.clientSessionKeepAlive = clientSessionKeepAlive;
            return this;
        }

        /**
         * @param clientSessionKeepAlive Parameter that indicates whether to force a user to log in again after a period of inactivity in the session. For more information, check [CLIENT*SESSION*KEEP_ALIVE docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive).
         * 
         * @return builder
         * 
         */
        public Builder clientSessionKeepAlive(Boolean clientSessionKeepAlive) {
            return clientSessionKeepAlive(Output.of(clientSessionKeepAlive));
        }

        /**
         * @param clientSessionKeepAliveHeartbeatFrequency Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
         * 
         * @return builder
         * 
         */
        public Builder clientSessionKeepAliveHeartbeatFrequency(@Nullable Output<Integer> clientSessionKeepAliveHeartbeatFrequency) {
            $.clientSessionKeepAliveHeartbeatFrequency = clientSessionKeepAliveHeartbeatFrequency;
            return this;
        }

        /**
         * @param clientSessionKeepAliveHeartbeatFrequency Number of seconds in-between client attempts to update the token for the session. For more information, check [CLIENT*SESSION*KEEP*ALIVE*HEARTBEAT_FREQUENCY docs](https://docs.snowflake.com/en/sql-reference/parameters#client-session-keep-alive-heartbeat-frequency).
         * 
         * @return builder
         * 
         */
        public Builder clientSessionKeepAliveHeartbeatFrequency(Integer clientSessionKeepAliveHeartbeatFrequency) {
            return clientSessionKeepAliveHeartbeatFrequency(Output.of(clientSessionKeepAliveHeartbeatFrequency));
        }

        /**
         * @param clientTimestampTypeMapping Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
         * 
         * @return builder
         * 
         */
        public Builder clientTimestampTypeMapping(@Nullable Output<String> clientTimestampTypeMapping) {
            $.clientTimestampTypeMapping = clientTimestampTypeMapping;
            return this;
        }

        /**
         * @param clientTimestampTypeMapping Specifies the [TIMESTAMP_* variation](https://docs.snowflake.com/en/sql-reference/data-types-datetime.html#label-datatypes-timestamp-variations) to use when binding timestamp variables for JDBC or ODBC applications that use the bind API to load data. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ`. For more information, check [CLIENT*TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#client-timestamp-type-mapping).
         * 
         * @return builder
         * 
         */
        public Builder clientTimestampTypeMapping(String clientTimestampTypeMapping) {
            return clientTimestampTypeMapping(Output.of(clientTimestampTypeMapping));
        }

        /**
         * @param comment Specifies a comment for the organization account.
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Specifies a comment for the organization account.
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param cortexEnabledCrossRegion Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
         * 
         * @return builder
         * 
         */
        public Builder cortexEnabledCrossRegion(@Nullable Output<String> cortexEnabledCrossRegion) {
            $.cortexEnabledCrossRegion = cortexEnabledCrossRegion;
            return this;
        }

        /**
         * @param cortexEnabledCrossRegion Specifies the regions where an inference request may be processed in case the request cannot be processed in the region where request is originally placed. Specifying DISABLED disables cross-region inferencing. For examples and details, see [Cross-region inference](https://docs.snowflake.com/en/user-guide/snowflake-cortex/cross-region-inference). For more information, check [CORTEX*ENABLED*CROSS_REGION docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-enabled-cross-region).
         * 
         * @return builder
         * 
         */
        public Builder cortexEnabledCrossRegion(String cortexEnabledCrossRegion) {
            return cortexEnabledCrossRegion(Output.of(cortexEnabledCrossRegion));
        }

        /**
         * @param cortexModelsAllowlist Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
         * 
         * @return builder
         * 
         */
        public Builder cortexModelsAllowlist(@Nullable Output<String> cortexModelsAllowlist) {
            $.cortexModelsAllowlist = cortexModelsAllowlist;
            return this;
        }

        /**
         * @param cortexModelsAllowlist Specifies the models that users in the account can access. Use this parameter to allowlist models for all users in the account. If you need to provide specific users with access beyond what you’ve specified in the allowlist, use role-based access control instead. For more information, see [Model allowlist](https://docs.snowflake.com/en/user-guide/snowflake-cortex/aisql.html#label-cortex-llm-allowlist). For more information, check [CORTEX*MODELS*ALLOWLIST docs](https://docs.snowflake.com/en/sql-reference/parameters#cortex-models-allowlist).
         * 
         * @return builder
         * 
         */
        public Builder cortexModelsAllowlist(String cortexModelsAllowlist) {
            return cortexModelsAllowlist(Output.of(cortexModelsAllowlist));
        }

        /**
         * @param csvTimestampFormat Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, *TZ*OUTPUT_FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and *NTZ*OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check *TIMESTAMP*FORMAT docs[CSV](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
         * 
         * @return builder
         * 
         */
        public Builder csvTimestampFormat(@Nullable Output<String> csvTimestampFormat) {
            $.csvTimestampFormat = csvTimestampFormat;
            return this;
        }

        /**
         * @param csvTimestampFormat Specifies the format for TIMESTAMP values in CSV files downloaded from Snowsight. If this parameter is not set, [TIMESTAMP*LTZ*OUTPUT_FORMAT](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ltz-output-format) will be used for TIMESTAMP*LTZ values, *TZ*OUTPUT_FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-tz-output-format) will be used for TIMESTAMP*TZ and *NTZ*OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-ntz-output-format) for TIMESTAMP*NTZ values. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output) or [Download your query results](https://docs.snowflake.com/en/user-guide/ui-snowsight-query.html#label-snowsight-download-query-results). For more information, check *TIMESTAMP*FORMAT docs[CSV](https://docs.snowflake.com/en/sql-reference/parameters#csv-timestamp-format).
         * 
         * @return builder
         * 
         */
        public Builder csvTimestampFormat(String csvTimestampFormat) {
            return csvTimestampFormat(Output.of(csvTimestampFormat));
        }

        /**
         * @param dataRetentionTimeInDays Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding &amp; using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionTimeInDays(@Nullable Output<Integer> dataRetentionTimeInDays) {
            $.dataRetentionTimeInDays = dataRetentionTimeInDays;
            return this;
        }

        /**
         * @param dataRetentionTimeInDays Number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on the object. A value of 0 effectively disables Time Travel for the specified database, schema, or table. For more information, see [Understanding &amp; using Time Travel](https://docs.snowflake.com/en/user-guide/data-time-travel). For more information, check [DATA*RETENTION*TIME*IN*DAYS docs](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionTimeInDays(Integer dataRetentionTimeInDays) {
            return dataRetentionTimeInDays(Output.of(dataRetentionTimeInDays));
        }

        /**
         * @param dateInputFormat Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
         * 
         * @return builder
         * 
         */
        public Builder dateInputFormat(@Nullable Output<String> dateInputFormat) {
            $.dateInputFormat = dateInputFormat;
            return this;
        }

        /**
         * @param dateInputFormat Specifies the input format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-input-format).
         * 
         * @return builder
         * 
         */
        public Builder dateInputFormat(String dateInputFormat) {
            return dateInputFormat(Output.of(dateInputFormat));
        }

        /**
         * @param dateOutputFormat Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
         * 
         * @return builder
         * 
         */
        public Builder dateOutputFormat(@Nullable Output<String> dateOutputFormat) {
            $.dateOutputFormat = dateOutputFormat;
            return this;
        }

        /**
         * @param dateOutputFormat Specifies the display format for the DATE data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [DATE*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#date-output-format).
         * 
         * @return builder
         * 
         */
        public Builder dateOutputFormat(String dateOutputFormat) {
            return dateOutputFormat(Output.of(dateOutputFormat));
        }

        /**
         * @param defaultDdlCollation Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
         * 
         * @return builder
         * 
         */
        public Builder defaultDdlCollation(@Nullable Output<String> defaultDdlCollation) {
            $.defaultDdlCollation = defaultDdlCollation;
            return this;
        }

        /**
         * @param defaultDdlCollation Sets the default collation used for the following DDL operations: [CREATE TABLE](https://docs.snowflake.com/en/sql-reference/sql/create-table), [ALTER TABLE](https://docs.snowflake.com/en/sql-reference/sql/alter-table) … ADD COLUMN. Setting this parameter forces all subsequently-created columns in the affected objects (table, schema, database, or account) to have the specified collation as the default, unless the collation for the column is explicitly defined in the DDL. For more information, check [DEFAULT*DDL*COLLATION docs](https://docs.snowflake.com/en/sql-reference/parameters#default-ddl-collation).
         * 
         * @return builder
         * 
         */
        public Builder defaultDdlCollation(String defaultDdlCollation) {
            return defaultDdlCollation(Output.of(defaultDdlCollation));
        }

        /**
         * @param defaultNotebookComputePoolCpu Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
         * 
         * @return builder
         * 
         */
        public Builder defaultNotebookComputePoolCpu(@Nullable Output<String> defaultNotebookComputePoolCpu) {
            $.defaultNotebookComputePoolCpu = defaultNotebookComputePoolCpu;
            return this;
        }

        /**
         * @param defaultNotebookComputePoolCpu Sets the preferred CPU compute pool used for [Notebooks on CPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*CPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-cpu).
         * 
         * @return builder
         * 
         */
        public Builder defaultNotebookComputePoolCpu(String defaultNotebookComputePoolCpu) {
            return defaultNotebookComputePoolCpu(Output.of(defaultNotebookComputePoolCpu));
        }

        /**
         * @param defaultNotebookComputePoolGpu Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
         * 
         * @return builder
         * 
         */
        public Builder defaultNotebookComputePoolGpu(@Nullable Output<String> defaultNotebookComputePoolGpu) {
            $.defaultNotebookComputePoolGpu = defaultNotebookComputePoolGpu;
            return this;
        }

        /**
         * @param defaultNotebookComputePoolGpu Sets the preferred GPU compute pool used for [Notebooks on GPU Container Runtime](https://docs.snowflake.com/en/developer-guide/snowflake-ml/notebooks-on-spcs). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*NOTEBOOK*COMPUTE*POOL*GPU docs](https://docs.snowflake.com/en/sql-reference/parameters#default-notebook-compute-pool-gpu).
         * 
         * @return builder
         * 
         */
        public Builder defaultNotebookComputePoolGpu(String defaultNotebookComputePoolGpu) {
            return defaultNotebookComputePoolGpu(Output.of(defaultNotebookComputePoolGpu));
        }

        /**
         * @param defaultNullOrdering Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
         * 
         * @return builder
         * 
         */
        public Builder defaultNullOrdering(@Nullable Output<String> defaultNullOrdering) {
            $.defaultNullOrdering = defaultNullOrdering;
            return this;
        }

        /**
         * @param defaultNullOrdering Specifies the default ordering of NULL values in a result set ([more details](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering)). Valid values are (case-insensitive): `FIRST` | `LAST`. For more information, check [DEFAULT*NULL*ORDERING docs](https://docs.snowflake.com/en/sql-reference/parameters#default-null-ordering).
         * 
         * @return builder
         * 
         */
        public Builder defaultNullOrdering(String defaultNullOrdering) {
            return defaultNullOrdering(Output.of(defaultNullOrdering));
        }

        /**
         * @param defaultStreamlitNotebookWarehouse Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
         * 
         * @return builder
         * 
         */
        public Builder defaultStreamlitNotebookWarehouse(@Nullable Output<String> defaultStreamlitNotebookWarehouse) {
            $.defaultStreamlitNotebookWarehouse = defaultStreamlitNotebookWarehouse;
            return this;
        }

        /**
         * @param defaultStreamlitNotebookWarehouse Specifies the name of the default warehouse to use when creating a notebook. Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [DEFAULT*STREAMLIT*NOTEBOOK_WAREHOUSE docs](https://docs.snowflake.com/en/sql-reference/parameters#default-streamlit-notebook-warehouse).
         * 
         * @return builder
         * 
         */
        public Builder defaultStreamlitNotebookWarehouse(String defaultStreamlitNotebookWarehouse) {
            return defaultStreamlitNotebookWarehouse(Output.of(defaultStreamlitNotebookWarehouse));
        }

        /**
         * @param disableUiDownloadButton Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
         * 
         * @return builder
         * 
         */
        public Builder disableUiDownloadButton(@Nullable Output<Boolean> disableUiDownloadButton) {
            $.disableUiDownloadButton = disableUiDownloadButton;
            return this;
        }

        /**
         * @param disableUiDownloadButton Controls whether users in an account see a button to download data in Snowsight or the Classic Console, such as a table returned from running a query in a worksheet. If the button to download is hidden in Snowsight or the Classic Console, users can still download or export data using [third-party software](https://docs.snowflake.com/en/user-guide/ecosystem). For more information, check [DISABLE*UI*DOWNLOAD_BUTTON docs](https://docs.snowflake.com/en/sql-reference/parameters#disable-ui-download-button).
         * 
         * @return builder
         * 
         */
        public Builder disableUiDownloadButton(Boolean disableUiDownloadButton) {
            return disableUiDownloadButton(Output.of(disableUiDownloadButton));
        }

        /**
         * @param disableUserPrivilegeGrants Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \n\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check *USER*PRIVILEGE*GRANTS docs[DISABLE](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
         * 
         * @return builder
         * 
         */
        public Builder disableUserPrivilegeGrants(@Nullable Output<Boolean> disableUserPrivilegeGrants) {
            $.disableUserPrivilegeGrants = disableUserPrivilegeGrants;
            return this;
        }

        /**
         * @param disableUserPrivilegeGrants Controls whether users in an account can grant privileges directly to other users. Disabling user privilege grants (that is, setting DISABLE*USER*PRIVILEGE*GRANTS to TRUE) does not affect existing grants to users. Existing grants to users continue to confer privileges to those users. For more information, see [GRANT \n\n … TO USER](https://docs.snowflake.com/en/sql-reference/sql/grant-privilege-user). For more information, check *USER*PRIVILEGE*GRANTS docs[DISABLE](https://docs.snowflake.com/en/sql-reference/parameters#disable-user-privilege-grants).
         * 
         * @return builder
         * 
         */
        public Builder disableUserPrivilegeGrants(Boolean disableUserPrivilegeGrants) {
            return disableUserPrivilegeGrants(Output.of(disableUserPrivilegeGrants));
        }

        /**
         * @param enableAutomaticSensitiveDataClassificationLog Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
         * 
         * @return builder
         * 
         */
        public Builder enableAutomaticSensitiveDataClassificationLog(@Nullable Output<Boolean> enableAutomaticSensitiveDataClassificationLog) {
            $.enableAutomaticSensitiveDataClassificationLog = enableAutomaticSensitiveDataClassificationLog;
            return this;
        }

        /**
         * @param enableAutomaticSensitiveDataClassificationLog Controls whether events from [automatic sensitive data classification](https://docs.snowflake.com/en/user-guide/classify-auto) are logged in the user event table. For more information, check [ENABLE*AUTOMATIC*SENSITIVE*DATA*CLASSIFICATION_LOG docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-automatic-sensitive-data-classification-log).
         * 
         * @return builder
         * 
         */
        public Builder enableAutomaticSensitiveDataClassificationLog(Boolean enableAutomaticSensitiveDataClassificationLog) {
            return enableAutomaticSensitiveDataClassificationLog(Output.of(enableAutomaticSensitiveDataClassificationLog));
        }

        /**
         * @param enableEgressCostOptimizer Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
         * 
         * @return builder
         * 
         */
        public Builder enableEgressCostOptimizer(@Nullable Output<Boolean> enableEgressCostOptimizer) {
            $.enableEgressCostOptimizer = enableEgressCostOptimizer;
            return this;
        }

        /**
         * @param enableEgressCostOptimizer Enables or disables the Listing Cross-cloud auto-fulfillment Egress cost optimizer. For more information, check [ENABLE*EGRESS*COST_OPTIMIZER docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-egress-cost-optimizer).
         * 
         * @return builder
         * 
         */
        public Builder enableEgressCostOptimizer(Boolean enableEgressCostOptimizer) {
            return enableEgressCostOptimizer(Output.of(enableEgressCostOptimizer));
        }

        /**
         * @param enableIdentifierFirstLogin Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
         * 
         * @return builder
         * 
         */
        public Builder enableIdentifierFirstLogin(@Nullable Output<Boolean> enableIdentifierFirstLogin) {
            $.enableIdentifierFirstLogin = enableIdentifierFirstLogin;
            return this;
        }

        /**
         * @param enableIdentifierFirstLogin Determines the login flow for users. When enabled, Snowflake prompts users for their username or email address before presenting authentication methods. For details, see [Identifier-first login](https://docs.snowflake.com/en/user-guide/identifier-first-login). For more information, check [ENABLE*IDENTIFIER*FIRST_LOGIN docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-identifier-first-login).
         * 
         * @return builder
         * 
         */
        public Builder enableIdentifierFirstLogin(Boolean enableIdentifierFirstLogin) {
            return enableIdentifierFirstLogin(Output.of(enableIdentifierFirstLogin));
        }

        /**
         * @param enableInternalStagesPrivatelink Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
         * 
         * @return builder
         * 
         */
        public Builder enableInternalStagesPrivatelink(@Nullable Output<Boolean> enableInternalStagesPrivatelink) {
            $.enableInternalStagesPrivatelink = enableInternalStagesPrivatelink;
            return this;
        }

        /**
         * @param enableInternalStagesPrivatelink Specifies whether the [SYSTEM$GET*PRIVATELINK*CONFIG](https://docs.snowflake.com/en/sql-reference/functions/system_get_privatelink_config) function returns the private-internal-stages key in the query result. The corresponding value in the query result is used during the configuration process for private connectivity to internal stages. For more information, check [ENABLE*INTERNAL*STAGES_PRIVATELINK docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-internal-stages-privatelink).
         * 
         * @return builder
         * 
         */
        public Builder enableInternalStagesPrivatelink(Boolean enableInternalStagesPrivatelink) {
            return enableInternalStagesPrivatelink(Output.of(enableInternalStagesPrivatelink));
        }

        /**
         * @param enableTriSecretAndRekeyOptOutForImageRepository Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
         * 
         * @return builder
         * 
         */
        public Builder enableTriSecretAndRekeyOptOutForImageRepository(@Nullable Output<Boolean> enableTriSecretAndRekeyOptOutForImageRepository) {
            $.enableTriSecretAndRekeyOptOutForImageRepository = enableTriSecretAndRekeyOptOutForImageRepository;
            return this;
        }

        /**
         * @param enableTriSecretAndRekeyOptOutForImageRepository Specifies choice for the [image repository](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/working-with-registry-repository.html#label-registry-and-repository-image-repository) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*IMAGE_REPOSITORY docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-image-repository).
         * 
         * @return builder
         * 
         */
        public Builder enableTriSecretAndRekeyOptOutForImageRepository(Boolean enableTriSecretAndRekeyOptOutForImageRepository) {
            return enableTriSecretAndRekeyOptOutForImageRepository(Output.of(enableTriSecretAndRekeyOptOutForImageRepository));
        }

        /**
         * @param enableTriSecretAndRekeyOptOutForSpcsBlockStorage Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
         * 
         * @return builder
         * 
         */
        public Builder enableTriSecretAndRekeyOptOutForSpcsBlockStorage(@Nullable Output<Boolean> enableTriSecretAndRekeyOptOutForSpcsBlockStorage) {
            $.enableTriSecretAndRekeyOptOutForSpcsBlockStorage = enableTriSecretAndRekeyOptOutForSpcsBlockStorage;
            return this;
        }

        /**
         * @param enableTriSecretAndRekeyOptOutForSpcsBlockStorage Specifies the choice for the [Snowpark Container Services block storage volume](https://docs.snowflake.com/en/developer-guide/snowpark-container-services/block-storage-volume) to opt out of Tri-Secret Secure and [Periodic rekeying](https://docs.snowflake.com/en/user-guide/security-encryption-manage.html#label-periodic-rekeying). For more information, check [ENABLE*TRI*SECRET*AND*REKEY*OPT*OUT*FOR*SPCS*BLOCK*STORAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-tri-secret-and-rekey-opt-out-for-spcs-block-storage).
         * 
         * @return builder
         * 
         */
        public Builder enableTriSecretAndRekeyOptOutForSpcsBlockStorage(Boolean enableTriSecretAndRekeyOptOutForSpcsBlockStorage) {
            return enableTriSecretAndRekeyOptOutForSpcsBlockStorage(Output.of(enableTriSecretAndRekeyOptOutForSpcsBlockStorage));
        }

        /**
         * @param enableUnhandledExceptionsReporting Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
         * 
         * @return builder
         * 
         */
        public Builder enableUnhandledExceptionsReporting(@Nullable Output<Boolean> enableUnhandledExceptionsReporting) {
            $.enableUnhandledExceptionsReporting = enableUnhandledExceptionsReporting;
            return this;
        }

        /**
         * @param enableUnhandledExceptionsReporting Specifies whether Snowflake may capture – in an event table – log messages or trace event data for unhandled exceptions in procedure or UDF handler code. For more information, see [Capturing messages from unhandled exceptions](https://docs.snowflake.com/en/developer-guide/logging-tracing/unhandled-exception-messages). For more information, check [ENABLE*UNHANDLED*EXCEPTIONS_REPORTING docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unhandled-exceptions-reporting).
         * 
         * @return builder
         * 
         */
        public Builder enableUnhandledExceptionsReporting(Boolean enableUnhandledExceptionsReporting) {
            return enableUnhandledExceptionsReporting(Output.of(enableUnhandledExceptionsReporting));
        }

        /**
         * @param enableUnloadPhysicalTypeOptimization Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
         * 
         * @return builder
         * 
         */
        public Builder enableUnloadPhysicalTypeOptimization(@Nullable Output<Boolean> enableUnloadPhysicalTypeOptimization) {
            $.enableUnloadPhysicalTypeOptimization = enableUnloadPhysicalTypeOptimization;
            return this;
        }

        /**
         * @param enableUnloadPhysicalTypeOptimization Specifies whether to set the schema for unloaded Parquet files based on the logical column data types (i.e. the types in the unload SQL query or source table) or on the unloaded column values (i.e. the smallest data types and precision that support the values in the output columns of the unload SQL statement or source table). For more information, check [ENABLE*UNLOAD*PHYSICAL*TYPE*OPTIMIZATION docs](https://docs.snowflake.com/en/sql-reference/parameters#enable-unload-physical-type-optimization).
         * 
         * @return builder
         * 
         */
        public Builder enableUnloadPhysicalTypeOptimization(Boolean enableUnloadPhysicalTypeOptimization) {
            return enableUnloadPhysicalTypeOptimization(Output.of(enableUnloadPhysicalTypeOptimization));
        }

        /**
         * @param enableUnredactedQuerySyntaxError Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check *UNREDACTED*QUERY*SYNTAX*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
         * 
         * @return builder
         * 
         */
        public Builder enableUnredactedQuerySyntaxError(@Nullable Output<Boolean> enableUnredactedQuerySyntaxError) {
            $.enableUnredactedQuerySyntaxError = enableUnredactedQuerySyntaxError;
            return this;
        }

        /**
         * @param enableUnredactedQuerySyntaxError Controls whether query text is redacted if a SQL query fails due to a syntax or parsing error. If FALSE, the content of a failed query is redacted in the views, pages, and functions that provide a query history. Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*QUERY*SYNTAX*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the query text, not the user who executed the query (if those are different users). For more information, check *UNREDACTED*QUERY*SYNTAX*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-query-syntax-error).
         * 
         * @return builder
         * 
         */
        public Builder enableUnredactedQuerySyntaxError(Boolean enableUnredactedQuerySyntaxError) {
            return enableUnredactedQuerySyntaxError(Output.of(enableUnredactedQuerySyntaxError));
        }

        /**
         * @param enableUnredactedSecureObjectError Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check *UNREDACTED*SECURE*OBJECT*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
         * 
         * @return builder
         * 
         */
        public Builder enableUnredactedSecureObjectError(@Nullable Output<Boolean> enableUnredactedSecureObjectError) {
            $.enableUnredactedSecureObjectError = enableUnredactedSecureObjectError;
            return this;
        }

        /**
         * @param enableUnredactedSecureObjectError Controls whether error messages related to secure objects are redacted in metadata. For more information, see [Secure objects: Redaction of information in error messages](https://docs.snowflake.com/en/release-notes/bcr-bundles/un-bundled/bcr-1858). Only users with a role that is granted or inherits the AUDIT privilege can set the ENABLE*UNREDACTED*SECURE*OBJECT*ERROR parameter. When using the ALTER USER command to set the parameter to TRUE for a particular user, modify the user that you want to see the redacted error messages in metadata, not the user who caused the error. For more information, check *UNREDACTED*SECURE*OBJECT*ERROR docs[ENABLE](https://docs.snowflake.com/en/sql-reference/parameters#enable-unredacted-secure-object-error).
         * 
         * @return builder
         * 
         */
        public Builder enableUnredactedSecureObjectError(Boolean enableUnredactedSecureObjectError) {
            return enableUnredactedSecureObjectError(Output.of(enableUnredactedSecureObjectError));
        }

        /**
         * @param enforceNetworkRulesForInternalStages Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
         * 
         * @return builder
         * 
         */
        public Builder enforceNetworkRulesForInternalStages(@Nullable Output<Boolean> enforceNetworkRulesForInternalStages) {
            $.enforceNetworkRulesForInternalStages = enforceNetworkRulesForInternalStages;
            return this;
        }

        /**
         * @param enforceNetworkRulesForInternalStages Specifies whether a network policy that uses network rules can restrict access to AWS internal stages. This parameter has no effect on network policies that do not use network rules. This account-level parameter affects both account-level and user-level network policies. For details about using network policies and network rules to restrict access to AWS internal stages, including the use of this parameter, see [Protecting internal stages on AWS](https://docs.snowflake.com/en/user-guide/network-policies.html#label-network-policies-rules-stages). For more information, check [ENFORCE*NETWORK*RULES*FOR*INTERNAL_STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#enforce-network-rules-for-internal-stages).
         * 
         * @return builder
         * 
         */
        public Builder enforceNetworkRulesForInternalStages(Boolean enforceNetworkRulesForInternalStages) {
            return enforceNetworkRulesForInternalStages(Output.of(enforceNetworkRulesForInternalStages));
        }

        /**
         * @param errorOnNondeterministicMerge Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
         * 
         * @return builder
         * 
         */
        public Builder errorOnNondeterministicMerge(@Nullable Output<Boolean> errorOnNondeterministicMerge) {
            $.errorOnNondeterministicMerge = errorOnNondeterministicMerge;
            return this;
        }

        /**
         * @param errorOnNondeterministicMerge Specifies whether to return an error when the [MERGE](https://docs.snowflake.com/en/sql-reference/sql/merge) command is used to update or delete a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_MERGE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-merge).
         * 
         * @return builder
         * 
         */
        public Builder errorOnNondeterministicMerge(Boolean errorOnNondeterministicMerge) {
            return errorOnNondeterministicMerge(Output.of(errorOnNondeterministicMerge));
        }

        /**
         * @param errorOnNondeterministicUpdate Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
         * 
         * @return builder
         * 
         */
        public Builder errorOnNondeterministicUpdate(@Nullable Output<Boolean> errorOnNondeterministicUpdate) {
            $.errorOnNondeterministicUpdate = errorOnNondeterministicUpdate;
            return this;
        }

        /**
         * @param errorOnNondeterministicUpdate Specifies whether to return an error when the [UPDATE](https://docs.snowflake.com/en/sql-reference/sql/update) command is used to update a target row that joins multiple source rows and the system cannot determine the action to perform on the target row. For more information, check [ERROR*ON*NONDETERMINISTIC_UPDATE docs](https://docs.snowflake.com/en/sql-reference/parameters#error-on-nondeterministic-update).
         * 
         * @return builder
         * 
         */
        public Builder errorOnNondeterministicUpdate(Boolean errorOnNondeterministicUpdate) {
            return errorOnNondeterministicUpdate(Output.of(errorOnNondeterministicUpdate));
        }

        /**
         * @param eventTable Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
         * 
         * @return builder
         * 
         */
        public Builder eventTable(@Nullable Output<String> eventTable) {
            $.eventTable = eventTable;
            return this;
        }

        /**
         * @param eventTable Specifies the name of the event table for logging messages from stored procedures and UDFs contained by the object with which the event table is associated. Associating an event table with a database is available in [Enterprise Edition or higher](https://docs.snowflake.com/en/user-guide/intro-editions). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EVENT_TABLE docs](https://docs.snowflake.com/en/sql-reference/parameters#event-table).
         * 
         * @return builder
         * 
         */
        public Builder eventTable(String eventTable) {
            return eventTable(Output.of(eventTable));
        }

        /**
         * @param externalOauthAddPrivilegedRolesToBlockedList Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
         * 
         * @return builder
         * 
         */
        public Builder externalOauthAddPrivilegedRolesToBlockedList(@Nullable Output<Boolean> externalOauthAddPrivilegedRolesToBlockedList) {
            $.externalOauthAddPrivilegedRolesToBlockedList = externalOauthAddPrivilegedRolesToBlockedList;
            return this;
        }

        /**
         * @param externalOauthAddPrivilegedRolesToBlockedList Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from the External OAuth authorization server. For more information, check [EXTERNAL*OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED_LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#external-oauth-add-privileged-roles-to-blocked-list).
         * 
         * @return builder
         * 
         */
        public Builder externalOauthAddPrivilegedRolesToBlockedList(Boolean externalOauthAddPrivilegedRolesToBlockedList) {
            return externalOauthAddPrivilegedRolesToBlockedList(Output.of(externalOauthAddPrivilegedRolesToBlockedList));
        }

        /**
         * @param externalVolume Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
         * 
         * @return builder
         * 
         */
        public Builder externalVolume(@Nullable Output<String> externalVolume) {
            $.externalVolume = externalVolume;
            return this;
        }

        /**
         * @param externalVolume Specifies the external volume for Apache Iceberg™ tables. For more information, see the [Iceberg table documentation](https://docs.snowflake.com/en/user-guide/tables-iceberg.html#label-tables-iceberg-external-volume-def). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [EXTERNAL_VOLUME docs](https://docs.snowflake.com/en/sql-reference/parameters#external-volume).
         * 
         * @return builder
         * 
         */
        public Builder externalVolume(String externalVolume) {
            return externalVolume(Output.of(externalVolume));
        }

        /**
         * @param geographyOutputFormat Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
         * 
         * @return builder
         * 
         */
        public Builder geographyOutputFormat(@Nullable Output<String> geographyOutputFormat) {
            $.geographyOutputFormat = geographyOutputFormat;
            return this;
        }

        /**
         * @param geographyOutputFormat Display format for [GEOGRAPHY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geography). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOGRAPHY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geography-output-format).
         * 
         * @return builder
         * 
         */
        public Builder geographyOutputFormat(String geographyOutputFormat) {
            return geographyOutputFormat(Output.of(geographyOutputFormat));
        }

        /**
         * @param geometryOutputFormat Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
         * 
         * @return builder
         * 
         */
        public Builder geometryOutputFormat(@Nullable Output<String> geometryOutputFormat) {
            $.geometryOutputFormat = geometryOutputFormat;
            return this;
        }

        /**
         * @param geometryOutputFormat Display format for [GEOMETRY values](https://docs.snowflake.com/en/sql-reference/data-types-geospatial.html#label-data-types-geometry). Valid values are (case-insensitive): `GeoJSON` | `WKT` | `WKB` | `EWKT` | `EWKB`. For more information, check [GEOMETRY*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#geometry-output-format).
         * 
         * @return builder
         * 
         */
        public Builder geometryOutputFormat(String geometryOutputFormat) {
            return geometryOutputFormat(Output.of(geometryOutputFormat));
        }

        /**
         * @param hybridTableLockTimeout Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
         * 
         * @return builder
         * 
         */
        public Builder hybridTableLockTimeout(@Nullable Output<Integer> hybridTableLockTimeout) {
            $.hybridTableLockTimeout = hybridTableLockTimeout;
            return this;
        }

        /**
         * @param hybridTableLockTimeout Number of seconds to wait while trying to acquire row-level locks on a hybrid table, before timing out and aborting the statement. For more information, check [HYBRID*TABLE*LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#hybrid-table-lock-timeout).
         * 
         * @return builder
         * 
         */
        public Builder hybridTableLockTimeout(Integer hybridTableLockTimeout) {
            return hybridTableLockTimeout(Output.of(hybridTableLockTimeout));
        }

        /**
         * @param initialReplicationSizeLimitInTb Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
         * 
         * @return builder
         * 
         */
        public Builder initialReplicationSizeLimitInTb(@Nullable Output<String> initialReplicationSizeLimitInTb) {
            $.initialReplicationSizeLimitInTb = initialReplicationSizeLimitInTb;
            return this;
        }

        /**
         * @param initialReplicationSizeLimitInTb Sets the maximum estimated size limit for the initial replication of a primary database to a secondary database (in TB). Set this parameter on any account that stores a secondary database. This size limit helps prevent accounts from accidentally incurring large database replication charges. To remove the size limit, set the value to 0.0. It is required to pass numbers with scale of at least 1 (e.g. 20.5, 32.25, 33.333, etc.). For more information, check [INITIAL*REPLICATION*SIZE*LIMIT*IN_TB docs](https://docs.snowflake.com/en/sql-reference/parameters#initial-replication-size-limit-in-tb).
         * 
         * @return builder
         * 
         */
        public Builder initialReplicationSizeLimitInTb(String initialReplicationSizeLimitInTb) {
            return initialReplicationSizeLimitInTb(Output.of(initialReplicationSizeLimitInTb));
        }

        /**
         * @param jdbcTreatDecimalAsInt Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
         * 
         * @return builder
         * 
         */
        public Builder jdbcTreatDecimalAsInt(@Nullable Output<Boolean> jdbcTreatDecimalAsInt) {
            $.jdbcTreatDecimalAsInt = jdbcTreatDecimalAsInt;
            return this;
        }

        /**
         * @param jdbcTreatDecimalAsInt Specifies how JDBC processes columns that have a scale of zero (0). For more information, check [JDBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-decimal-as-int).
         * 
         * @return builder
         * 
         */
        public Builder jdbcTreatDecimalAsInt(Boolean jdbcTreatDecimalAsInt) {
            return jdbcTreatDecimalAsInt(Output.of(jdbcTreatDecimalAsInt));
        }

        /**
         * @param jdbcTreatTimestampNtzAsUtc Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check *TREAT*TIMESTAMP*NTZ*AS*UTC docs[JDBC](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
         * 
         * @return builder
         * 
         */
        public Builder jdbcTreatTimestampNtzAsUtc(@Nullable Output<Boolean> jdbcTreatTimestampNtzAsUtc) {
            $.jdbcTreatTimestampNtzAsUtc = jdbcTreatTimestampNtzAsUtc;
            return this;
        }

        /**
         * @param jdbcTreatTimestampNtzAsUtc Specifies how JDBC processes TIMESTAMP*NTZ values ([more details](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc)). For more information, check *TREAT*TIMESTAMP*NTZ*AS*UTC docs[JDBC](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-treat-timestamp-ntz-as-utc).
         * 
         * @return builder
         * 
         */
        public Builder jdbcTreatTimestampNtzAsUtc(Boolean jdbcTreatTimestampNtzAsUtc) {
            return jdbcTreatTimestampNtzAsUtc(Output.of(jdbcTreatTimestampNtzAsUtc));
        }

        /**
         * @param jdbcUseSessionTimezone Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
         * 
         * @return builder
         * 
         */
        public Builder jdbcUseSessionTimezone(@Nullable Output<Boolean> jdbcUseSessionTimezone) {
            $.jdbcUseSessionTimezone = jdbcUseSessionTimezone;
            return this;
        }

        /**
         * @param jdbcUseSessionTimezone Specifies whether the JDBC Driver uses the time zone of the JVM or the time zone of the session (specified by the [TIMEZONE](https://docs.snowflake.com/en/sql-reference/parameters#label-timezone) parameter) for the getDate(), getTime(), and getTimestamp() methods of the ResultSet class. For more information, check [JDBC*USE*SESSION_TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#jdbc-use-session-timezone).
         * 
         * @return builder
         * 
         */
        public Builder jdbcUseSessionTimezone(Boolean jdbcUseSessionTimezone) {
            return jdbcUseSessionTimezone(Output.of(jdbcUseSessionTimezone));
        }

        /**
         * @param jsTreatIntegerAsBigint Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
         * 
         * @return builder
         * 
         */
        public Builder jsTreatIntegerAsBigint(@Nullable Output<Boolean> jsTreatIntegerAsBigint) {
            $.jsTreatIntegerAsBigint = jsTreatIntegerAsBigint;
            return this;
        }

        /**
         * @param jsTreatIntegerAsBigint Specifies how the Snowflake Node.js Driver processes numeric columns that have a scale of zero (0), for example INTEGER or NUMBER(p, 0). For more information, check [JS*TREAT*INTEGER*AS*BIGINT docs](https://docs.snowflake.com/en/sql-reference/parameters#js-treat-integer-as-bigint).
         * 
         * @return builder
         * 
         */
        public Builder jsTreatIntegerAsBigint(Boolean jsTreatIntegerAsBigint) {
            return jsTreatIntegerAsBigint(Output.of(jsTreatIntegerAsBigint));
        }

        /**
         * @param jsonIndent Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
         * 
         * @return builder
         * 
         */
        public Builder jsonIndent(@Nullable Output<Integer> jsonIndent) {
            $.jsonIndent = jsonIndent;
            return this;
        }

        /**
         * @param jsonIndent Specifies the number of blank spaces to indent each new element in JSON output in the session. Also specifies whether to insert newline characters after each element. For more information, check [JSON_INDENT docs](https://docs.snowflake.com/en/sql-reference/parameters#json-indent).
         * 
         * @return builder
         * 
         */
        public Builder jsonIndent(Integer jsonIndent) {
            return jsonIndent(Output.of(jsonIndent));
        }

        /**
         * @param listingAutoFulfillmentReplicationRefreshSchedule Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
         * 
         * @return builder
         * 
         */
        public Builder listingAutoFulfillmentReplicationRefreshSchedule(@Nullable Output<String> listingAutoFulfillmentReplicationRefreshSchedule) {
            $.listingAutoFulfillmentReplicationRefreshSchedule = listingAutoFulfillmentReplicationRefreshSchedule;
            return this;
        }

        /**
         * @param listingAutoFulfillmentReplicationRefreshSchedule Sets the time interval used to refresh the application package based data products to other regions. For more information, check [LISTING*AUTO*FULFILLMENT*REPLICATION*REFRESH_SCHEDULE docs](https://docs.snowflake.com/en/sql-reference/parameters#listing-auto-fulfillment-replication-refresh-schedule).
         * 
         * @return builder
         * 
         */
        public Builder listingAutoFulfillmentReplicationRefreshSchedule(String listingAutoFulfillmentReplicationRefreshSchedule) {
            return listingAutoFulfillmentReplicationRefreshSchedule(Output.of(listingAutoFulfillmentReplicationRefreshSchedule));
        }

        /**
         * @param lockTimeout Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
         * 
         * @return builder
         * 
         */
        public Builder lockTimeout(@Nullable Output<Integer> lockTimeout) {
            $.lockTimeout = lockTimeout;
            return this;
        }

        /**
         * @param lockTimeout Number of seconds to wait while trying to lock a resource, before timing out and aborting the statement. For more information, check [LOCK_TIMEOUT docs](https://docs.snowflake.com/en/sql-reference/parameters#lock-timeout).
         * 
         * @return builder
         * 
         */
        public Builder lockTimeout(Integer lockTimeout) {
            return lockTimeout(Output.of(lockTimeout));
        }

        /**
         * @param logLevel Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel Specifies the severity level of messages that should be ingested and made available in the active event table. Messages at the specified level (and at more severe levels) are ingested. For more information about log levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `TRACE` | `DEBUG` | `INFO` | `WARN` | `ERROR` | `FATAL` | `OFF`. For more information, check [LOG_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#log-level).
         * 
         * @return builder
         * 
         */
        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        /**
         * @param maxConcurrencyLevel Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
         * 
         * @return builder
         * 
         */
        public Builder maxConcurrencyLevel(@Nullable Output<Integer> maxConcurrencyLevel) {
            $.maxConcurrencyLevel = maxConcurrencyLevel;
            return this;
        }

        /**
         * @param maxConcurrencyLevel Specifies the concurrency level for SQL statements (that is, queries and DML) executed by a warehouse ([more details](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level)). For more information, check [MAX*CONCURRENCY*LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#max-concurrency-level).
         * 
         * @return builder
         * 
         */
        public Builder maxConcurrencyLevel(Integer maxConcurrencyLevel) {
            return maxConcurrencyLevel(Output.of(maxConcurrencyLevel));
        }

        /**
         * @param maxDataExtensionTimeInDays Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check *DATA*EXTENSION*TIME*IN*DAYS docs[MAX](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder maxDataExtensionTimeInDays(@Nullable Output<Integer> maxDataExtensionTimeInDays) {
            $.maxDataExtensionTimeInDays = maxDataExtensionTimeInDays;
            return this;
        }

        /**
         * @param maxDataExtensionTimeInDays Maximum number of days Snowflake can extend the data retention period for tables to prevent streams on the tables from becoming stale. By default, if the [DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#data-retention-time-in-days) setting for a source table is less than 14 days, and a stream has not been consumed, Snowflake temporarily extends this period to the stream’s offset, up to a maximum of 14 days, regardless of the [Snowflake Edition](https://docs.snowflake.com/en/user-guide/intro-editions) for your account. The MAX*DATA*EXTENSION*TIME*IN*DAYS parameter enables you to limit this automatic extension period to control storage costs for data retention or for compliance reasons. For more information, check *DATA*EXTENSION*TIME*IN*DAYS docs[MAX](https://docs.snowflake.com/en/sql-reference/parameters#max-data-extension-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder maxDataExtensionTimeInDays(Integer maxDataExtensionTimeInDays) {
            return maxDataExtensionTimeInDays(Output.of(maxDataExtensionTimeInDays));
        }

        /**
         * @param metricLevel Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
         * 
         * @return builder
         * 
         */
        public Builder metricLevel(@Nullable Output<String> metricLevel) {
            $.metricLevel = metricLevel;
            return this;
        }

        /**
         * @param metricLevel Controls how metrics data is ingested into the event table. For more information about metric levels, see [Setting levels for logging, metrics, and tracing](https://docs.snowflake.com/en/developer-guide/logging-tracing/telemetry-levels). Valid values are (case-insensitive): `ALL` | `NONE`. For more information, check [METRIC_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#metric-level).
         * 
         * @return builder
         * 
         */
        public Builder metricLevel(String metricLevel) {
            return metricLevel(Output.of(metricLevel));
        }

        /**
         * @param minDataRetentionTimeInDays Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check *DATA*RETENTION*TIME*IN*DAYS docs[MIN](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder minDataRetentionTimeInDays(@Nullable Output<Integer> minDataRetentionTimeInDays) {
            $.minDataRetentionTimeInDays = minDataRetentionTimeInDays;
            return this;
        }

        /**
         * @param minDataRetentionTimeInDays Minimum number of days for which Snowflake retains historical data for performing Time Travel actions (SELECT, CLONE, UNDROP) on an object. If a minimum number of days for data retention is set on an account, the data retention period for an object is determined by MAX([DATA*RETENTION*TIME*IN*DAYS](https://docs.snowflake.com/en/sql-reference/parameters#label-data-retention-time-in-days), MIN*DATA*RETENTION*TIME*IN*DAYS). For more information, check *DATA*RETENTION*TIME*IN*DAYS docs[MIN](https://docs.snowflake.com/en/sql-reference/parameters#min-data-retention-time-in-days).
         * 
         * @return builder
         * 
         */
        public Builder minDataRetentionTimeInDays(Integer minDataRetentionTimeInDays) {
            return minDataRetentionTimeInDays(Output.of(minDataRetentionTimeInDays));
        }

        /**
         * @param multiStatementCount Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
         * 
         * @return builder
         * 
         */
        public Builder multiStatementCount(@Nullable Output<Integer> multiStatementCount) {
            $.multiStatementCount = multiStatementCount;
            return this;
        }

        /**
         * @param multiStatementCount Number of statements to execute when using the multi-statement capability. For more information, check [MULTI*STATEMENT*COUNT docs](https://docs.snowflake.com/en/sql-reference/parameters#multi-statement-count).
         * 
         * @return builder
         * 
         */
        public Builder multiStatementCount(Integer multiStatementCount) {
            return multiStatementCount(Output.of(multiStatementCount));
        }

        /**
         * @param name The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The identifier (i.e. name) for the organization account within currently used organization. The field name is validated during import and create operations to ensure that it matches the current organization account name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkPolicy Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(@Nullable Output<String> networkPolicy) {
            $.networkPolicy = networkPolicy;
            return this;
        }

        /**
         * @param networkPolicy Specifies the network policy to enforce for your account. Network policies enable restricting access to your account based on users’ IP address. For more details, see [Controlling network traffic with network policies](https://docs.snowflake.com/en/user-guide/network-policies). Due to technical limitations (read more here), avoid using the following characters: `|`, `.`, `&#34;`. For more information, check [NETWORK_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#network-policy).
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(String networkPolicy) {
            return networkPolicy(Output.of(networkPolicy));
        }

        /**
         * @param noorderSequenceAsDefault Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
         * 
         * @return builder
         * 
         */
        public Builder noorderSequenceAsDefault(@Nullable Output<Boolean> noorderSequenceAsDefault) {
            $.noorderSequenceAsDefault = noorderSequenceAsDefault;
            return this;
        }

        /**
         * @param noorderSequenceAsDefault Specifies whether the ORDER or NOORDER property is set by default when you create a new sequence or add a new table column. The ORDER and NOORDER properties determine whether or not the values are generated for the sequence or auto-incremented column in [increasing or decreasing order](https://docs.snowflake.com/en/user-guide/querying-sequences.html#label-querying-sequences-increasing-values). For more information, check [NOORDER*SEQUENCE*AS_DEFAULT docs](https://docs.snowflake.com/en/sql-reference/parameters#noorder-sequence-as-default).
         * 
         * @return builder
         * 
         */
        public Builder noorderSequenceAsDefault(Boolean noorderSequenceAsDefault) {
            return noorderSequenceAsDefault(Output.of(noorderSequenceAsDefault));
        }

        /**
         * @param oauthAddPrivilegedRolesToBlockedList Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
         * 
         * @return builder
         * 
         */
        public Builder oauthAddPrivilegedRolesToBlockedList(@Nullable Output<Boolean> oauthAddPrivilegedRolesToBlockedList) {
            $.oauthAddPrivilegedRolesToBlockedList = oauthAddPrivilegedRolesToBlockedList;
            return this;
        }

        /**
         * @param oauthAddPrivilegedRolesToBlockedList Determines whether the ACCOUNTADMIN, ORGADMIN, GLOBALORGADMIN, and SECURITYADMIN roles can be used as the primary role when creating a Snowflake session based on the access token from Snowflake’s authorization server. For more information, check [OAUTH*ADD*PRIVILEGED*ROLES*TO*BLOCKED*LIST docs](https://docs.snowflake.com/en/sql-reference/parameters#oauth-add-privileged-roles-to-blocked-list).
         * 
         * @return builder
         * 
         */
        public Builder oauthAddPrivilegedRolesToBlockedList(Boolean oauthAddPrivilegedRolesToBlockedList) {
            return oauthAddPrivilegedRolesToBlockedList(Output.of(oauthAddPrivilegedRolesToBlockedList));
        }

        /**
         * @param odbcTreatDecimalAsInt Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
         * 
         * @return builder
         * 
         */
        public Builder odbcTreatDecimalAsInt(@Nullable Output<Boolean> odbcTreatDecimalAsInt) {
            $.odbcTreatDecimalAsInt = odbcTreatDecimalAsInt;
            return this;
        }

        /**
         * @param odbcTreatDecimalAsInt Specifies how ODBC processes columns that have a scale of zero (0). For more information, check [ODBC*TREAT*DECIMAL*AS*INT docs](https://docs.snowflake.com/en/sql-reference/parameters#odbc-treat-decimal-as-int).
         * 
         * @return builder
         * 
         */
        public Builder odbcTreatDecimalAsInt(Boolean odbcTreatDecimalAsInt) {
            return odbcTreatDecimalAsInt(Output.of(odbcTreatDecimalAsInt));
        }

        /**
         * @param passwordPolicy Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicy(@Nullable Output<String> passwordPolicy) {
            $.passwordPolicy = passwordPolicy;
            return this;
        }

        /**
         * @param passwordPolicy Specifies [password policy](https://docs.snowflake.com/en/user-guide/password-authentication#label-using-password-policies) for the current account. For more information about this resource, see docs.
         * 
         * @return builder
         * 
         */
        public Builder passwordPolicy(String passwordPolicy) {
            return passwordPolicy(Output.of(passwordPolicy));
        }

        /**
         * @param periodicDataRekeying It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
         * 
         * @return builder
         * 
         */
        public Builder periodicDataRekeying(@Nullable Output<Boolean> periodicDataRekeying) {
            $.periodicDataRekeying = periodicDataRekeying;
            return this;
        }

        /**
         * @param periodicDataRekeying It enables/disables re-encryption of table data with new keys on a yearly basis to provide additional levels of data protection ([more details](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying)). For more information, check [PERIODIC*DATA*REKEYING docs](https://docs.snowflake.com/en/sql-reference/parameters#periodic-data-rekeying).
         * 
         * @return builder
         * 
         */
        public Builder periodicDataRekeying(Boolean periodicDataRekeying) {
            return periodicDataRekeying(Output.of(periodicDataRekeying));
        }

        /**
         * @param pipeExecutionPaused Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
         * 
         * @return builder
         * 
         */
        public Builder pipeExecutionPaused(@Nullable Output<Boolean> pipeExecutionPaused) {
            $.pipeExecutionPaused = pipeExecutionPaused;
            return this;
        }

        /**
         * @param pipeExecutionPaused Specifies whether to pause a running pipe, primarily in preparation for transferring ownership of the pipe to a different role ([more details](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused)). For more information, check [PIPE*EXECUTION*PAUSED docs](https://docs.snowflake.com/en/sql-reference/parameters#pipe-execution-paused).
         * 
         * @return builder
         * 
         */
        public Builder pipeExecutionPaused(Boolean pipeExecutionPaused) {
            return pipeExecutionPaused(Output.of(pipeExecutionPaused));
        }

        /**
         * @param preventUnloadToInlineUrl Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
         * 
         * @return builder
         * 
         */
        public Builder preventUnloadToInlineUrl(@Nullable Output<Boolean> preventUnloadToInlineUrl) {
            $.preventUnloadToInlineUrl = preventUnloadToInlineUrl;
            return this;
        }

        /**
         * @param preventUnloadToInlineUrl Specifies whether to prevent ad hoc data unload operations to external cloud storage locations (that is, [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements that specify the cloud storage URL and access settings directly in the statement). For an example, see [Unloading data from a table directly to files in an external location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location.html#label-copy-into-location-ad-hoc). For more information, check [PREVENT*UNLOAD*TO*INLINE*URL docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-inline-url).
         * 
         * @return builder
         * 
         */
        public Builder preventUnloadToInlineUrl(Boolean preventUnloadToInlineUrl) {
            return preventUnloadToInlineUrl(Output.of(preventUnloadToInlineUrl));
        }

        /**
         * @param preventUnloadToInternalStages Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
         * 
         * @return builder
         * 
         */
        public Builder preventUnloadToInternalStages(@Nullable Output<Boolean> preventUnloadToInternalStages) {
            $.preventUnloadToInternalStages = preventUnloadToInternalStages;
            return this;
        }

        /**
         * @param preventUnloadToInternalStages Specifies whether to prevent data unload operations to internal (Snowflake) stages using [COPY INTO location](https://docs.snowflake.com/en/sql-reference/sql/copy-into-location) statements. For more information, check [PREVENT*UNLOAD*TO*INTERNAL*STAGES docs](https://docs.snowflake.com/en/sql-reference/parameters#prevent-unload-to-internal-stages).
         * 
         * @return builder
         * 
         */
        public Builder preventUnloadToInternalStages(Boolean preventUnloadToInternalStages) {
            return preventUnloadToInternalStages(Output.of(preventUnloadToInternalStages));
        }

        /**
         * @param pythonProfilerModules Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
         * 
         * @return builder
         * 
         */
        public Builder pythonProfilerModules(@Nullable Output<String> pythonProfilerModules) {
            $.pythonProfilerModules = pythonProfilerModules;
            return this;
        }

        /**
         * @param pythonProfilerModules Specifies the list of Python modules to include in a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*MODULES docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-modules).
         * 
         * @return builder
         * 
         */
        public Builder pythonProfilerModules(String pythonProfilerModules) {
            return pythonProfilerModules(Output.of(pythonProfilerModules));
        }

        /**
         * @param pythonProfilerTargetStage Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
         * 
         * @return builder
         * 
         */
        public Builder pythonProfilerTargetStage(@Nullable Output<String> pythonProfilerTargetStage) {
            $.pythonProfilerTargetStage = pythonProfilerTargetStage;
            return this;
        }

        /**
         * @param pythonProfilerTargetStage Specifies the fully-qualified name of the stage in which to save a report when [profiling Python handler code](https://docs.snowflake.com/en/developer-guide/stored-procedure/python/procedure-python-profiler). For more information, check [PYTHON*PROFILER*TARGET_STAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#python-profiler-target-stage).
         * 
         * @return builder
         * 
         */
        public Builder pythonProfilerTargetStage(String pythonProfilerTargetStage) {
            return pythonProfilerTargetStage(Output.of(pythonProfilerTargetStage));
        }

        /**
         * @param queryTag Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
         * 
         * @return builder
         * 
         */
        public Builder queryTag(@Nullable Output<String> queryTag) {
            $.queryTag = queryTag;
            return this;
        }

        /**
         * @param queryTag Optional string that can be used to tag queries and other SQL statements executed within a session. The tags are displayed in the output of the [QUERY*HISTORY, QUERY*HISTORY*BY**](https://docs.snowflake.com/en/sql-reference/functions/query_history) functions. For more information, check [QUERY_TAG docs](https://docs.snowflake.com/en/sql-reference/parameters#query-tag).
         * 
         * @return builder
         * 
         */
        public Builder queryTag(String queryTag) {
            return queryTag(Output.of(queryTag));
        }

        /**
         * @param quotedIdentifiersIgnoreCase Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
         * 
         * @return builder
         * 
         */
        public Builder quotedIdentifiersIgnoreCase(@Nullable Output<Boolean> quotedIdentifiersIgnoreCase) {
            $.quotedIdentifiersIgnoreCase = quotedIdentifiersIgnoreCase;
            return this;
        }

        /**
         * @param quotedIdentifiersIgnoreCase Specifies whether letters in double-quoted object identifiers are stored and resolved as uppercase letters. By default, Snowflake preserves the case of alphabetic characters when storing and resolving double-quoted identifiers (see [Identifier resolution](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing)). You can use this parameter in situations in which [third-party applications always use double quotes around identifiers](https://docs.snowflake.com/en/sql-reference/identifiers-syntax.html#label-identifier-casing-parameter). For more information, check [QUOTED*IDENTIFIERS*IGNORE_CASE docs](https://docs.snowflake.com/en/sql-reference/parameters#quoted-identifiers-ignore-case).
         * 
         * @return builder
         * 
         */
        public Builder quotedIdentifiersIgnoreCase(Boolean quotedIdentifiersIgnoreCase) {
            return quotedIdentifiersIgnoreCase(Output.of(quotedIdentifiersIgnoreCase));
        }

        /**
         * @param replaceInvalidCharacters Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
         * 
         * @return builder
         * 
         */
        public Builder replaceInvalidCharacters(@Nullable Output<Boolean> replaceInvalidCharacters) {
            $.replaceInvalidCharacters = replaceInvalidCharacters;
            return this;
        }

        /**
         * @param replaceInvalidCharacters Specifies whether to replace invalid UTF-8 characters with the Unicode replacement character (�) in query results for [Apache Iceberg™ tables](https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table) that use an external catalog. For more information, check [REPLACE*INVALID*CHARACTERS docs](https://docs.snowflake.com/en/sql-reference/parameters#replace-invalid-characters).
         * 
         * @return builder
         * 
         */
        public Builder replaceInvalidCharacters(Boolean replaceInvalidCharacters) {
            return replaceInvalidCharacters(Output.of(replaceInvalidCharacters));
        }

        /**
         * @param requireStorageIntegrationForStageCreation Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
         * 
         * @return builder
         * 
         */
        public Builder requireStorageIntegrationForStageCreation(@Nullable Output<Boolean> requireStorageIntegrationForStageCreation) {
            $.requireStorageIntegrationForStageCreation = requireStorageIntegrationForStageCreation;
            return this;
        }

        /**
         * @param requireStorageIntegrationForStageCreation Specifies whether to require a storage integration object as cloud credentials when creating a named external stage (using [CREATE STAGE](https://docs.snowflake.com/en/sql-reference/sql/create-stage)) to access a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_CREATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-creation).
         * 
         * @return builder
         * 
         */
        public Builder requireStorageIntegrationForStageCreation(Boolean requireStorageIntegrationForStageCreation) {
            return requireStorageIntegrationForStageCreation(Output.of(requireStorageIntegrationForStageCreation));
        }

        /**
         * @param requireStorageIntegrationForStageOperation Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
         * 
         * @return builder
         * 
         */
        public Builder requireStorageIntegrationForStageOperation(@Nullable Output<Boolean> requireStorageIntegrationForStageOperation) {
            $.requireStorageIntegrationForStageOperation = requireStorageIntegrationForStageOperation;
            return this;
        }

        /**
         * @param requireStorageIntegrationForStageOperation Specifies whether to require using a named external stage that references a storage integration object as cloud credentials when loading data from or unloading data to a private cloud storage location. For more information, check [REQUIRE*STORAGE*INTEGRATION*FOR*STAGE_OPERATION docs](https://docs.snowflake.com/en/sql-reference/parameters#require-storage-integration-for-stage-operation).
         * 
         * @return builder
         * 
         */
        public Builder requireStorageIntegrationForStageOperation(Boolean requireStorageIntegrationForStageOperation) {
            return requireStorageIntegrationForStageOperation(Output.of(requireStorageIntegrationForStageOperation));
        }

        public Builder resourceMonitor(@Nullable Output<String> resourceMonitor) {
            $.resourceMonitor = resourceMonitor;
            return this;
        }

        public Builder resourceMonitor(String resourceMonitor) {
            return resourceMonitor(Output.of(resourceMonitor));
        }

        /**
         * @param rowsPerResultset Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
         * 
         * @return builder
         * 
         */
        public Builder rowsPerResultset(@Nullable Output<Integer> rowsPerResultset) {
            $.rowsPerResultset = rowsPerResultset;
            return this;
        }

        /**
         * @param rowsPerResultset Specifies the maximum number of rows returned in a result set. A value of 0 specifies no maximum. For more information, check [ROWS*PER*RESULTSET docs](https://docs.snowflake.com/en/sql-reference/parameters#rows-per-resultset).
         * 
         * @return builder
         * 
         */
        public Builder rowsPerResultset(Integer rowsPerResultset) {
            return rowsPerResultset(Output.of(rowsPerResultset));
        }

        /**
         * @param s3StageVpceDnsName Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
         * 
         * @return builder
         * 
         */
        public Builder s3StageVpceDnsName(@Nullable Output<String> s3StageVpceDnsName) {
            $.s3StageVpceDnsName = s3StageVpceDnsName;
            return this;
        }

        /**
         * @param s3StageVpceDnsName Specifies the DNS name of an Amazon S3 interface endpoint. Requests sent to the internal stage of an account via [AWS PrivateLink for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/userguide/privatelink-interface-endpoints.html) use this endpoint to connect. For more information, see [Accessing Internal stages with dedicated interface endpoints](https://docs.snowflake.com/en/user-guide/private-internal-stages-aws.html#label-aws-privatelink-internal-stage-network-isolation). For more information, check [S3*STAGE*VPCE*DNS*NAME docs](https://docs.snowflake.com/en/sql-reference/parameters#s3-stage-vpce-dns-name).
         * 
         * @return builder
         * 
         */
        public Builder s3StageVpceDnsName(String s3StageVpceDnsName) {
            return s3StageVpceDnsName(Output.of(s3StageVpceDnsName));
        }

        /**
         * @param samlIdentityProvider Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
         * 
         * @return builder
         * 
         */
        public Builder samlIdentityProvider(@Nullable Output<String> samlIdentityProvider) {
            $.samlIdentityProvider = samlIdentityProvider;
            return this;
        }

        /**
         * @param samlIdentityProvider Enables federated authentication. This deprecated parameter enables federated authentication ([more details](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider)). For more information, check [SAML*IDENTITY*PROVIDER docs](https://docs.snowflake.com/en/sql-reference/parameters#saml-identity-provider).
         * 
         * @return builder
         * 
         */
        public Builder samlIdentityProvider(String samlIdentityProvider) {
            return samlIdentityProvider(Output.of(samlIdentityProvider));
        }

        /**
         * @param searchPath Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
         * 
         * @return builder
         * 
         */
        public Builder searchPath(@Nullable Output<String> searchPath) {
            $.searchPath = searchPath;
            return this;
        }

        /**
         * @param searchPath Specifies the path to search to resolve unqualified object names in queries. For more information, see [Name resolution in queries](https://docs.snowflake.com/en/sql-reference/name-resolution.html#label-object-name-resolution-search-path). Comma-separated list of identifiers. An identifier can be a fully or partially qualified schema name. For more information, check [SEARCH_PATH docs](https://docs.snowflake.com/en/sql-reference/parameters#search-path).
         * 
         * @return builder
         * 
         */
        public Builder searchPath(String searchPath) {
            return searchPath(Output.of(searchPath));
        }

        /**
         * @param serverlessTaskMaxStatementSize Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
         * 
         * @return builder
         * 
         */
        public Builder serverlessTaskMaxStatementSize(@Nullable Output<String> serverlessTaskMaxStatementSize) {
            $.serverlessTaskMaxStatementSize = serverlessTaskMaxStatementSize;
            return this;
        }

        /**
         * @param serverlessTaskMaxStatementSize Specifies the maximum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MAX*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-max-statement-size).
         * 
         * @return builder
         * 
         */
        public Builder serverlessTaskMaxStatementSize(String serverlessTaskMaxStatementSize) {
            return serverlessTaskMaxStatementSize(Output.of(serverlessTaskMaxStatementSize));
        }

        /**
         * @param serverlessTaskMinStatementSize Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
         * 
         * @return builder
         * 
         */
        public Builder serverlessTaskMinStatementSize(@Nullable Output<String> serverlessTaskMinStatementSize) {
            $.serverlessTaskMinStatementSize = serverlessTaskMinStatementSize;
            return this;
        }

        /**
         * @param serverlessTaskMinStatementSize Specifies the minimum allowed warehouse size for [Serverless tasks](https://docs.snowflake.com/en/user-guide/tasks-intro.html#label-tasks-compute-resources-serverless). Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [SERVERLESS*TASK*MIN*STATEMENT*SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#serverless-task-min-statement-size).
         * 
         * @return builder
         * 
         */
        public Builder serverlessTaskMinStatementSize(String serverlessTaskMinStatementSize) {
            return serverlessTaskMinStatementSize(Output.of(serverlessTaskMinStatementSize));
        }

        /**
         * @param sessionPolicy Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
         * 
         * @return builder
         * 
         */
        public Builder sessionPolicy(@Nullable Output<String> sessionPolicy) {
            $.sessionPolicy = sessionPolicy;
            return this;
        }

        /**
         * @param sessionPolicy Specifies [session policy](https://docs.snowflake.com/en/user-guide/session-policies-using) for the current account.
         * 
         * @return builder
         * 
         */
        public Builder sessionPolicy(String sessionPolicy) {
            return sessionPolicy(Output.of(sessionPolicy));
        }

        /**
         * @param showOutputs Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
         * 
         * @return builder
         * 
         */
        public Builder showOutputs(@Nullable Output<List<CurrentOrganizationAccountShowOutputArgs>> showOutputs) {
            $.showOutputs = showOutputs;
            return this;
        }

        /**
         * @param showOutputs Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
         * 
         * @return builder
         * 
         */
        public Builder showOutputs(List<CurrentOrganizationAccountShowOutputArgs> showOutputs) {
            return showOutputs(Output.of(showOutputs));
        }

        /**
         * @param showOutputs Saved output for the result of `SHOW ORGANIZATION ACCOUNTS`
         * 
         * @return builder
         * 
         */
        public Builder showOutputs(CurrentOrganizationAccountShowOutputArgs... showOutputs) {
            return showOutputs(List.of(showOutputs));
        }

        /**
         * @param simulatedDataSharingConsumer Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
         * 
         * @return builder
         * 
         */
        public Builder simulatedDataSharingConsumer(@Nullable Output<String> simulatedDataSharingConsumer) {
            $.simulatedDataSharingConsumer = simulatedDataSharingConsumer;
            return this;
        }

        /**
         * @param simulatedDataSharingConsumer Specifies the name of a consumer account to simulate for testing/validating shared data, particularly shared secure views. When this parameter is set in a session, shared views return rows as if executed in the specified consumer account rather than the provider account. For more information, check [SIMULATED*DATA*SHARING_CONSUMER docs](https://docs.snowflake.com/en/sql-reference/parameters#simulated-data-sharing-consumer).
         * 
         * @return builder
         * 
         */
        public Builder simulatedDataSharingConsumer(String simulatedDataSharingConsumer) {
            return simulatedDataSharingConsumer(Output.of(simulatedDataSharingConsumer));
        }

        /**
         * @param ssoLoginPage This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
         * 
         * @return builder
         * 
         */
        public Builder ssoLoginPage(@Nullable Output<Boolean> ssoLoginPage) {
            $.ssoLoginPage = ssoLoginPage;
            return this;
        }

        /**
         * @param ssoLoginPage This deprecated parameter disables preview mode for testing SSO (after enabling federated authentication) before rolling it out to users. For more information, check [SSO*LOGIN*PAGE docs](https://docs.snowflake.com/en/sql-reference/parameters#sso-login-page).
         * 
         * @return builder
         * 
         */
        public Builder ssoLoginPage(Boolean ssoLoginPage) {
            return ssoLoginPage(Output.of(ssoLoginPage));
        }

        /**
         * @param statementQueuedTimeoutInSeconds Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder statementQueuedTimeoutInSeconds(@Nullable Output<Integer> statementQueuedTimeoutInSeconds) {
            $.statementQueuedTimeoutInSeconds = statementQueuedTimeoutInSeconds;
            return this;
        }

        /**
         * @param statementQueuedTimeoutInSeconds Amount of time, in seconds, a SQL statement (query, DDL, DML, etc.) remains queued for a warehouse before it is canceled by the system. This parameter can be used in conjunction with the [MAX*CONCURRENCY*LEVEL](https://docs.snowflake.com/en/sql-reference/parameters#label-max-concurrency-level) parameter to ensure a warehouse is never backlogged. For more information, check [STATEMENT*QUEUED*TIMEOUT*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-queued-timeout-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder statementQueuedTimeoutInSeconds(Integer statementQueuedTimeoutInSeconds) {
            return statementQueuedTimeoutInSeconds(Output.of(statementQueuedTimeoutInSeconds));
        }

        /**
         * @param statementTimeoutInSeconds Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder statementTimeoutInSeconds(@Nullable Output<Integer> statementTimeoutInSeconds) {
            $.statementTimeoutInSeconds = statementTimeoutInSeconds;
            return this;
        }

        /**
         * @param statementTimeoutInSeconds Amount of time, in seconds, after which a running SQL statement (query, DDL, DML, etc.) is canceled by the system. For more information, check [STATEMENT*TIMEOUT*IN_SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#statement-timeout-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder statementTimeoutInSeconds(Integer statementTimeoutInSeconds) {
            return statementTimeoutInSeconds(Output.of(statementTimeoutInSeconds));
        }

        /**
         * @param storageSerializationPolicy Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
         * 
         * @return builder
         * 
         */
        public Builder storageSerializationPolicy(@Nullable Output<String> storageSerializationPolicy) {
            $.storageSerializationPolicy = storageSerializationPolicy;
            return this;
        }

        /**
         * @param storageSerializationPolicy Specifies the storage serialization policy for Snowflake-managed [Apache Iceberg™ tables](https://docs.snowflake.com/en/user-guide/tables-iceberg). Valid values are (case-insensitive): `COMPATIBLE` | `OPTIMIZED`. For more information, check [STORAGE*SERIALIZATION*POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#storage-serialization-policy).
         * 
         * @return builder
         * 
         */
        public Builder storageSerializationPolicy(String storageSerializationPolicy) {
            return storageSerializationPolicy(Output.of(storageSerializationPolicy));
        }

        /**
         * @param strictJsonOutput This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
         * 
         * @return builder
         * 
         */
        public Builder strictJsonOutput(@Nullable Output<Boolean> strictJsonOutput) {
            $.strictJsonOutput = strictJsonOutput;
            return this;
        }

        /**
         * @param strictJsonOutput This parameter specifies whether JSON output in a session is compatible with the general standard (as described by [http://json.org](http://json.org)). By design, Snowflake allows JSON input that contains non-standard values; however, these non-standard values might result in Snowflake outputting JSON that is incompatible with other platforms and languages. This parameter, when enabled, ensures that Snowflake outputs valid/compatible JSON. For more information, check [STRICT*JSON*OUTPUT docs](https://docs.snowflake.com/en/sql-reference/parameters#strict-json-output).
         * 
         * @return builder
         * 
         */
        public Builder strictJsonOutput(Boolean strictJsonOutput) {
            return strictJsonOutput(Output.of(strictJsonOutput));
        }

        /**
         * @param suspendTaskAfterNumFailures Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
         * 
         * @return builder
         * 
         */
        public Builder suspendTaskAfterNumFailures(@Nullable Output<Integer> suspendTaskAfterNumFailures) {
            $.suspendTaskAfterNumFailures = suspendTaskAfterNumFailures;
            return this;
        }

        /**
         * @param suspendTaskAfterNumFailures Specifies the number of consecutive failed task runs after which the current task is suspended automatically. The default is 0 (no automatic suspension). For more information, check [SUSPEND*TASK*AFTER*NUM*FAILURES docs](https://docs.snowflake.com/en/sql-reference/parameters#suspend-task-after-num-failures).
         * 
         * @return builder
         * 
         */
        public Builder suspendTaskAfterNumFailures(Integer suspendTaskAfterNumFailures) {
            return suspendTaskAfterNumFailures(Output.of(suspendTaskAfterNumFailures));
        }

        /**
         * @param taskAutoRetryAttempts Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
         * 
         * @return builder
         * 
         */
        public Builder taskAutoRetryAttempts(@Nullable Output<Integer> taskAutoRetryAttempts) {
            $.taskAutoRetryAttempts = taskAutoRetryAttempts;
            return this;
        }

        /**
         * @param taskAutoRetryAttempts Specifies the number of automatic task graph retry attempts. If any task graphs complete in a FAILED state, Snowflake can automatically retry the task graphs from the last task in the graph that failed. For more information, check [TASK*AUTO*RETRY_ATTEMPTS docs](https://docs.snowflake.com/en/sql-reference/parameters#task-auto-retry-attempts).
         * 
         * @return builder
         * 
         */
        public Builder taskAutoRetryAttempts(Integer taskAutoRetryAttempts) {
            return taskAutoRetryAttempts(Output.of(taskAutoRetryAttempts));
        }

        /**
         * @param timeInputFormat Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
         * 
         * @return builder
         * 
         */
        public Builder timeInputFormat(@Nullable Output<String> timeInputFormat) {
            $.timeInputFormat = timeInputFormat;
            return this;
        }

        /**
         * @param timeInputFormat Specifies the input format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported time format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of times stored in the system during the session). For more information, check [TIME*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-input-format).
         * 
         * @return builder
         * 
         */
        public Builder timeInputFormat(String timeInputFormat) {
            return timeInputFormat(Output.of(timeInputFormat));
        }

        /**
         * @param timeOutputFormat Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timeOutputFormat(@Nullable Output<String> timeOutputFormat) {
            $.timeOutputFormat = timeOutputFormat;
            return this;
        }

        /**
         * @param timeOutputFormat Specifies the display format for the TIME data type. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIME*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#time-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timeOutputFormat(String timeOutputFormat) {
            return timeOutputFormat(Output.of(timeOutputFormat));
        }

        /**
         * @param timestampDayIsAlways24h Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
         * 
         * @return builder
         * 
         */
        public Builder timestampDayIsAlways24h(@Nullable Output<Boolean> timestampDayIsAlways24h) {
            $.timestampDayIsAlways24h = timestampDayIsAlways24h;
            return this;
        }

        /**
         * @param timestampDayIsAlways24h Specifies whether the [DATEADD](https://docs.snowflake.com/en/sql-reference/functions/dateadd) function (and its aliases) always consider a day to be exactly 24 hours for expressions that span multiple days. For more information, check [TIMESTAMP*DAY*IS*ALWAYS*24H docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-day-is-always-24h).
         * 
         * @return builder
         * 
         */
        public Builder timestampDayIsAlways24h(Boolean timestampDayIsAlways24h) {
            return timestampDayIsAlways24h(Output.of(timestampDayIsAlways24h));
        }

        /**
         * @param timestampInputFormat Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampInputFormat(@Nullable Output<String> timestampInputFormat) {
            $.timestampInputFormat = timestampInputFormat;
            return this;
        }

        /**
         * @param timestampInputFormat Specifies the input format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). Any valid, supported timestamp format or AUTO (AUTO specifies that Snowflake attempts to automatically detect the format of timestamps stored in the system during the session). For more information, check [TIMESTAMP*INPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-input-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampInputFormat(String timestampInputFormat) {
            return timestampInputFormat(Output.of(timestampInputFormat));
        }

        /**
         * @param timestampLtzOutputFormat Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampLtzOutputFormat(@Nullable Output<String> timestampLtzOutputFormat) {
            $.timestampLtzOutputFormat = timestampLtzOutputFormat;
            return this;
        }

        /**
         * @param timestampLtzOutputFormat Specifies the display format for the TIMESTAMP*LTZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*LTZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ltz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampLtzOutputFormat(String timestampLtzOutputFormat) {
            return timestampLtzOutputFormat(Output.of(timestampLtzOutputFormat));
        }

        /**
         * @param timestampNtzOutputFormat Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check *NTZ*OUTPUT*FORMAT docs[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampNtzOutputFormat(@Nullable Output<String> timestampNtzOutputFormat) {
            $.timestampNtzOutputFormat = timestampNtzOutputFormat;
            return this;
        }

        /**
         * @param timestampNtzOutputFormat Specifies the display format for the TIMESTAMP*NTZ data type. For more information, check *NTZ*OUTPUT*FORMAT docs[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-ntz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampNtzOutputFormat(String timestampNtzOutputFormat) {
            return timestampNtzOutputFormat(Output.of(timestampNtzOutputFormat));
        }

        /**
         * @param timestampOutputFormat Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampOutputFormat(@Nullable Output<String> timestampOutputFormat) {
            $.timestampOutputFormat = timestampOutputFormat;
            return this;
        }

        /**
         * @param timestampOutputFormat Specifies the display format for the TIMESTAMP data type alias. For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampOutputFormat(String timestampOutputFormat) {
            return timestampOutputFormat(Output.of(timestampOutputFormat));
        }

        /**
         * @param timestampTypeMapping Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
         * 
         * @return builder
         * 
         */
        public Builder timestampTypeMapping(@Nullable Output<String> timestampTypeMapping) {
            $.timestampTypeMapping = timestampTypeMapping;
            return this;
        }

        /**
         * @param timestampTypeMapping Specifies the TIMESTAMP** variation that the TIMESTAMP data type alias maps to. Valid values are (case-insensitive): `TIMESTAMP_LTZ` | `TIMESTAMP_NTZ` | `TIMESTAMP_TZ`. For more information, check [TIMESTAMP*TYPE_MAPPING docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-type-mapping).
         * 
         * @return builder
         * 
         */
        public Builder timestampTypeMapping(String timestampTypeMapping) {
            return timestampTypeMapping(Output.of(timestampTypeMapping));
        }

        /**
         * @param timestampTzOutputFormat Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampTzOutputFormat(@Nullable Output<String> timestampTzOutputFormat) {
            $.timestampTzOutputFormat = timestampTzOutputFormat;
            return this;
        }

        /**
         * @param timestampTzOutputFormat Specifies the display format for the TIMESTAMP*TZ data type. If no format is specified, defaults to *OUTPUT*FORMAT[TIMESTAMP](https://docs.snowflake.com/en/sql-reference/parameters#label-timestamp-output-format). For more information, see [Date and time input and output formats](https://docs.snowflake.com/en/sql-reference/date-time-input-output). For more information, check [TIMESTAMP*TZ*OUTPUT*FORMAT docs](https://docs.snowflake.com/en/sql-reference/parameters#timestamp-tz-output-format).
         * 
         * @return builder
         * 
         */
        public Builder timestampTzOutputFormat(String timestampTzOutputFormat) {
            return timestampTzOutputFormat(Output.of(timestampTzOutputFormat));
        }

        /**
         * @param timezone Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Specifies the time zone for the session. You can specify a [time zone name](https://data.iana.org/time-zones/tzdb-2021a/zone1970.tab) or a [link name](https://data.iana.org/time-zones/tzdb-2021a/backward) from release 2021a of the [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/Los_Angeles, Europe/London, UTC, Etc/GMT, etc.). For more information, check [TIMEZONE docs](https://docs.snowflake.com/en/sql-reference/parameters#timezone).
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param traceLevel Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
         * 
         * @return builder
         * 
         */
        public Builder traceLevel(@Nullable Output<String> traceLevel) {
            $.traceLevel = traceLevel;
            return this;
        }

        /**
         * @param traceLevel Controls how trace events are ingested into the event table. For more information about trace levels, see [Setting trace level](https://docs.snowflake.com/en/developer-guide/logging-tracing/tracing-trace-level). Valid values are (case-insensitive): `ALWAYS` | `ON_EVENT` | `PROPAGATE` | `OFF`. For more information, check [TRACE_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#trace-level).
         * 
         * @return builder
         * 
         */
        public Builder traceLevel(String traceLevel) {
            return traceLevel(Output.of(traceLevel));
        }

        /**
         * @param transactionAbortOnError Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
         * 
         * @return builder
         * 
         */
        public Builder transactionAbortOnError(@Nullable Output<Boolean> transactionAbortOnError) {
            $.transactionAbortOnError = transactionAbortOnError;
            return this;
        }

        /**
         * @param transactionAbortOnError Specifies the action to perform when a statement issued within a non-autocommit transaction returns with an error. For more information, check [TRANSACTION*ABORT*ON_ERROR docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-abort-on-error).
         * 
         * @return builder
         * 
         */
        public Builder transactionAbortOnError(Boolean transactionAbortOnError) {
            return transactionAbortOnError(Output.of(transactionAbortOnError));
        }

        /**
         * @param transactionDefaultIsolationLevel Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
         * 
         * @return builder
         * 
         */
        public Builder transactionDefaultIsolationLevel(@Nullable Output<String> transactionDefaultIsolationLevel) {
            $.transactionDefaultIsolationLevel = transactionDefaultIsolationLevel;
            return this;
        }

        /**
         * @param transactionDefaultIsolationLevel Specifies the isolation level for transactions in the user session. Valid values are (case-insensitive): `READ COMMITTED`. For more information, check [TRANSACTION*DEFAULT*ISOLATION_LEVEL docs](https://docs.snowflake.com/en/sql-reference/parameters#transaction-default-isolation-level).
         * 
         * @return builder
         * 
         */
        public Builder transactionDefaultIsolationLevel(String transactionDefaultIsolationLevel) {
            return transactionDefaultIsolationLevel(Output.of(transactionDefaultIsolationLevel));
        }

        /**
         * @param twoDigitCenturyStart Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
         * 
         * @return builder
         * 
         */
        public Builder twoDigitCenturyStart(@Nullable Output<Integer> twoDigitCenturyStart) {
            $.twoDigitCenturyStart = twoDigitCenturyStart;
            return this;
        }

        /**
         * @param twoDigitCenturyStart Specifies the “century start” year for 2-digit years (i.e. the earliest year such dates can represent). This parameter prevents ambiguous dates when importing or converting data with the `YY` date format component (i.e. years represented as 2 digits). For more information, check [TWO*DIGIT*CENTURY_START docs](https://docs.snowflake.com/en/sql-reference/parameters#two-digit-century-start).
         * 
         * @return builder
         * 
         */
        public Builder twoDigitCenturyStart(Integer twoDigitCenturyStart) {
            return twoDigitCenturyStart(Output.of(twoDigitCenturyStart));
        }

        /**
         * @param unsupportedDdlAction Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
         * 
         * @return builder
         * 
         */
        public Builder unsupportedDdlAction(@Nullable Output<String> unsupportedDdlAction) {
            $.unsupportedDdlAction = unsupportedDdlAction;
            return this;
        }

        /**
         * @param unsupportedDdlAction Determines if an unsupported (i.e. non-default) value specified for a constraint property returns an error. For more information, check [UNSUPPORTED*DDL*ACTION docs](https://docs.snowflake.com/en/sql-reference/parameters#unsupported-ddl-action).
         * 
         * @return builder
         * 
         */
        public Builder unsupportedDdlAction(String unsupportedDdlAction) {
            return unsupportedDdlAction(Output.of(unsupportedDdlAction));
        }

        /**
         * @param useCachedResult Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
         * 
         * @return builder
         * 
         */
        public Builder useCachedResult(@Nullable Output<Boolean> useCachedResult) {
            $.useCachedResult = useCachedResult;
            return this;
        }

        /**
         * @param useCachedResult Specifies whether to reuse persisted query results, if available, when a matching query is submitted. For more information, check [USE*CACHED*RESULT docs](https://docs.snowflake.com/en/sql-reference/parameters#use-cached-result).
         * 
         * @return builder
         * 
         */
        public Builder useCachedResult(Boolean useCachedResult) {
            return useCachedResult(Output.of(useCachedResult));
        }

        /**
         * @param userTaskManagedInitialWarehouseSize Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
         * 
         * @return builder
         * 
         */
        public Builder userTaskManagedInitialWarehouseSize(@Nullable Output<String> userTaskManagedInitialWarehouseSize) {
            $.userTaskManagedInitialWarehouseSize = userTaskManagedInitialWarehouseSize;
            return this;
        }

        /**
         * @param userTaskManagedInitialWarehouseSize Specifies the size of the compute resources to provision for the first run of the task, before a task history is available for Snowflake to determine an ideal size. Once a task has successfully completed a few runs, Snowflake ignores this parameter setting. Valid values are (case-insensitive): `XSMALL` | `X-SMALL` | `SMALL` | `MEDIUM` | `LARGE` | `XLARGE` | `X-LARGE` | `XXLARGE` | `X2LARGE` | `2X-LARGE` | `XXXLARGE` | `X3LARGE` | `3X-LARGE` | `X4LARGE` | `4X-LARGE` | `X5LARGE` | `5X-LARGE` | `X6LARGE` | `6X-LARGE`. For more information, check [USER*TASK*MANAGED*INITIAL*WAREHOUSE_SIZE docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-managed-initial-warehouse-size).
         * 
         * @return builder
         * 
         */
        public Builder userTaskManagedInitialWarehouseSize(String userTaskManagedInitialWarehouseSize) {
            return userTaskManagedInitialWarehouseSize(Output.of(userTaskManagedInitialWarehouseSize));
        }

        /**
         * @param userTaskMinimumTriggerIntervalInSeconds Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder userTaskMinimumTriggerIntervalInSeconds(@Nullable Output<Integer> userTaskMinimumTriggerIntervalInSeconds) {
            $.userTaskMinimumTriggerIntervalInSeconds = userTaskMinimumTriggerIntervalInSeconds;
            return this;
        }

        /**
         * @param userTaskMinimumTriggerIntervalInSeconds Minimum amount of time between Triggered Task executions in seconds For more information, check [USER*TASK*MINIMUM*TRIGGER*INTERVAL*IN*SECONDS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-minimum-trigger-interval-in-seconds).
         * 
         * @return builder
         * 
         */
        public Builder userTaskMinimumTriggerIntervalInSeconds(Integer userTaskMinimumTriggerIntervalInSeconds) {
            return userTaskMinimumTriggerIntervalInSeconds(Output.of(userTaskMinimumTriggerIntervalInSeconds));
        }

        /**
         * @param userTaskTimeoutMs Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
         * 
         * @return builder
         * 
         */
        public Builder userTaskTimeoutMs(@Nullable Output<Integer> userTaskTimeoutMs) {
            $.userTaskTimeoutMs = userTaskTimeoutMs;
            return this;
        }

        /**
         * @param userTaskTimeoutMs Specifies the time limit on a single run of the task before it times out (in milliseconds). For more information, check [USER*TASK*TIMEOUT_MS docs](https://docs.snowflake.com/en/sql-reference/parameters#user-task-timeout-ms).
         * 
         * @return builder
         * 
         */
        public Builder userTaskTimeoutMs(Integer userTaskTimeoutMs) {
            return userTaskTimeoutMs(Output.of(userTaskTimeoutMs));
        }

        /**
         * @param weekOfYearPolicy Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
         * 
         * @return builder
         * 
         */
        public Builder weekOfYearPolicy(@Nullable Output<Integer> weekOfYearPolicy) {
            $.weekOfYearPolicy = weekOfYearPolicy;
            return this;
        }

        /**
         * @param weekOfYearPolicy Specifies how the weeks in a given year are computed. `0`: The semantics used are equivalent to the ISO semantics, in which a week belongs to a given year if at least 4 days of that week are in that year. `1`: January 1 is included in the first week of the year and December 31 is included in the last week of the year. For more information, check [WEEK*OF*YEAR_POLICY docs](https://docs.snowflake.com/en/sql-reference/parameters#week-of-year-policy).
         * 
         * @return builder
         * 
         */
        public Builder weekOfYearPolicy(Integer weekOfYearPolicy) {
            return weekOfYearPolicy(Output.of(weekOfYearPolicy));
        }

        /**
         * @param weekStart Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
         * 
         * @return builder
         * 
         */
        public Builder weekStart(@Nullable Output<Integer> weekStart) {
            $.weekStart = weekStart;
            return this;
        }

        /**
         * @param weekStart Specifies the first day of the week (used by week-related date functions). `0`: Legacy Snowflake behavior is used (i.e. ISO-like semantics). `1` (Monday) to `7` (Sunday): All the week-related functions use weeks that start on the specified day of the week. For more information, check [WEEK_START docs](https://docs.snowflake.com/en/sql-reference/parameters#week-start).
         * 
         * @return builder
         * 
         */
        public Builder weekStart(Integer weekStart) {
            return weekStart(Output.of(weekStart));
        }

        public CurrentOrganizationAccountState build() {
            return $;
        }
    }

}
