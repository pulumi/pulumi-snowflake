// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.snowflake.inputs.GetDatabasesLimitArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabasesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabasesArgs Empty = new GetDatabasesArgs();

    @Import(name="like")
    private @Nullable Output<String> like;

    public Optional<Output<String>> like() {
        return Optional.ofNullable(this.like);
    }

    @Import(name="limit")
    private @Nullable Output<GetDatabasesLimitArgs> limit;

    public Optional<Output<GetDatabasesLimitArgs>> limit() {
        return Optional.ofNullable(this.limit);
    }

    @Import(name="startsWith")
    private @Nullable Output<String> startsWith;

    public Optional<Output<String>> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }

    @Import(name="withDescribe")
    private @Nullable Output<Boolean> withDescribe;

    public Optional<Output<Boolean>> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    @Import(name="withParameters")
    private @Nullable Output<Boolean> withParameters;

    public Optional<Output<Boolean>> withParameters() {
        return Optional.ofNullable(this.withParameters);
    }

    private GetDatabasesArgs() {}

    private GetDatabasesArgs(GetDatabasesArgs $) {
        this.like = $.like;
        this.limit = $.limit;
        this.startsWith = $.startsWith;
        this.withDescribe = $.withDescribe;
        this.withParameters = $.withParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabasesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabasesArgs $;

        public Builder() {
            $ = new GetDatabasesArgs();
        }

        public Builder(GetDatabasesArgs defaults) {
            $ = new GetDatabasesArgs(Objects.requireNonNull(defaults));
        }

        public Builder like(@Nullable Output<String> like) {
            $.like = like;
            return this;
        }

        public Builder like(String like) {
            return like(Output.of(like));
        }

        public Builder limit(@Nullable Output<GetDatabasesLimitArgs> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(GetDatabasesLimitArgs limit) {
            return limit(Output.of(limit));
        }

        public Builder startsWith(@Nullable Output<String> startsWith) {
            $.startsWith = startsWith;
            return this;
        }

        public Builder startsWith(String startsWith) {
            return startsWith(Output.of(startsWith));
        }

        public Builder withDescribe(@Nullable Output<Boolean> withDescribe) {
            $.withDescribe = withDescribe;
            return this;
        }

        public Builder withDescribe(Boolean withDescribe) {
            return withDescribe(Output.of(withDescribe));
        }

        public Builder withParameters(@Nullable Output<Boolean> withParameters) {
            $.withParameters = withParameters;
            return this;
        }

        public Builder withParameters(Boolean withParameters) {
            return withParameters(Output.of(withParameters));
        }

        public GetDatabasesArgs build() {
            return $;
        }
    }

}
