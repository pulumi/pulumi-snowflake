// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.snowflake.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.snowflake.outputs.GetAuthenticationPoliciesAuthenticationPolicy;
import com.pulumi.snowflake.outputs.GetAuthenticationPoliciesIn;
import com.pulumi.snowflake.outputs.GetAuthenticationPoliciesLimit;
import com.pulumi.snowflake.outputs.GetAuthenticationPoliciesOn;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuthenticationPoliciesResult {
    /**
     * @return Holds the aggregated output of all authentication policies details queries.
     * 
     */
    private List<GetAuthenticationPoliciesAuthenticationPolicy> authenticationPolicies;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return IN clause to filter the list of objects
     * 
     */
    private @Nullable GetAuthenticationPoliciesIn in;
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    private @Nullable String like;
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    private @Nullable GetAuthenticationPoliciesLimit limit;
    /**
     * @return Lists the policies that are effective on the specified object.
     * 
     */
    private @Nullable GetAuthenticationPoliciesOn on;
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    private @Nullable String startsWith;
    /**
     * @return (Default: `true`) Runs DESC AUTHENTICATION POLICY for each service returned by SHOW AUTHENTICATION POLICIES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    private @Nullable Boolean withDescribe;

    private GetAuthenticationPoliciesResult() {}
    /**
     * @return Holds the aggregated output of all authentication policies details queries.
     * 
     */
    public List<GetAuthenticationPoliciesAuthenticationPolicy> authenticationPolicies() {
        return this.authenticationPolicies;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IN clause to filter the list of objects
     * 
     */
    public Optional<GetAuthenticationPoliciesIn> in() {
        return Optional.ofNullable(this.in);
    }
    /**
     * @return Filters the output with **case-insensitive** pattern, with support for SQL wildcard characters (`%` and `_`).
     * 
     */
    public Optional<String> like() {
        return Optional.ofNullable(this.like);
    }
    /**
     * @return Limits the number of rows returned. If the `limit.from` is set, then the limit will start from the first element matched by the expression. The expression is only used to match with the first element, later on the elements are not matched by the prefix, but you can enforce a certain pattern with `startsWith` or `like`.
     * 
     */
    public Optional<GetAuthenticationPoliciesLimit> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return Lists the policies that are effective on the specified object.
     * 
     */
    public Optional<GetAuthenticationPoliciesOn> on() {
        return Optional.ofNullable(this.on);
    }
    /**
     * @return Filters the output with **case-sensitive** characters indicating the beginning of the object name.
     * 
     */
    public Optional<String> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }
    /**
     * @return (Default: `true`) Runs DESC AUTHENTICATION POLICY for each service returned by SHOW AUTHENTICATION POLICIES. The output of describe is saved to the description field. By default this value is set to true.
     * 
     */
    public Optional<Boolean> withDescribe() {
        return Optional.ofNullable(this.withDescribe);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthenticationPoliciesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAuthenticationPoliciesAuthenticationPolicy> authenticationPolicies;
        private String id;
        private @Nullable GetAuthenticationPoliciesIn in;
        private @Nullable String like;
        private @Nullable GetAuthenticationPoliciesLimit limit;
        private @Nullable GetAuthenticationPoliciesOn on;
        private @Nullable String startsWith;
        private @Nullable Boolean withDescribe;
        public Builder() {}
        public Builder(GetAuthenticationPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationPolicies = defaults.authenticationPolicies;
    	      this.id = defaults.id;
    	      this.in = defaults.in;
    	      this.like = defaults.like;
    	      this.limit = defaults.limit;
    	      this.on = defaults.on;
    	      this.startsWith = defaults.startsWith;
    	      this.withDescribe = defaults.withDescribe;
        }

        @CustomType.Setter
        public Builder authenticationPolicies(List<GetAuthenticationPoliciesAuthenticationPolicy> authenticationPolicies) {
            if (authenticationPolicies == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationPoliciesResult", "authenticationPolicies");
            }
            this.authenticationPolicies = authenticationPolicies;
            return this;
        }
        public Builder authenticationPolicies(GetAuthenticationPoliciesAuthenticationPolicy... authenticationPolicies) {
            return authenticationPolicies(List.of(authenticationPolicies));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAuthenticationPoliciesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder in(@Nullable GetAuthenticationPoliciesIn in) {

            this.in = in;
            return this;
        }
        @CustomType.Setter
        public Builder like(@Nullable String like) {

            this.like = like;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable GetAuthenticationPoliciesLimit limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder on(@Nullable GetAuthenticationPoliciesOn on) {

            this.on = on;
            return this;
        }
        @CustomType.Setter
        public Builder startsWith(@Nullable String startsWith) {

            this.startsWith = startsWith;
            return this;
        }
        @CustomType.Setter
        public Builder withDescribe(@Nullable Boolean withDescribe) {

            this.withDescribe = withDescribe;
            return this;
        }
        public GetAuthenticationPoliciesResult build() {
            final var _resultValue = new GetAuthenticationPoliciesResult();
            _resultValue.authenticationPolicies = authenticationPolicies;
            _resultValue.id = id;
            _resultValue.in = in;
            _resultValue.like = like;
            _resultValue.limit = limit;
            _resultValue.on = on;
            _resultValue.startsWith = startsWith;
            _resultValue.withDescribe = withDescribe;
            return _resultValue;
        }
    }
}
